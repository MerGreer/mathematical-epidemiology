<chapter xml:id="ch-the-next-generation-method" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>* The Next Generation Method</title>

    <p>
      <term>***This chapter is under construction.***</term>
    </p>

    <introduction xml:id="intro-next-generation-method">
      <objectives>
        <ul>
          <li>
            <p>
              Learn to complete all the steps in the Next Generation Method for relating the epidemiological quantity <m>\mathcal{R}_0</m> to parameters and other quantities used in a compartmental model
            </p>
          </li>
          <li>
            <p>
              Build understanding of compartmental models as a way to map disease spread, or other kinds of spread, as a generation-to-generation phenomenon
            </p>
          </li>
          <li>
            <p>
              Increase awareness of how eigenvalues show us specific information about the long-term behavior of a system of differential equations
            </p>
          </li>
        </ul>
      </objectives>
  
      
      <p>
        This chapter uses many linear algebra concepts. Before beginning, we pause to review.
      </p>
      
      <exploration xml:id="expl-activity-next-generation-method">
        <title>Linear Algebra Review</title>
        <introduction>
          <p>
            To do the work of this chapter, it will help to have certain linear algebra concepts freshly in mind. This Exploration prepares us for what comes next. 
          </p>            
        </introduction>
        <task>
          <statement>
            <p>
              First review matrices. Use textbooks, online information, or other means to refresh your about matrices in general. Then respond to the following.
            </p>
          <ol>
            <li>
                <p>
                  Create a <m>2 \times 2</m> matrix. Create another matrix, this time <m>3 \times 3</m>. These matrices are called <em>square</em> matrices. Why can we use the name <q>square</q>? And what could a matrix look like if it is not a square matrix? To demonstrate, create at least two differently sized matrices that are not square, and explain how you know that these matrices are not square.  
                </p>
              </li>
              <li>
                <p>
                  Create two different <m>2 \times 2</m> matrices and show how to multiply them.
                </p>
              </li>
              <li>
                <p>
                  Describe what an inverse matrix is. Then write the formula for computing the inverse of a matrix of the form: 
                </p>
                <me>
                  \begin{pmatrix}
                    a \amp b \\
                    c \amp d 
                  \end{pmatrix}.
                </me>
                <p>
                  For each of the two <m>2 \times 2</m> matrices you created in part (b) above, show how to compute the inverse of the matrix, using the matrix inverse formula you wrote.  
                </p>
              </li>
          </ol>
          </statement>
        </task>
        <task>
          <statement>
            <p>
              Next review eigenvalues.
            </p>
          <ol>
            <li>
              <p>
                How do we describe an eigenvalue mathematically? Your response should include at least one mathematical formula, along with a description of what the formula means. 
              </p>
            </li>
            <li>
              <p>
                Research eigenvalues to find ways that eigenvalues are used in applications of mathematics. Write descriptions of at least two examples of applications of eigenvalues.  
              </p>
            </li>
          </ol>
          </statement>
        </task>
        
      </exploration>
  
    </introduction>

    <section xml:id="sec-introduction-to-the-next-generation-method">
      <title>Introduction to the Next Generation Method</title>   

      <p>
        So far, to determine the value of <m>\beta</m> in a compartmental model, we have done one of two things: 
      </p>
      <ol>
        <li>
          <p>
            estimated <m>\beta</m> visually by comparing the model's solution curves with data, or
          </p>
        </li>
        <li>
          <p>
            used a formula for <m>\mathcal{R}_0</m>, such as <m>\mathcal{R}_0 = (\beta N)/\gamma</m>, to substitute in values we know for <m>\mathcal{R}_0</m>, <m>N</m>, and <m>\gamma</m>, rearrange, and solve for <m>\beta</m>.
          </p>
        </li>
      </ol>
      <p>
        However, the formula for <m>\mathcal{R}_0</m> is not always <m>\mathcal{R}_0 = (\beta N)/\gamma</m>. Systems of differential equations having different compartments, or systems in which the flow between compartments is different than what we have worked with before, can have different formulas for <m>\mathcal{R}_0</m>. These formulas are usually not obvious. However, a method exists that allows us to determine the formula. This is the Next Generation Method.
      </p>

      <!-- <p>
        Say more here about 2002 paper and earlier papers. Link to them.
      </p> -->

      <p>
        To use the Next Generation Method, we will need to be familiar with matrices, eigenvalues, equilibrium values for a system of differential equations, and partial derivatives. <xref ref="expl-activity-next-generation-method"/> was a reminder about matrices and eigenvalues, and we will build more knowledge about these linear algebra concepts. Let's also discuss equilibrium values and partial derivatives.
      </p>

      <activity xml:id="activity-equilibrium-values">
        <statement>
          <p>
            This activity identifies equilibrium values for two systems of differential equations that we have worked with as compartmental models.  
          </p>
          <ol>              
            <li>
              <p>
                Consider the SI model below: 
              </p>
              <md>
                <mrow>\frac{dS}{dt} \amp = - \beta S I </mrow>
                <mrow>\frac{dI}{dt} \amp =  \beta S I. </mrow>
            </md>
            <p>
              For a system of differential equations, being at equilibrium means that the dependent variables in the system are not changing as the independent variables change. For the SI model, this means that <m>S</m> and <m>I</m> are not changing as time <m>t</m> changes. Using knowledge from calculus: what can we say about each of the derivatives <m>dS/dt</m> and <m>dI/dt</m> when the system is at equilibrium?
            </p>
            </li>              
            <li>
              <p>
                Next: determine the possible values of <m>S</m> and <m>I</m> for which the SI model is at equilibrium.
              </p>
            </li>              
            <li>
              <p>
                Next consider the SEIR model below: 
              </p>
              <md>
                <mrow>\frac{dS}{dt} \amp = - \beta S I </mrow>
                <mrow>\frac{dE}{dt} \amp =  \beta S I - \kappa E </mrow>
                <mrow>\frac{dI}{dt} \amp =  \kappa E - \gamma I </mrow>
                <mrow>\frac{dR}{dt} \amp = \gamma I. </mrow>
              </md>
              <p>
                Can you determine possible values of <m>S</m>, <m>E</m>, <m>I</m>, and <m>R</m> for which the SEIR model is at equilibrium? In doing this, be sure the overall population is nonzero, that is, <m>S+E+I+R \neq 0</m>.
              </p>
            </li>
          </ol>          
        </statement>
        <answer>
          <ol>
            <li>
              <p>
                For the system to be at equilibrium, each of the derivatives must equal <m>0</m>. 
              </p>
            </li>
            <li>
              <p>
                If <m>S=0</m>, the SI model is at equilibrium. This corresponds to a situation where the entire population is in the <m>I</m> compartment.  
              </p>
              <p>
                Alternately, if <m>I=0</m>, the SI model is at equilibrium. This corresponds to a situation where the entire population is in the <m>S</m> compartment.
              </p>
            </li>
            <li>
              <p>
                The SEIR model is at equilibrium when <m>E=0</m> and <m>I=0</m>. 
              </p>
            </li>
          </ol>
        </answer>
      </activity>

      <p>
        You may have noticed in <xref ref="activity-equilibrium-values"/>, part 3, that there are many ways to arrive at equilbrium. It is true that the <m>E</m> and <m>I</m> compartments should be empty, but the population can be distributed in any way across compartments <m>S</m> and <m>R</m>. 
      </p>
      <p>
        <!-- However... (continue here) -->
        We discuss the general concept of equilibrium, with a focus on the <term>disease-free equilibrium</term>, which we will use when applying the Next Generation Method.
      </p>

    </section>

    <section xml:id="sec-2">
      <title>Python Code for the Next Generation Method</title>
      <!-- <p>Change the title??? To focus on linear algebra???</p>
      <p>Show how to use the NGM and how to use the results to determine beta</p> -->

      

      <p>
        The code block below produces the eigenvalues for the SEIR model. This code can also be used as a template for producing eigenvalues when the Next Generation Method produces a <m>2\times 2</m> matrix.
      </p>

      <p>
        Spend some time looking through the code. Be sure you see how and where matrices are entered. You can use similar code for other compartmental models, and the only parts you need to change are the <m>F</m> and <m>V</m> matrices.
      </p>

      <sage>
        <input>
          from sympy import * 
          init_printing(use_unicode=True)
          
          N = Symbol('N') 
          gamma = Symbol('gamma')
          beta = Symbol('beta')
          kappa = Symbol('kappa')
           
          # The F matrix of partial derivatives
          F = Matrix([[0, beta * N], [0, 0]])
          print("F = ", F)
          
          # The V matrix of partial derivatives
          V = Matrix([[kappa, 0], [-kappa, gamma]])
          print("V = ", V)
          
          # Computing V inverse and the Next Generation matrix
          Vinv = V**-1
          print("V inverse = ", Vinv)
          FVinv = F * Vinv
          print("Next Gen Matrix = ", FVinv)
          
          # Calculating eigenvalues
          
          R0eval = FVinv.eigenvals()
          print("The eigenvalues and their multiplicities are: ", R0eval)
        </input>
        <output>
        
        </output>
        </sage>


        <p>
          The code block below produces the eigenvalues for the SLIAR model. This code can also be used as a template for producing eigenvalues when the Next Generation Method produces a <m>3\times 3</m> matrix. Comparing this code with the previous code may help show how similar the code is when computing the Next Generation matrix for different models, as well as showing what to change for a different model.
        </p>

        <sage>
          <input>
            from sympy import * 
            init_printing(use_unicode=True)
            
            N = Symbol('N') 
            gamma = Symbol('gamma')
            beta = Symbol('beta')
            kappa = Symbol('kappa')
            alpha = Symbol('alpha')
            delta = Symbol('delta')
            eta = Symbol('eta')
            p = Symbol('p')

             
            # The F matrix of partial derivatives
            F = Matrix([[0, beta * N, beta * N * delta], [0, 0, 0], [0, 0, 0]])
            print("F = ", F)
            
            # The V matrix of partial derivatives
            V = Matrix([[kappa, 0, 0], [-p * kappa, alpha, 0], [-(1-p) * kappa, 0, eta]])
            print("V = ", V)
            
            # Computing V inverse and the Next Generation matrix
            Vinv = V**-1
            print("V inverse = ", Vinv)
            FVinv = F * Vinv
            print("Next Gen Matrix = ", FVinv)
            
            # Calculating eigenvalues
            
            R0eval = FVinv.eigenvals()
            print("The eigenvalues and their multiplicities are: ", R0eval)
          </input>
          <output>
          
          </output>
          </sage>
    </section>

  </chapter>