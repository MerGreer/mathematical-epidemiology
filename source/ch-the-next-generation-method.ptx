<chapter xml:id="ch-the-next-generation-method" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>* The Next Generation Method</title>

    <p>
      <term>***This chapter is under construction.***</term>
    </p>

    <introduction xml:id="intro-next-generation-method">
      <objectives>
        <ul>
          <li>
            <p>
              Learn to complete all the steps in the Next Generation Method for relating the epidemiological quantity <m>\mathcal{R}_0</m> to parameters and other quantities used in a compartmental model
            </p>
          </li>
          <li>
            <p>
              Build understanding of compartmental models as a way to map disease spread, or other kinds of spread, as a generation-to-generation phenomenon
            </p>
          </li>
          <li>
            <p>
              Increase awareness of how eigenvalues show us specific information about the long-term behavior of a system of differential equations
            </p>
          </li>
        </ul>
      </objectives>
  
      
      <p>
        This chapter uses many linear algebra concepts. Before beginning, we pause to review.
      </p>
      
      <exploration xml:id="expl-activity-next-generation-method">
        <title>Linear Algebra Review</title>
        <introduction>
          <p>
            To do the work of this chapter, it will help to have certain linear algebra concepts freshly in mind. This Exploration prepares us for what comes next. 
          </p>            
        </introduction>
        <task>
          <statement>
            <p>
              First review matrices. Use textbooks, online information, or other means to refresh your about matrices in general. Then respond to the following.
            </p>
          <ol>
            <li>
                <p>
                  Create a <m>2 \times 2</m> matrix. Create another matrix, this time <m>3 \times 3</m>. These matrices are called <em>square</em> matrices. Why can we use the name <q>square</q>? And what could a matrix look like if it is not a square matrix? To demonstrate, create at least two differently sized matrices that are not square, and explain how you know that these matrices are not square.  
                </p>
              </li>
              <li>
                <p>
                  Create two different <m>2 \times 2</m> matrices and demonstrate how to multiply them.
                </p>
              </li>
              <li>
                <p>
                  Describe what an inverse matrix is. Then write the formula for computing the inverse of a matrix of the form: 
                </p>
                <me>
                  \begin{pmatrix}
                    a \amp b \\
                    c \amp d 
                  \end{pmatrix}.
                </me>
                <p>
                  For each of the two <m>2 \times 2</m> matrices you created in part (2) above, show how to compute the inverse of the matrix, using the matrix inverse formula you wrote. If it happens that either of your matrices has no inverse, explain how you know this. If neither of your matrices has an inverse, then create a new <m>2 \times 2</m> matrix that does have an inverse, and compute its inverse.
                </p>
              </li>
          </ol>
          </statement>
        </task>
        <task>
          <statement>
            <p>
              Next review eigenvalues.
            </p>
          <ol>
            <li>
              <p>
                How do we describe an eigenvalue mathematically? Your response should include at least one mathematical formula, along with a description of what the formula means.  
              </p>
            </li>
            <li>
              <p>
                Research eigenvalues to find ways that eigenvalues are used in applications of mathematics. Write descriptions of at least two examples of applications of eigenvalues.  
              </p>
            </li>
          </ol>
          </statement>
        </task>
        
      </exploration>
  
    </introduction>

    <section xml:id="sec-mathematical-background-for-the-next-generation-method">
      <title>Mathematical Background for the Next Generation Method</title>   

      <p>
        So far, to determine the value of <m>\beta</m> in a compartmental model, we have done one of two things: 
      </p>
      <ol>
        <li>
          <p>
            estimated <m>\beta</m> visually by comparing the model's solution curves with data, or
          </p>
        </li>
        <li>
          <p>
            used a formula for <m>\mathcal{R}_0</m>, such as <m>\mathcal{R}_0 = (\beta N)/\gamma</m>, to substitute in values we know for <m>\mathcal{R}_0</m>, <m>N</m>, and <m>\gamma</m>, rearrange, and solve for <m>\beta</m>.
          </p>
        </li>
      </ol>
      <p>
        However, the formula for <m>\mathcal{R}_0</m> is not always <m>\mathcal{R}_0 = (\beta N)/\gamma</m>. Systems of differential equations having different compartments, or systems in which the flow between compartments is different than what we have worked with before, can have different formulas for <m>\mathcal{R}_0</m>. These formulas are usually not obvious. However, a method exists that allows us to determine the formula. This is the Next Generation Method.
      </p>

      <!-- <p>
        Say more here about 2002 paper and earlier papers. Link to them.
      </p> -->

      <p>
        To use the Next Generation Method, we will need to be familiar with matrices, eigenvalues, equilibrium values for a system of differential equations, and partial derivatives. <xref ref="expl-activity-next-generation-method"/> was a reminder about matrices and eigenvalues, and we will build more knowledge about these linear algebra concepts. But first, use <xref ref="activity-equilibrium-values"/> and <xref ref="activity-partial-derivatives"/> to learn about equilibrium values and partial derivatives.
      </p>

      <activity xml:id="activity-equilibrium-values">
        <statement>
          <p>
            This activity identifies equilibrium values for two systems of differential equations that we have worked with as compartmental models.  
          </p>
          <ol>              
            <li>
              <p>
                Consider the SI model below: 
              </p>
              <md>
                <mrow>\frac{dS}{dt} \amp = - \beta S I </mrow>
                <mrow>\frac{dI}{dt} \amp =  \beta S I. </mrow>
            </md>
            <p>
              For a system of differential equations, being at equilibrium means that the dependent variables in the system are not changing as the independent variables change. For the SI model, this means that the populations <m>S</m> and <m>I</m> are not changing as time <m>t</m> changes. Using knowledge from calculus: what can we say about each of the derivatives <m>dS/dt</m> and <m>dI/dt</m> when the system is at equilibrium?
            </p>
            </li>              
            <li>
              <p>
                Next: determine the possible values of <m>S</m> and <m>I</m> for which the SI model is at equilibrium.
              </p>
            </li>              
            <li>
              <p>
                Next consider the SEIR model below: 
              </p>
              <md>
                <mrow>\frac{dS}{dt} \amp = - \beta S I </mrow>
                <mrow>\frac{dE}{dt} \amp =  \beta S I - \kappa E </mrow>
                <mrow>\frac{dI}{dt} \amp =  \kappa E - \gamma I </mrow>
                <mrow>\frac{dR}{dt} \amp = \gamma I. </mrow>
              </md>
              <p>
                Can you determine possible values of <m>S</m>, <m>E</m>, <m>I</m>, and <m>R</m> for which the SEIR model is at equilibrium? In doing this, be sure the overall population is nonzero, that is, <m>S+E+I+R \neq 0</m>.
              </p>
            </li>
          </ol>          
        </statement>
        <answer>
          <ol>
            <li>
              <p>
                For the system to be at equilibrium, each of the derivatives must equal <m>0</m>. 
              </p>
            </li>
            <li>
              <p>
                If <m>S=0</m>, the SI model is at equilibrium. This corresponds to a situation where the entire population is in the <m>I</m> compartment.  
              </p>
              <p>
                Alternatively, if <m>I=0</m>, the SI model is at equilibrium. This corresponds to a situation where the entire population is in the <m>S</m> compartment.
              </p>
            </li>
            <li>
              <p>
                The SEIR model is at equilibrium when <m>E=0</m> and <m>I=0</m>. The rest of the population can be divided in any way between the <m>S</m> and <m>R</m> compartments.
              </p>
            </li>
          </ol>
        </answer>
      </activity>

      <p>
        You may have noticed in <xref ref="activity-equilibrium-values"/>, part 3, that there are many ways to arrive at equilbrium. It is true that the <m>E</m> and <m>I</m> compartments should be empty, but the population can be distributed in any way across compartments <m>S</m> and <m>R</m>. 
      </p>
      <p>
        For the work we will do in this chapter, we decide the population distribution by seeking the <term>disease-free equilibrium</term>. This is the particular equilibrium value that occurs in a situation where disease has not yet appeared in a population. In the SEIR model, for instance, equilibrium requires <m>E=I=0</m>, with the rest of the population split somehow across the <m>S</m> and <m>R</m> compartments. <em>Disease-free equilibrium</em> adds the extra requirement that the population all be in the <m>S</m> compartment. This means <m>S=N</m>, where <m>N</m> represents the entire population, as first defined in <xref ref="activity-total-population"/>. Then the other three populations, <m>E</m>, <m>I</m>, and <m>R</m>, all equal <m>0</m>.
      </p>
      <p>
        One way to write the disease-free equilibrium is <m>(\overline{S}, \overline{E}, \overline{I}, \overline{R})=(N, 0, 0, 0)</m>. The bar over each of the population letters <m>S</m>, <m>E</m>, <m>I</m>, and <m>R</m> represents an equilibrium value for that population.
      </p> 
      <p>
        For the models we have studied so far, disease-free equilibrium requires that the entire population start in the <m>S</m> compartment, but there exist compartmental models where the initial population can be split across multiple compartments. 
      </p>
      <p>
        In addition to the concept of the disease-free equilibrium value, we also work with partial derivatives when applying the Next Generation Method. Gain practice with partial derivatives in <xref ref="activity-partial-derivatives"/>. 
      </p>
      <activity xml:id="activity-partial-derivatives">
        <statement>
          <p>
            This course requires mainly the calculus concepts from a Calculus I course. These concepts include working with derivatives, understanding that a derivative is a rate of change, knowing that the slope on a graph relates directly to the derivative of a function, and recognizing that positive slopes (or, equivalently, positive derivatives) correspond to increasing functions and, similarly, negative slopes (or, equivalently, negative derivatives) correspond to decreasing functions.
          </p>
          <p>
            The Next Generation Method also requires us to compute <em>partial derivatives</em>. 
            To see how this works, progress through the steps below.
          </p>
          <ol>                           
            <li>
              <p>
                Start by computing derivatives as you would during Calculus I.
              </p>
              <ol>
                <li>
                  <p>
                    For the function <m>f(x)=3x^2 + 5x + 7</m>, compute its derivative <m>f'(x)</m>. This can also be written <m>\frac{d}{dx}(3x^2 + 5x + 7)</m>.
                  </p>
                </li>
                <li>
                  <p>
                    Then, for the related function <m>g(x)=ax^2 + bx + c</m>, compute its derivative. The values <m>a</m>, <m>b</m>, and <m>c</m> are all constants. This derivative can also be written <m>\frac{d}{dx}(ax^2 + bx + c)</m>.
                  </p>
                </li>
              </ol>
            </li>
            <li>
              <p>
                Next, we introduce <em>partial derivatives</em>. Whereas in part (1) we computed derivatives with respect to <m>x</m>, we now allow ourselves to compute derivatives with respect to other variables in a formula. 
              </p>
              <ol>
                <li>
                  <p>
                    Consider this differential equation from the SEIR model: <m>\frac{dE}{dt} = \beta S I - \kappa E</m>. Compute the derivative of the right-hand side, with respect to <m>E</m>. That is, compute <m>\frac{\partial}{\partial E}(\beta S I - \kappa E)</m>. When computing the derivative with respect to <m>E</m>: think of <m>S</m>, <m>I</m>, <m>\beta</m>, and <m>\kappa</m> as constants. Think of <m>E</m> as the only variable.
                  </p>
                  <p>
                    You may notice that we have switched from the notation <m>\frac{d}{dx}</m> to the notation <m>\frac{\partial}{\partial E}</m>. We use <m>\partial</m> rather than <m>d</m> when there are multiple choices for our variable of interest: we are focusing on <m>E</m>, but we could have chosen any other variable in our system of equations. The idea of <em>partial derivatives</em> is that there are multiple variables involved, and as each of them changes, the entire system is affected, but we focus on one variable at a time, therefore looking at <em>part</em> of the change of the system rather than the <em>total</em> change of the system. 
                  </p>
                  <p>
                    This emphasis on one variable at a time benefits our understanding by showing how change in each variable<mdash/>in our case, change in each compartment<mdash/>affects the outcome of the entire system.
                  </p>
                </li>
                <li>
                  <p>
                    Then compute these two derivatives: <m>\frac{\partial}{\partial S}(\beta S I - \kappa E)</m> and <m>\frac{\partial}{\partial I}(\beta S I - \kappa E)</m>. The first of these thinks of only <m>S</m> as a variable. The second thinks of only <m>I</m> as a variable.
                  </p>
                </li>
              </ol>
            </li>
          </ol>          
        </statement>
        <answer>
          <ol>
            <li>
              <ol>
                <li>
                  <p>
                    The derivative is <m>\frac{d}{dx}(3x^2 + 5x + 7) = 6x+5</m>.
                  </p>
                </li>
                <li>
                  <p>
                    The derivative is <m>\frac{d}{dx}(ax^2 + bx + 7c) = 2ax+b</m>.
                  </p>
                </li>
              </ol>
            </li>
            <li>
              <ol>
                <li>
                  <p>
                    The derivative is <m>\frac{\partial}{\partial E}(\beta S I - \kappa E) = - \kappa </m>. 
                  </p>
                </li>
                <li>
                  <p>
                    The derivative with respect to <m>S</m> is <m>\frac{\partial}{\partial S}(\beta S I - \kappa E) = \beta I </m> and the derivative with respect to <m>I</m> is <m>\frac{\partial}{\partial I}(\beta S I - \kappa E) = \beta S </m>.
                  </p>
                </li>
              </ol>
            </li>
          </ol>
        </answer>
      </activity>
    </section>

    <section xml:id="sec-the-next-generation-method-steps-to-follow">
      <title>The Next Generation Method: Steps to Follow</title>   

      <p>
        We now go through the steps of the Next Generation Method. 
        <!-- After walking through the steps for the SEIR model, two activities provide the chance to try the steps for other models. -->
      </p>
      <!-- <p>
        Begin with the SEIR model, shown below, and follow the steps described.
      </p>
      <md>
        <mrow>\frac{dS}{dt} \amp = - \beta S I </mrow>
        <mrow>\frac{dE}{dt} \amp =  \beta S I - \kappa E </mrow>
        <mrow>\frac{dI}{dt} \amp =  \kappa E - \gamma I </mrow>
        <mrow>\frac{dR}{dt} \amp = \gamma I. </mrow>
      </md>
      <ol>
        <li>
          <p>
            Decide which compartments of the SEIR model involve individuals experiencing some stage of infection. If a person has contracted an illness, they are in some stage of infection throughout the time they are incubating, whether contagious or not, and whether showing symptoms or not. They stop being in a stage of infection when they are completely done with the illness.
          </p>
          <answer>
            <p>
              For the SEIR model, the E and I compartments are stages of infection. The S and R compartments are not stages of infection. 
            </p>
          </answer>
        </li>
        <li>
          <p>
            For the equation(s) selected in Step 1, write the equation(s) in matrix form. To do so, place the derivatives on the left-hand side into a vector. On the right-hand side, write the equations in a vector. 
          </p>
          <answer>
            <md>
              <mrow>\begin{pmatrix}
                \frac{dE}{dt} \\
                \frac{dI}{dt}
                \end{pmatrix} = 
                \begin{pmatrix}
                \beta S I - \kappa E \\
                \kappa E - \gamma I
                \end{pmatrix} </mrow>
            </md>
          </answer>
        </li>
        <li>
          <p>
            Separate the right-hand side into two vectors, <m>\widehat{F}</m> and <m>\widehat{V}</m>, so that 
          </p>
          <ul>
            <li>
              <p>
                The right-hand side can be written as <m>\widehat{F}-\widehat{V}</m>;
              </p>
            </li>
            <li>
              <p>
                Vector <m>\widehat{F}</m> includes all <em>new infection</em> terms, that is, the terms within the model that indicate when individuals who were not at any stage of infection newly enter a compartment in which they are at some stage of infection; and
              </p>
            </li>
            <li>
              <p>
                Vector <m>\widehat{V}</m> is the vector of <em>all other movement between compartments</em>.
              </p>
            </li>
          </ul>
          <answer>
            <md>
              <mrow>\begin{pmatrix}
                \frac{dE}{dt} \\
                \frac{dI}{dt}
                \end{pmatrix} = 
                \begin{pmatrix}
                \beta S I  \\
                0
                \end{pmatrix} -
                \begin{pmatrix}
                \kappa E \\
                -\kappa E + \gamma I
                \end{pmatrix}</mrow>
            </md>
            <p>
              That is:
            </p>
            <md>
              <mrow>\widehat{F} = 
                \begin{pmatrix}
                \beta S I  \\
                0
                \end{pmatrix} </mrow>
            </md>
            <p>
              and
            </p>
            <md>
              <mrow>\widehat{V} = 
                \begin{pmatrix}
                \kappa E \\
                -\kappa E + \gamma I
                \end{pmatrix}</mrow>
            </md>
          </answer> 
        </li>
        <li>
          <p> 
            Compute the disease-free equilibrium for your compartmental model.
          </p>
          <answer>
            <p>
              We did this for the SEIR model in <xref ref="activity-equilibrium-values"/>. The disease-free equilibrium is <m>(S, E, I, R)=(N, 0, 0, 0)</m>, where <m>N=S+E+I+R</m> is the entire population being studied.
            </p>
          </answer>
        </li>
        <li> 
          <p>
            Compute matrices <m>F</m> and <m>V</m> (notice these do not have <q>hats</q>: they are different from <m>\widehat{F}</m> and <m>\widehat{V}</m>) by computing partial derivatives of each of the terms in <m>\widehat{F}</m> and <m>\widehat{V}</m>, with respect to each of the populations of compartments experiencing infection, following the pattern shown below in the case of the SEIR model, and then evaluating your results at the disease-free equilibrium: 
          </p>
          <md>
            <mrow> F = \left. \begin{pmatrix}
              \frac{\partial (\beta SI)}{\partial E} \amp \frac{\partial (\beta SI)}{\partial I} \\
              \frac{\partial (0)}{\partial E} \amp \frac{\partial (0)}{\partial I}
              \end{pmatrix} \right| _{(S, E, I, R) = (N, 0, 0, 0)}
            </mrow>
          </md>
          <md>
            <mrow> V = \left. \begin{pmatrix}
              \frac{\partial (\kappa E)}{\partial E} \amp \frac{\partial (\kappa E)}{\partial I} \\
              \frac{\partial (-\kappa E + \gamma I)}{\partial E} \amp \frac{\partial (-\kappa E + \gamma I)}{\partial I}
              \end{pmatrix}  \right| _{(S, E, I, R) = (N, 0, 0, 0)} .
            </mrow>
          </md>
          <answer>
            <md>
              <mrow> F = \left. \begin{pmatrix}
                0 \amp \beta S \\
                0 \amp 0
                \end{pmatrix} \right| _{(S, E, I, R) = (N, 0, 0, 0)}
                = \begin{pmatrix}
                0 \amp \beta N \\
                0 \amp 0
                \end{pmatrix} 
              </mrow>
            </md>
            <md>
              <mrow> V = \left. \begin{pmatrix}
                \kappa \amp 0 \\
                -\kappa \amp \gamma
                \end{pmatrix} \right| _{(S, E, I, R) = (N, 0, 0, 0)}
                = \begin{pmatrix}
                \kappa \amp 0 \\
                -\kappa \amp \gamma
                \end{pmatrix} 
              </mrow>
            </md>
          </answer>
        </li>
        <li>
          <p>
            Compute the Next Generation Matrix, which is the matrix
          </p>
          <md>
            <mrow> K = F \, V^{-1}
            </mrow>
          </md> 
          <p>
            and determine the largest positive eigenvalue of <m>K</m>.
          </p>
          <p>
            To do this: first compute <m>V^{-1}</m>. Then compute <m>F \,V^{-1}</m>. Then determine the eigenvalues of <m>F \,V^{-1}</m>.
          </p>
          <p>
            The largest possible eigenvalue of <m>F \,V^{-1}</m> is <m>\mathcal{R}_0</m>.
          </p>
          <answer> 
            <p>
              Compute matrix <m>V^{-1}=\begin{pmatrix}
                \frac{1}{\kappa} \amp 0 \\
                \frac{1}{\gamma} \amp \frac{1}{\gamma} 
                \end{pmatrix}.</m> 

              Then compute matrix <m>FV^{-1}=\begin{pmatrix}
                \frac{\beta  N}{\gamma} \amp \frac{\beta N}{\gamma} \\
                0 \amp 0 
                \end{pmatrix}.</m> 

              The eigenvalues of <m>FV^{-1}</m> are <m>0</m> and <m>\frac{\beta  N}{\gamma}</m>. Of these, the largest eigenvalue is <m>\frac{\beta  N}{\gamma}</m>, and therefore <m>\mathcal{R}_0 = \frac{\beta  N}{\gamma}</m>.
            </p>
          </answer>
        </li>
      </ol> -->

      <activity xml:id="activity-learning-next-generation-seir">
        <statement>
          <p>
            Begin with the SEIR model, shown below, and follow the steps described. While in many activities it is good to try all the steps before checking the answer, in this activity you may wish to compare your results after each step with the <q>Answer</q> link at the bottom of the activity. There will then be additional chances to practice the Next Generation Method, so that you will have the chance to try the Next Generation Method without checking answers at each step.
          </p>
          <md>
            <mrow>\frac{dS}{dt} \amp = - \beta S I </mrow>
            <mrow>\frac{dE}{dt} \amp =  \beta S I - \kappa E </mrow>
            <mrow>\frac{dI}{dt} \amp =  \kappa E - \gamma I </mrow>
            <mrow>\frac{dR}{dt} \amp = \gamma I. </mrow>
          </md>  
          <ol>
            <li>
              <p>
                Decide which compartments of the SEIR model involve individuals experiencing some stage of infection. If a person has contracted an illness, they are in some stage of infection throughout the time they are incubating, whether contagious or not, and whether showing symptoms or not. They stop being in a stage of infection when they are completely done with the illness.
              </p>
            </li>
            <li>
              <p>
                For the equation(s) selected in Step 1, write the equation(s) in matrix form. To do so, place the derivatives on the left-hand side into a vector. On the right-hand side, write the equations in a vector. 
              </p>
            </li>
            <li>
              <p>
                Separate the right-hand side into two vectors, <m>\widehat{F}</m> and <m>\widehat{V}</m>, so that all of the following are true:
              </p>
              <ul>
                <li>
                  <p>
                    the right-hand side can be written as <m>\widehat{F}-\widehat{V}</m>;
                  </p>
                </li>
                <li>
                  <p>
                    vector <m>\widehat{F}</m> includes all <em>new infection</em> terms, that is, the terms within the model that indicate when individuals who were not at any stage of infection newly enter a compartment in which they are at some stage of infection; and
                  </p>
                </li>
                <li>
                  <p>
                    vector <m>\widehat{V}</m> is the vector of <em>all other movement between compartments</em>.
                  </p>
                </li>
              </ul> 
            </li>
            <li>
              <p> 
                Compute the disease-free equilibrium for your compartmental model.
              </p>
            </li>
            <li> 
              <p>
                Compute matrices <m>F</m> and <m>V</m> (notice these do not have <q>hats</q>: they are different from <m>\widehat{F}</m> and <m>\widehat{V}</m>) by computing partial derivatives of each of the terms in <m>\widehat{F}</m> and <m>\widehat{V}</m>, with respect to each of the populations of compartments experiencing infection, following the pattern shown below in the case of the SEIR model, and then evaluating your results at the disease-free equilibrium: 
              </p>
              <md>
                <mrow> F = \left. \begin{pmatrix}
                  \frac{\partial (\beta SI)}{\partial E} \amp \frac{\partial (\beta SI)}{\partial I} \\
                  \frac{\partial (0)}{\partial E} \amp \frac{\partial (0)}{\partial I}
                  \end{pmatrix} \right| _{(S, E, I, R) = (N, 0, 0, 0)}
                </mrow>
              </md>
              <md>
                <mrow> V = \left. \begin{pmatrix}
                  \frac{\partial (\kappa E)}{\partial E} \amp \frac{\partial (\kappa E)}{\partial I} \\
                  \frac{\partial (-\kappa E + \gamma I)}{\partial E} \amp \frac{\partial (-\kappa E + \gamma I)}{\partial I}
                  \end{pmatrix}  \right| _{(S, E, I, R) = (N, 0, 0, 0)} .
                </mrow>
              </md>
            </li>
            <li>
              <p>
               Compute the Next Generation Matrix, which is the matrix
              </p>
              <md>
                <mrow> K = F \, V^{-1}
                </mrow>
              </md> 
              <p>
                and determine the largest positive eigenvalue of <m>K</m>.
              </p>
              <p>
                To do this: first compute <m>V^{-1}</m>. Then compute <m>F \,V^{-1}</m>. Then determine the eigenvalues of <m>F \,V^{-1}</m>.
              </p>
              <p>
                The largest possible eigenvalue of <m>F \,V^{-1}</m> is the value of <m>\mathcal{R}_0</m>.
              </p>
            </li>
          </ol>     
        </statement>
        <answer>
          <ol>
            <li>
            <p>
              For the SEIR model, the E and I compartments are stages of infection. The S and R compartments are not stages of infection. 
            </p>
            </li>
            <li>
                <md>
                  <mrow>\begin{pmatrix}
                    \frac{dE}{dt} \\
                    \frac{dI}{dt}
                    \end{pmatrix} = 
                    \begin{pmatrix}
                    \beta S I - \kappa E \\
                    \kappa E - \gamma I
                    \end{pmatrix} </mrow>
                </md>
            </li>
            <li>
                <md>
                  <mrow>\begin{pmatrix}
                    \frac{dE}{dt} \\
                    \frac{dI}{dt}
                    \end{pmatrix} = 
                    \begin{pmatrix}
                    \beta S I  \\
                    0
                    \end{pmatrix} -
                    \begin{pmatrix}
                    \kappa E \\
                    -\kappa E + \gamma I
                    \end{pmatrix}</mrow>
                </md>
                <p>
                  That is:
                </p>
                <md>
                  <mrow>\widehat{F} = 
                    \begin{pmatrix}
                    \beta S I  \\
                    0
                    \end{pmatrix} </mrow>
                </md>
                <p>
                  and
                </p>
                <md>
                  <mrow>\widehat{V} = 
                    \begin{pmatrix}
                    \kappa E \\
                    -\kappa E + \gamma I
                    \end{pmatrix}</mrow>
                </md> 
            </li>
            <li>
              <p>
               We did this for the SEIR model in <xref ref="activity-equilibrium-values"/>. The disease-free equilibrium is <m>(S, E, I, R)=(N, 0, 0, 0)</m>, where <m>N</m> is the total number of people in the entire population being studied.
              </p>
            </li>
            <li> 
               <md>
                  <mrow> F = \left. \begin{pmatrix}
                    0 \amp \beta S \\
                    0 \amp 0
                    \end{pmatrix} \right| _{(S, E, I, R) = (N, 0, 0, 0)}
                    = \begin{pmatrix}
                    0 \amp \beta N \\
                    0 \amp 0
                    \end{pmatrix} 
                  </mrow>
                </md>
                <md>
                  <mrow> V = \left. \begin{pmatrix}
                    \kappa \amp 0 \\
                    -\kappa \amp \gamma
                    \end{pmatrix} \right| _{(S, E, I, R) = (N, 0, 0, 0)}
                    = \begin{pmatrix}
                    \kappa \amp 0 \\
                    -\kappa \amp \gamma
                    \end{pmatrix} 
                  </mrow>
                </md>
            </li>
            <li>
                <p>
                  Compute matrix <m>V^{-1}=\begin{pmatrix}
                    \frac{1}{\kappa} \amp 0 \\
                    \frac{1}{\gamma} \amp \frac{1}{\gamma} 
                    \end{pmatrix}.</m> 

                  Then compute matrix <m>FV^{-1}=\begin{pmatrix}
                    \frac{\beta  N}{\gamma} \amp \frac{\beta N}{\gamma} \\
                    0 \amp 0 
                    \end{pmatrix}.</m> 

                  The eigenvalues of <m>FV^{-1}</m> are <m>0</m> and <m>\frac{\beta  N}{\gamma}</m>. Of these, the largest eigenvalue is <m>\frac{\beta  N}{\gamma}</m>, and therefore <m>\mathcal{R}_0 = \frac{\beta  N}{\gamma}</m>.
                </p>
            </li>
          </ol>
        </answer>
      </activity>


      <activity xml:id="activity-next-generation-practice-sirs">
        <statement>
          <p>
            Now that we have shown all the steps for computing a formula for <m>\mathcal{R}_0</m> in the SEIR model, try again for the SIRS model, shown in <xref ref="fig-SIRS-compartmental-diagram"/>. 
          </p>
          <figure xml:id="fig-SIRS-compartmental-diagram">
            <caption>The compartmental diagram for one possible SIRS model, where <q>S</q>stands for <q>Susceptible</q>, <q>I</q> stands for <q>Infectious</q>, and <q>R</q> stands for <q>Recovered</q>. In this model, individuals lose immunity some time after recovering. They then return to the S compartment.</caption>
              <image width="80%">
              <description>(Write this)</description>
                <latex-image>
                \begin{tikzpicture}
                \draw [thick] [black] (0,0) -- (2,0);
                \draw [thick] [black] (2,0) -- (2,2);
                \draw [thick] [black] (2,2) -- (0,2);
                \draw [thick] [black] (0,2) -- (0,0);
                \node [black] at (1,1) {\Huge $S$};
                \draw [thick] [->] (2.1,1) to (3.9,1); 
                \node at (3,1.5) {\Large $\beta SI$};
                \draw [thick] [black] (4,0) -- (6,0);
                \draw [thick] [black] (6,0) -- (6,2);
                \draw [thick] [black] (6,2) -- (4,2);
                \draw [thick] [black] (4,2) -- (4,0);
                \node [black] at (5,1) {\Huge $I$};
                \draw [thick] [->] (6.1,1) to (7.9,1); 
                \node at (7,1.5) {\Large $\gamma I$};
                \draw [thick] [black] (8,0) -- (10,0);
                \draw [thick] [black] (10,0) -- (10,2);
                \draw [thick] [black] (10,2) -- (8,2);
                \draw [thick] [black] (8,2) -- (8,0);
                \node [black] at (9,1) {\Huge $R$};
                \draw [thick] [black] (9,2.1) -- (9,2.5);
                \draw [thick] [black] (9,2.5) -- (1,2.5);
                \draw [thick] [->] (1,2.5) to (1,2.1); 
                \node at (5,3) {\Large $\alpha R$};
                \end{tikzpicture}
                </latex-image>
               </image>
          </figure>         
        </statement>
        <hint>
          <p>
            Only one compartment of the SIR model involves individuals experiencing some stage of infection, namely, the I compartment. This means that when we write the equations in matrix form, we use a <m>1 \times 1</m> matrix. Then <m>\widehat{F}= \begin{pmatrix}
              \beta SI
              \end{pmatrix}</m> and 
              <m>\widehat{V}= \begin{pmatrix}
              \gamma I
              \end{pmatrix}.</m> Computing partial derivatives with respect to <m>I</m>, and evaluating at the disease-free equilibrium <m>(S, I, R)=(N, 0, 0)</m>, results in <m>F = \begin{pmatrix}
              \beta N
              \end{pmatrix}</m> and <m>V = \begin{pmatrix}
              \gamma
              \end{pmatrix}.</m> Computing <m>FV^{-1}</m> results in <m>FV^{-1} = \begin{pmatrix}
              \frac{\beta N}{\gamma}
              \end{pmatrix}</m>, and the one eigenvalue of <m>FV^{-1}</m> tells us that <m>\mathcal{R}_0 = \frac{\beta  N}{\gamma}</m>. 
          </p>
        </hint>
      </activity>

      <p>
        We have now seen the steps of the Next Generation Method for both SEIR and SIR models. The final step of the Next Generation Method requires a significant amount of linear algebra, especially as models become more complicated. In <xref ref="sec-python-code-for-the-next-generation-method" />, we introduce Python code to help with this.
      </p>
 
      
    </section>

    <section xml:id="sec-python-code-for-the-next-generation-method">
      <title>Python Code for the Next Generation Method</title>

      <p>
        For the most part, steps 1 through 4 of the Next Generation Method cannot be automated, as they require human judgment. In particular, Step 1 requires determining which compartments involve some stage of infection, and in Step 3, we must distinguish new infections from all other stages of infection. In Step 4, we use logical thinking to help us write down the population distribution in a situation where there has not been an outbreak previously.
      </p>
      <p>
        For the later steps of the Next Generation Method, especially computing matrix inverses and eigenvalues, technology can be extremely helpful. These are doable using linear algebra, yet they are not the focus of this course. For this textbook, students are asked to complete by hand Step 5 of the Next Generation Method, and then we use Python for the grand finale in Step 6.
      </p>
      <p>
        <xref ref="activity-learning-next-generation-python-seir"/> provides one possible set of Python commands for computing the value of <m>\mathcal{R}_0</m> in the SEIR model shown in <xref ref="activity-learning-next-generation-seir"/>.
      </p>

      <activity xml:id="activity-learning-next-generation-python-seir">
        <statement>
          <p>
            The code block below produces the eigenvalues for the SEIR model. In other words, this code does the computation in Step 6 of the Next Generation Method as described in <xref ref="activity-learning-next-generation-seir"/>. This code can also be used as a template for producing eigenvalues when the Next Generation Method produces a <m>2\times 2</m> matrix. 
          </p>
          <p>
            Use the code to answer the questions below.
          </p> 
          <sage>
            <input>
              from sympy import * 
              init_printing(use_unicode=True)
              
              N = Symbol('N') 
              gamma = Symbol('gamma')
              beta = Symbol('beta')
              kappa = Symbol('kappa')
              
              # The F matrix of partial derivatives
              F = Matrix([[0, beta * N], [0, 0]])
              print("F = ", F)
              
              # The V matrix of partial derivatives
              V = Matrix([[kappa, 0], [-kappa, gamma]])
              print("V = ", V)
              
              # Computing V inverse and the Next Generation matrix
              Vinv = V**-1
              print("V inverse = ", Vinv)
              FVinv = F * Vinv
              print("Next Gen Matrix = ", FVinv)
              
              # Calculating eigenvalues
              
              R0eval = FVinv.eigenvals()
              print("The eigenvalues and their multiplicities are: ", R0eval)
            </input>
            <output>

            </output>
          </sage>  
          <ol>
            <li>
              <p>
                Four expressions are listed as <c>Symbol</c> in lines 4 through 7 of the Python code. Compare these expressions with the entries in matrices <m>F</m> and <m>V</m> that we solved for in Step 5 of <xref ref="activity-learning-next-generation-seir"/>. Show where each <c>Symbol</c> occurs in matrices <m>F</m> and <m>V</m>, and state why these are all the terms we need to define as <c>Symbol</c> so that Python will recognize them. 
              </p>
            </li>
            <li>
              <p>
                Use lines 10 and 14 of the Python code to describe the syntax we use for entering matrices into Python.
              </p>
            </li>
            <li>
              <p>
                From line 18, state how we compute the inverse of matrix <m>V</m>, also written as <m>V^{-1}</m>. From line 20, state how we compute the matrix <m>FV^{-1}</m>, which multiples matrix <m>F</m> with matrix <m>V^{-1}</m>. From line 25, state the command used to calculate the eigenvalues of matrix <m>FV^{-1}</m>, and give the name we assign to that set of eigenvalues.
              </p>
            </li>
            <li>
              <p>
                The lines 11, 15, 19, 21, and 26 all include the <c>print</c> command. Write out exactly what Python prints for each of these lines when we evaluate the code, and explain what each of these printed results means, in the context of the Next Generation Method.
              </p>
            </li>
            <li>
              <p>
                When we compute eigenvalues for a matrix, it is possible that an eigenvalue may occur more than once. The number of times an eigenvalue occurs is called the <em>multiplicity</em> of the eigenvalue. Python tells us the eigenvalues of a matrix, along with the multiplicity of each eigenvalue. Write out the eigenvalues of <m>FV^{-1}</m> and the multiplicity of each eigenvalue. Explain how you know that each eigenvalue is a real number (and not a complex number, meaning that no part of the eigenvalue includes <m>i=\sqrt{-1}</m>). Then state which eigenvalue is the largest, and confirm that this eigenvalue must represent a positive real number. 
              </p>
            </li>
          </ol>
        </statement>
        <hint>
          <ol>
            <li>
              <p>
                In Step 5 of <xref ref="activity-learning-next-generation-seir"/>, we produced matrices for <m>F</m> and <m>V</m>. These matrices used letters, including Greek letters, to represent some parts of the model. For each of these letters, we now designate that letter to be a <c>Symbol</c> so that Python knows how to work with it. As an example, we write <c>gamma = Symbol('gamma')</c> to give the name <q>gamma</q> to the Greek letter <m>\gamma</m>. Python then knows to treat the entire text string <c>gamma</c> as the single parameter value <m>\gamma</m> whenever <m>\gamma</m> appears in a mathematical expression, such as in matrix <m>V</m>.
              </p>
            </li>
            <li>
              <p>
                To enter a matrix, we type <c>Matrix([])</c>. Inside the square brackets, we enter each row of the matrix, using its own set of square brackets, with commas separating the matrix entries. This system extends to matrices larger than <m>2\times 2</m>. 
              </p>
            </li>
            <li>
              <p>
                These commands appear on the right-hand side of the equals <m>(=)</m> sign in each of the given lines. Notice that in each case we name the output. In particular, we give the name <c>R0eval</c> to the output of the <c>eigenvals</c> command so that we can print this output, using the command in line 26. 
              </p>
            </li>
            <li>
              <p>
                The <c>print</c> commands in this code block all include text, in quotation marks, followed by the name of a mathematical expression we have either entered into Python or asked Python to compute. As a result, Python prints this exact text first, telling us what we are seeing in the mathematical expression appearing just after the text.  
              </p>
              <p>
                For instance, the code in line 19 tells Python to print the text <q>V inverse = </q> and then to print the actual matrix <m>V^{-1}</m> that has been computed based on the matrix <m>V</m> we entered.
              </p>
            </li>
            <li>
              <p>
                For matrix <m>FV^{-1}</m> resulting from the Next Generation Method shown in <xref ref="activity-learning-next-generation-seir"/>, the eigenvalues are <c>0</c>, having multiplicity <m>1</m>, and <c>N*beta/gamma</c>, which equals <m>\frac{\beta N}{\gamma}</m>, having multiplicity 1. 
              </p>
              <p>
                It is not unusual for eigenvalue equaling <m>\mathcal{R}_0</m> to look different in Python than in mathematical writing. Rearranging and rewriting the Python version of <m>\mathcal{R}_0</m> often makes the result easier to work with, both mathematically and for understanding its meaning.
              </p>
              <p>
                In the case of this activity's output: the eigenvalue <c>N*beta/gamma</c> is a positive real number, and is larger than <c>0</c>, because all three values <m>N</m>, <m>\beta</m>, and <m>\gamma</m> are positive real numbers in the SEIR model that led to this result.
              </p>
            </li>
          </ol>
        </hint>
      </activity>

        <p>
          <xref ref="activity-next-generation-practice-seiar"/> below provides a somewhat larger model on which to practice the Next Generation Method. It also introduces a Python code block for producing eigenvalues when the Next Generation Method involves a <m>3\times 3</m> matrix. 
        </p>

        <activity xml:id="activity-next-generation-practice-seiar">
        <statement>
          <p>
            The book <em>Mathematical Epidemiology</em><fn><em>Mathematical Epidemiology</em> was edited by Fred Brauer, Pauline van den Driessche, and Jianhong Wu, and published by Springer in 2008. The model we describe comes from Chapter 12, which was written by Fred Brauer, and is labeled SLIAR. Our version is labeled SEIAR to stay consistent with notation we have used in other chapters.</fn> introduces a model of influenza having five compartments. This model has a Susceptibles (S) compartment that is similar to what we have seen before. There is then an Exposed-and-incubating (E) compartment for people incubating influenza who are not yet able to spread influenza to others. After that, people may be Infectious (I), meaning they have symptoms and can spread influenza, or they may be Asymptomatic (A), meaning they do not have symptoms but can still spread influenza to others. In this model, Asymptomatic (A) people are less able to spread influenza than Infectious (I) people. Many people then move into a Recovered (R) compartment, but those who die depart the model rather than moving into the R compartment. The compartmental diagram for this model appears in <xref ref="fig-SEIAR-compartmental-diagram"/>. In this activity, we explore the SEIAR model and investigate Python code that can help us determine <m>\mathcal{R}_0</m> for this model using the Next Generation Method.
          </p>
          <figure xml:id="fig-SEIAR-compartmental-diagram">
            <caption>The compartmental diagram for one possible SEIAR model for influenza, where <q>S</q>stands for <q>Susceptible</q>, <q>E</q> stands for <q>Exposed-and-incubating</q>, <q>I</q> stands for <q>Infectious</q>, <q>A</q> stands for <q>Asymptomatic</q> and <q>R</q> stands for <q>Recovered</q>. In this model, Asymptomatic individuals have no symptoms but can spread influenza, though they are not as contagious as individuals in the Infectious compartment.</caption>
              <image width="80%">
              <description>(Write this)</description>
                <latex-image>
                \begin{tikzpicture}
                \draw [thick] [black] (0,3) -- (2,3);
                \draw [thick] [black] (2,3) -- (2,5);
                \draw [thick] [black] (2,5) -- (0,5);
                \draw [thick] [black] (0,5) -- (0,3);
                \node [black] at (1,4) {\Huge $S$};
                \draw [thick] [->] (2.1,4) to (4.65,4); 
                \node at (3.35,4.4) {\large $\beta (I + \delta A)$};
                \draw [thick] [black] (4.75,3) -- (6.75,3);
                \draw [thick] [black] (6.75,3) -- (6.75,5);
                \draw [thick] [black] (6.75,5) -- (4.75,5);
                \draw [thick] [black] (4.75,5) -- (4.75,3);
                \node [black] at (5.75,4) {\Huge $E$};
                \draw [thick] [->] (6.85,4.7) to (9.15,6); 
                \node at (7.75,5.65) {\large $p \kappa E$};
                \draw [thick] [->] (6.85,3.3) to (9.15,2); 
                \node at (7.7,1.9) {\large $(1-p) \kappa E$};
                \draw [thick] [black] (9.25,5) -- (11.25,5);
                \draw [thick] [black] (11.25,5) -- (11.25,7);
                \draw [thick] [black] (11.25,7) -- (9.25,7);
                \draw [thick] [black] (9.25,7) -- (9.25,5);
                \node [black] at (10.25,6) {\Huge $I$};
                \draw [thick] [->] (11.35,6.7) to (14.5,6.7); 
                \node at (12.8,7.1) {\large $(1-f) \alpha I$};
                \draw [thick] [->] (11.35,6) to (13.65,4.7); 
                \node at (12.7,5.8) {\large $f \alpha I$};
                \draw [thick] [black] (9.25,1) -- (11.25,1);
                \draw [thick] [black] (11.25,1) -- (11.25,3);
                \draw [thick] [black] (11.25,3) -- (9.25,3);
                \draw [thick] [black] (9.25,3) -- (9.25,1);
                \node [black] at (10.25,2) {\Huge $A$};
                \draw [thick] [->] (11.35,2) to (13.65,3.3); 
                \node at (12.7,2.3) {\large $\eta A$};
                \draw [thick] [black] (13.75,3) -- (15.75,3);
                \draw [thick] [black] (15.75,3) -- (15.75,5);
                \draw [thick] [black] (15.75,5) -- (13.75,5);
                \draw [thick] [black] (13.75,5) -- (13.75,3);
                \node [black] at (14.75,4) {\Huge $R$};
                \end{tikzpicture}
                </latex-image>
               </image>
          </figure>  
          <ol>                           
            <li>
              <p>
                The parameter <m>p</m> may take on values <m>0 \leq p \leq 1</m>. Use the questions below to think through the role of <m>p</m> in the SEIAR model.  
              </p>
              <ol>
                <li>
                  <p>
                    What does it mean that the arrow from E to I includes the term <m>p \kappa E</m>, and the arrow from E to A includes the term <m>(1-p) \kappa E</m>? What would happen if we added the terms on these two arrows and simplified the result?
                  </p>
                </li>
                <li>
                  <p>
                    How would the result in part (a) compare with the formula for moving from the E compartment to the I compartment in a simpler model with an Exposed-and-incubating compartment, such as the model in <xref ref="activity-seir-model-pertussis-setup"/>? 
                  </p>
                </li>
              </ol>
            </li>
            <li>
              <p>
                Asymptomatic people in the SEIAR model are able to spread influenza but may not be able to spread influenza as easily as people in the Infectious compartment. Given this information, what possible values for <m>\delta</m> make sense? 
              </p>
            </li>
            <li>
              <p>
                This model separates Recovered people from those who die from influenza. We have seen that the R compartment stands for Recovered. As further information, the possible values for the parameter <m>f</m> are <m>0 \leq f \leq 1</m>. Explain how <m>f</m> distinguishes people who have died from people who have recovered, and compare this approach with how we have handled deaths in models where the R compartment stood for Removed.
              </p>
            </li>
          </ol>     
        </statement>
        <answer>
          <ol>                           
            <li>
              <ol>
                <li>
                  <p>
                    The parameter <m>p</m> splits up the term <m>\kappa E</m>, sending a fraction <m>p</m> from the Exposed-and-incubating compartment to the Infectious compartment, and the other fraction <m>1-p</m> to the Asymptomatic compartment.
                  </p> 
                  <p> Notice that since <m>0 \leq p \leq 1</m>, then <m>0 \leq 1-p \leq 1</m>. This means that <m>0 \leq p\kappa E \leq \kappa E</m> and <m>0 \leq (1-p)\kappa E \leq \kappa E</m>.
                  </p>
                  <p>
                    Adding the two terms: <m>p\kappa E + (1-p)\kappa E = p \kappa E + \kappa E - p \kappa E = \kappa E</m>.
                  </p>
                </li>
                <li>
                  <p>
                    In a simpler model, the expression <m>\kappa E</m> would represent the full number of people transitioning from the Exposed-and-incubating compartment to the Infectious compartment within a single unit of time. In the SEIAR model, <m>\kappa E</m> is split into two pieces, <m>p\kappa E</m> and <m>(1-p)\kappa E</m>, so that the total number of people departing the E compartment is the same, but those people go to two possible compartments, the Infectious compartment and the Asymptomatic compartment.
                  </p>
                </li>
              </ol>
            </li>
            <li>
              <p>
                It makes sense to have <m>0 \lt \delta \lt 1</m>. Notice that letting <m>\delta = 0</m> would means there is no spread of influenza from Asymptomatic people, and letting <m>\delta = 1</m> would means Asymptomatic people spread influenza just as much as people in the Infectious compartment. For values of <m>\delta</m> strictly between <m>0</m> and <m>1</m>, Asymptomatic people spread influenza to some extent, but strictly less than people in the Infectious compartment
              </p>
              <p>
                For this model, we wrote that Asymptomatic people spread influenza less than Infectious people, so we should not allow <m>\delta \gt 1</m>. However, the idea of <m>\delta \gt 1</m> could be useful in some other model with different assumptions.
              </p>
            </li>
            <li>
              <p>
                In a single unit of time, <m>\alpha I</m> people depart compartment I. A fraction <m>f</m> of these people move into compartment R, meaning they have recovered. A fraction <m>1-f</m> of these people do not move into a named compartment. These people die, and in this model, people who have died are no longer represented as being in a compartment. This means that in this model, the total population of people in compartments does not stay the same across time.
              </p>
            </li>
          </ol>
        </answer>
      </activity>

        <p>
          The code block below produces the eigenvalues for the SLIAR model. This code can also be used as a template for producing eigenvalues when the Next Generation Method produces a <m>3\times 3</m> matrix. Comparing this code with the previous code may help show how similar the code is when computing the Next Generation matrix for different models, as well as showing what to change for a different model.
        </p>

        <sage>
          <input>
            from sympy import * 
            init_printing(use_unicode=True)
            
            N = Symbol('N') 
            gamma = Symbol('gamma')
            beta = Symbol('beta')
            kappa = Symbol('kappa')
            alpha = Symbol('alpha')
            delta = Symbol('delta')
            eta = Symbol('eta')
            p = Symbol('p')

             
            # The F matrix of partial derivatives
            F = Matrix([[0, beta * N, beta * N * delta], [0, 0, 0], [0, 0, 0]])
            print("F = ", F)
            
            # The V matrix of partial derivatives
            V = Matrix([[kappa, 0, 0], [-p * kappa, alpha, 0], [-(1-p) * kappa, 0, eta]])
            print("V = ", V)
            
            # Computing V inverse and the Next Generation matrix
            Vinv = V**-1
            print("V inverse = ", Vinv)
            FVinv = F * Vinv
            print("Next Gen Matrix = ", FVinv)
            
            # Calculating eigenvalues
            
            R0eval = FVinv.eigenvals()
            print("The eigenvalues and their multiplicities are: ", R0eval)
          </input>
          <output>
          
          </output>
          </sage>
    </section>


    <!-- <ol>
      <li>
        <p>
          For the function <m>x^2+y^2=4</m>, compute its derivative with respect to <m>x</m>, using the information that <m>y</m> is a function of <m>x</m>. 
          <m>y \, '</m>. Do this by computing derivatives of both <m>x^2</m> and <m>y^2</m>, and then solving for <m>y \, '</m>, meaning that your response is written as <q><m>y \, ' = \, </m> </q> followed by the derivative formula you have computed.
          This means that you will compute the derivative of <m>x^2</m> similarly to how you computed derivatives in part (1) of this activity. For computing the derivative of <m>y^2</m>, use a similar derivative formula as for the derivative of <m>x^2</m>, and then use the chain rule to multiply by the derivative of <m>y</m>, which can be written as <m>y \, '</m>. 
        </p>
      </li>
      <li>
        <p>
         Notice that, for the derivatives of both <m>x</m> and <m>y</m>, the independent variable is <m>x</m>. This means that the derivative for <m>x</m> could be written as <m>\frac{d}{dx}(x)</m>, meaning <q>the derivative of <m>x</m>, with respect to <m>x</m></q>, while the derivative for <m>y</m> could be written as <m>\frac{d}{dx}(y)</m>, meaning <q>the derivative of <m>y</m>, with respect to <m>x</m></q>. With this mathematical background in mind, comment on what the derivative formula is for <m>x</m>, compared with what the derivative formula is for <m>y</m>. 
        </p>
      </li>
    </ol> -->






  </chapter>