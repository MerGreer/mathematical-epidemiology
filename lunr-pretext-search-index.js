var ptx_lunr_search_style = "textbook";
var ptx_lunr_docs = [
{
  "id": "frontmatter-2",
  "level": "1",
  "url": "frontmatter-2.html",
  "type": "Colophon",
  "number": "",
  "title": "Colophon",
  "body": "  copyright  This book was authored in PreTeXt .  "
},
{
  "id": "preface-overall",
  "level": "1",
  "url": "preface-overall.html",
  "type": "Preface",
  "number": "",
  "title": "Preface",
  "body": " Preface  Welcome to Mathematical Epidemiology and More: A Course on Compartmental Models. It so happens that this book is becoming available well after the start of the global COVID-19 outbreak. During this pandemic, mathematics, data, epidemiology, graphs, models, and charts began appearing in the news and other media at levels beyond what we had ever seen before. To fully appreciate and act on the information in the media, it has been helpful to know first-hand the ways models can be built, used, and misused, and to understand the underlying mathematics involved.  Yet this text's origin lies not in the COVID-19 outbreak, but in the much longer history of mathematical epidemiology. The text builds on a course that has been taught since 2014, and typical students studying these topics pre-2020 had never heard of connections between mathematics and epidemiology. Nearly all students in the course, before and since 2020, have gained their first significant introduction to disease models within this course. Examples of outbreaks we study include measles, Ebola, mumps, and whooping cough.  The approach used throughout this text is to dive into using, then building, disease models. We play with models and discover the ways each model responds to small and large changes. We represent the ideas of models using images, equations, words, graphs, and numbers. Each section centers on one or more activities, and as we work through these activities, we build up knowledge about how to construct and work with mathematical models of disease outbreaks.   Who is the expected audience for this book? The audience I have in mind while writing is a class of undergraduates, studying together, and checking in with their professor along the way. These students have studied at least one semester of calculus, focusing primarily on derivatives as rates of change. It helps for students to also recognize that integrals and derivatives are inverse operations, to know that integrals sum up area under a curve (when all values on the curve are nonnegative), and to be familiar with the idea of computing derivative and antiderivative formulas. Some sections of this text use linear algebra, specifically matrices and eigenvalues. These sections are not required for learning from this book. Or, for students who would like to include these sections but have not studied linear algebra, there is a brief tutorial available.  Though undergraduates are the audience I primarily think about while writing, they are not the only audience. My goal is that anyone with some calculus background will be able to learn about mathematical epidemiology by working through these activities.   Who can teach from this book? My goal is for many teachers and professors of college-level mathematics to feel comfortable teaching from this book. There is no requirement to have taught mathematical modeling before, or to have studied mathematical epidemiology.   What other kinds of math will we use, besides calculus? To do mathematical modeling, we use any math we need. We typically jump into activities and then introduce new mathematical ideas whenever they are helpful. These math ideas come from differential equations, multivariable calculus, linear algebra, numerical analysis, probability, proofs, and more. If you have already studied some of these subjects, you may be able to move more quickly through some of the activities. On the other hand, if you have not yet taken full courses in these subjects, then there will be enough information contained here for you to learn what you need and keep modeling. And, perhaps, you may find that you want to learn more, and that may lead you to study additional areas of mathematics.   What kind(s) of models will we use? For most of this textbook, we use compartmental models, which can be drawn in pictures and written as ordinary differential equations. (It is OK to not know some of the terms in the previous sentence when you start: all will be explained.) Some of these models are called SIR models. We will mention other types of models, but we restrict our focus to compartmental models using ordinary differential equations so that we can fully understand the underlying math ideas, how to use the models, and how to visualize our results.   Do all the models in this text focus only on diseases? Actually, no. The style of modeling we focus on has many other applications. We will investigate several other ways to use these models, including studying the spread of rumors, political party affiliations, and viral YouTube videos.  Thank you for reading this introduction, and I hope you enjoy the book!  Meredith L. Greer  "
},
{
  "id": "preface-students",
  "level": "1",
  "url": "preface-students.html",
  "type": "Preface",
  "number": "",
  "title": "To Students: How to Get the Most from This Text",
  "body": " To Students: How to Get the Most from This Text  Dear students working from this text: I hope you enjoy and learn a lot from these pages! My plan when writing has been to encourage active learning. This means that written explanations are kept to a minimum, and there are lots of chances for you to try things on your own or with other students. The book is filled with applications to real outbreaks; examples inspired by outbreaks; and applications to ideas that do not involve epidemics at all, but that can be represented by similar mathematics as what we use to study diseases. The types of mathematical models studied in this text are used currently in the world, by people making decisions about public policy and for other wide-reaching goals, and I want you to emerge from using this text with a strong sense of what these models can, and cannot, tell us.  The chapters in this text are typically structured in a consistent way.    The Goals of the chapter appear at the very start.    After a brief introduction, an Exploration activity asks you to engage with questions that motivate the rest of the chapter.    The sections within the chapter include some reading for you to do, and Activities appear frequently. It is best if you do these activities when they appear: many activities contain new information, rather than just examples, and later reading will assume you have already completed the activities. Some activities include hints or answers, and you will learn the most by completing as much of the activity as you can before checking the hints or reading the answers.    At the end of each chapter, there are questions For Further Thought that provide deeper insights or additional examples of the chapter's ideas.    The near the end of the book includes descriptions of key terms, along with the chapter in which each term first appears.  There are footnotes in this book, appearing as a raised number. Here is an example of a footnote! In the web version of the book, clicking on the raised number shows the footnote in a box that opens below the paragraph. The web version of the book also contains live links. Some of the links, such as to chapters, take you to different pages of the book. Other links, such as to figures or equations that we saw earlier in the text, open a box showing these figures or equations directly where you are reading, so that you can see them without jumping from webpage to webpage. You will also see Python code boxes in this text, with a button after that says Evaluate (Sage) . In the web version of this text, you can click on the Evaluate (Sage) button to evaluate the code directly within the book.  For readers using an electronic PDF of this book, many things are similar to the web version, but the live links to equations and figures will lead to the original location of those items within the text, rather than opening them within a box within the page you are reading.  For anyone not using the web version of this text, the Python code will not run directly, which requires you to set up some way to run Python on your computer. There are many ways to do this. Suggestions include (and are not limited to): copying the code directly into the box at the top of the page at sagecell.sagemath.org , using Google Colab at colab.research.google.com , or downloading an installation of Python directly from python.org .  Last but not least: I will not tell you how to think. Mathematical modeling involves setting priorities and incorporating personal values, and each person gets to decide these for themselves. This book focuses on the processes of developing and describing models, stating and supporting your assumptions, and understanding and explaining your model's outcomes. The mathematics certainly needs to be correct, and all the processes should be done carefully, but priorities and values are personal.  Thank you for reading!  "
},
{
  "id": "ch-prelude-diseases-in-popular-news",
  "level": "1",
  "url": "ch-prelude-diseases-in-popular-news.html",
  "type": "Chapter",
  "number": "1",
  "title": "Prelude: Diseases in Popular News",
  "body": " Prelude: Diseases in Popular News      Read about an outbreak in a non-scientific article    Begin to look for disease details that can turn into mathematical ideas    Notice the goals and style of writing in a news or popular culture article on an outbreak, and think about how these may be different in a scientific journal article    Prioritize, and build toward a habit of, full-class discussion     Disease outbreaks have been a topic of widespread discussion for a very long time. In this course, we will discuss the scientific study of outbreaks, data sets collected and curated by government officials, and policy ideas for improving public health outcomes. To begin, however, we examine writing in news and popular culture articles about diseases, starting in .   Reading about Disease in the News and Popular Media   The Washington Post is a newspaper with a corresponding website. CNN is a television station and an online news source. People magazine and the corresponding website people.com center on celebrity news and human-interest stories People magazine Wikipedia entry , accessed 15 Nov 2022 .    Read one or more of these suggested articles, which come from the outlets described above.     A tourist infected with measles visited Disneyland and other Southern California hot spots in mid-August , published August 24, 2019, by the Washington Post;     Pandemic immunity gap is probably behind surge in RSV cases, scientists say , published October 28, 2022, by CNN;     Vaccinations a Priority as Measles Cases in the U.S. Number 107 in the First 7 Months of 2018 , published August 16, 2018, by People.      While reading each article, think through the answers to as many of the following questions as you can.    What illness is involved?    How does it spread?    How quickly does it proceed? Consider incubation time, length of sickness, etc.    Is it more prominent in some parts of the world than others?    What does the article say about vaccines, quarantines, isolation, testing, or other approaches to managing this illness?    What mathematical concepts can you find in your article?    The question about mathematical concepts is very open-ended. List any ideas that seem to make sense to you.   hi     Possible Discussion Themes   is very open-ended. The goal of this exploration is to begin discussing outbreaks as they appear in news and popular culture writing. There is no hidden right answer to find.  There are many possible themes that may arise during discussion. Below, you can find a sample of such themes. These may help to expand thoughts and discussions you are already having about the articles. Or it is possible that you discovered yet other themes, beyond those listed here, and this is wonderful!   Theme 1. The diseases in the articles are measles and RSV. Both are highly contagious and spread through coughing and sneezing.   Theme 2. The articles give different kinds of information about the ways measles and RSV can spread. Some of the articles give descriptions that let us estimate incubation period or length of sickness, and some give fewer such descriptions.   Theme 3. Some of the articles describe disease presence in the U.S. only, and some articles describe disease presence in other countries.   Theme 4. All of the articles discuss vaccination, but there is not yet a vaccine for RSV. Some alternate control measures, such as hand washing or sanitizing surfaces, appear in one or more articles.   Theme 5. The question about mathematical concepts could mean many things. There are many possible answers, including but not limited to: numbers of recent cases, lengths of time of the stages of disease, historical data about when more or fewer people have been ill in past years, or percentages of people vaccinated.    Follow Up By Seeking More Precise Data  For these and other diseases or outbreaks we may read about, we can add to our knowledge of underlying disease biology by gathering additional data. We will find, when modeling diseases, that it can help to know the lengths of time for each disease stage, such as incubation period, how long a person is typically sick, and how long any immunity to the disease lasts. Vaccine data is also helpful, including whether a vaccine exists at all, how effective the vaccine is on average, and what percentage of people are vaccinated against a particular disease. Some of the data we collect may depend on time or place: vaccines may be newer, or different percentages of people may be vaccinated in different locations.  One place to look up data is the Centers for Disease Control and Prevention (CDC) . As one example, a web search can take us to the CDC's information page about measles . Not every disease is presented in an identical manner on the CDC's web pages, but there are typically page titles including the words Transmission or How It Spreads that help us, as well as page titles including the word Symptoms . These pages contain lots of information about how diseases spread and how long each stage takes. Such information helps us build our models.    Take a look at the CDC's online information pages for measles. Putting together the information on these pages, construct a timeline of measles contagion in a single person, starting at the time the person is first infected. Include the following, and include whatever other information appears important.   How long does it typically take for a person to begin being contagious?    How long is the total time period from when a person begins being contagious to when they no longer are contagious?    How does contagion overlap, or not overlap, with when a person has the typical measles rash?   It is likely, for most diseases, that these timelines will involve ranges of time such as 3 to 5 days rather than more specific amounts of time such as 4 days . Time ranges will be helpful to us as we fine-tune our models.      Look up the lengths of time for key phases of how measles unfolds. Include the length of time of any incubation period, and include how long a person is contagious with measles. There may be additional disease phases to include. Use official sources, as described in . Cite your sources, including links to any web pages, the title of each web page used, the name of the government agency or other publisher of each web page, and the date you most recently accessed the web page.  Look up the lengths of time for key phases of how RSV (respiratory syncytial virus) unfolds. Include the length of time of any incubation period, and include how long a person is contagious with RSV. There may be additional disease phases to include. Use official sources, as described in . Cite your sources, including links to any web pages, the title of each web page used, the name of the government agency or other publisher of each web page, and the date you most recently accessed the web page.  Look up additional information about measles and RSV. How does each spread? What are governmental recommendations for people who think they may have measles or RSV? And so on: read more about each disease, and write several pieces of information that you find interesting. Does anything you find surprise you? Cite your sources, including links to any web pages, the title of each web page used, the name of the government agency or other publisher of each web page, and the date you most recently accessed the web page.   "
},
{
  "id": "intro-prelude-1",
  "level": "2",
  "url": "ch-prelude-diseases-in-popular-news.html#intro-prelude-1",
  "type": "Goals",
  "number": "",
  "title": "",
  "body": "   Read about an outbreak in a non-scientific article    Begin to look for disease details that can turn into mathematical ideas    Notice the goals and style of writing in a news or popular culture article on an outbreak, and think about how these may be different in a scientific journal article    Prioritize, and build toward a habit of, full-class discussion    "
},
{
  "id": "expl-reading-about-disease-in-the-news-and-popular-media",
  "level": "2",
  "url": "ch-prelude-diseases-in-popular-news.html#expl-reading-about-disease-in-the-news-and-popular-media",
  "type": "Exploration",
  "number": "1.1",
  "title": "Reading about Disease in the News and Popular Media.",
  "body": " Reading about Disease in the News and Popular Media   The Washington Post is a newspaper with a corresponding website. CNN is a television station and an online news source. People magazine and the corresponding website people.com center on celebrity news and human-interest stories People magazine Wikipedia entry , accessed 15 Nov 2022 .    Read one or more of these suggested articles, which come from the outlets described above.     A tourist infected with measles visited Disneyland and other Southern California hot spots in mid-August , published August 24, 2019, by the Washington Post;     Pandemic immunity gap is probably behind surge in RSV cases, scientists say , published October 28, 2022, by CNN;     Vaccinations a Priority as Measles Cases in the U.S. Number 107 in the First 7 Months of 2018 , published August 16, 2018, by People.      While reading each article, think through the answers to as many of the following questions as you can.    What illness is involved?    How does it spread?    How quickly does it proceed? Consider incubation time, length of sickness, etc.    Is it more prominent in some parts of the world than others?    What does the article say about vaccines, quarantines, isolation, testing, or other approaches to managing this illness?    What mathematical concepts can you find in your article?    The question about mathematical concepts is very open-ended. List any ideas that seem to make sense to you.   hi  "
},
{
  "id": "sec-Follow-Up-By-Seeking-More-Precise-Data-4",
  "level": "2",
  "url": "ch-prelude-diseases-in-popular-news.html#sec-Follow-Up-By-Seeking-More-Precise-Data-4",
  "type": "Activity",
  "number": "1.2",
  "title": "",
  "body": "  Take a look at the CDC's online information pages for measles. Putting together the information on these pages, construct a timeline of measles contagion in a single person, starting at the time the person is first infected. Include the following, and include whatever other information appears important.   How long does it typically take for a person to begin being contagious?    How long is the total time period from when a person begins being contagious to when they no longer are contagious?    How does contagion overlap, or not overlap, with when a person has the typical measles rash?   It is likely, for most diseases, that these timelines will involve ranges of time such as 3 to 5 days rather than more specific amounts of time such as 4 days . Time ranges will be helpful to us as we fine-tune our models.   "
},
{
  "id": "exercises-prelude-diseases-in-popular-news-1",
  "level": "2",
  "url": "ch-prelude-diseases-in-popular-news.html#exercises-prelude-diseases-in-popular-news-1",
  "type": "Exercise",
  "number": "1.3.1",
  "title": "",
  "body": "Look up the lengths of time for key phases of how measles unfolds. Include the length of time of any incubation period, and include how long a person is contagious with measles. There may be additional disease phases to include. Use official sources, as described in . Cite your sources, including links to any web pages, the title of each web page used, the name of the government agency or other publisher of each web page, and the date you most recently accessed the web page. "
},
{
  "id": "exercises-prelude-diseases-in-popular-news-2",
  "level": "2",
  "url": "ch-prelude-diseases-in-popular-news.html#exercises-prelude-diseases-in-popular-news-2",
  "type": "Exercise",
  "number": "1.3.2",
  "title": "",
  "body": "Look up the lengths of time for key phases of how RSV (respiratory syncytial virus) unfolds. Include the length of time of any incubation period, and include how long a person is contagious with RSV. There may be additional disease phases to include. Use official sources, as described in . Cite your sources, including links to any web pages, the title of each web page used, the name of the government agency or other publisher of each web page, and the date you most recently accessed the web page. "
},
{
  "id": "exercises-prelude-diseases-in-popular-news-3",
  "level": "2",
  "url": "ch-prelude-diseases-in-popular-news.html#exercises-prelude-diseases-in-popular-news-3",
  "type": "Exercise",
  "number": "1.3.3",
  "title": "",
  "body": "Look up additional information about measles and RSV. How does each spread? What are governmental recommendations for people who think they may have measles or RSV? And so on: read more about each disease, and write several pieces of information that you find interesting. Does anything you find surprise you? Cite your sources, including links to any web pages, the title of each web page used, the name of the government agency or other publisher of each web page, and the date you most recently accessed the web page. "
},
{
  "id": "ch-zombies-can-math-help",
  "level": "1",
  "url": "ch-zombies-can-math-help.html",
  "type": "Chapter",
  "number": "2",
  "title": "Zombies: Can Math Help?",
  "body": " Zombies: Can Math Help?      Simulate an outbreak and actively observe the data that emerge    Think through the disease spread process underlying a simulation    Compare the disease spread process with a system of differential equations suggested as a possible model for this process    Consider how changes in the disease spread process can change the outcome     First things first: let's simulate an outbreak! The simulations in this text, starting with , are directly inspired by the Disease Lab materials published freely online by Utah State University. Jim Powell and Matt Lewis, Disease Lab (2016). Laboratory Experiences in Mathematical Biology . 1. https:\/\/digitalcommons.usu.edu\/lemb\/1 You can do this exploration in a group or on your own. (Groups are recommended, if you are able to team up with one or more other people.) You will model humans, also called Susceptibles, as well as zombies, also called Infectious. The Utah State University link describes a hands-on way to play this game using dry erase markers and overhead projector transparencies. In this text, we primarily use a related online Zombie Game App This app was created by Gabe Nelson, Bates College Class of 2020, after campus closed due to COVID-19. to play and to generate data.  Why do we start with a simulation? First, this course requires active involvement, so we create space immediately for that involvement. Second, this simulation game can be interactive, and working with others helps us see other perspectives and adds both fun and community to learning. Third, though we mostly work with real-life outbreaks in this textbook, we also purposely diverge from reality to think through hypothetical outcomes, and zombies are one way to think creatively about disease spread. Fourth, this activity generates outbreak examples, and examples throughout this course are one of our main ways to build toward theory and illustrate abstract concepts. Therefore, to achieve the goals for each section, we usually begin with exploration activities, then use what we learned in the explorations to help build our mathematical framework.   Zombie Game   This game uses a grid of 100 hexagons to represent a space in which humans and zombies interact. Each round of game play represents one day. For each day, each human ( Susceptible ) is represented on the grid by a blue X on a single hexagon. Each zombie ( Infectious ) is represented by three red dots connected by red lines, meant to suggest a head and two arms, each of which can infect a human. Each zombie spreads out across three connected hexagons. Sample hex grids, both unmarked and marked, appear in .   Blank hex grid, and sample filled-in section    Full hex grid, not filled in   Hex grid of 100 hexagons, in a ten-by-ten arrangement     Representing humans (blue X marks) and zombies (red dots and lines, representing a head and two arms) on the hex grid   Detail of hex grid, showing placement of zombies and humans        To start the simulation, go to the Zombie Game App . Use the default settings at first, except to change the Human Start Count to 49, as shown in . Combining these 49 Humans with the Zombie Start Count of 1, the total population then equals 50.   Changing Human Start Count to 49 in the Zombie Game App   Screen image from the Zombie Game App, showing the Human Start Count      To watch the outbreak unfold, day by day, first click start . You will see the zombies and humans placed randomly on the grid. Both a table of data, and a graph of Round 0 and Round 1 data, appear to the right. A sample Round 1 result appears in , and the table of data is shown more clearly in . There is randomness in how Zombies and Humans are placed on the grid, so your one-day results on the app may be different.   Sample output for Round 1 from the Zombie Game App   Sample output for Round 1 from the Zombie Game App, including the grid of humans and zombies, plus a table and a graph of data for Rounds 0 and 1     Table of sample data from Round 1 of a human zombie simulation   Sample data for one round of a simulation from the Zombie Game App, viewed as a table    If you began with 49 humans and 1 zombie, these will be the numbers listed for Round 0. The data for Round 1 are computed by looking at the hex grid: each human that overlaps with a zombie is a New Infection and moves from the # Humans category to the # Zombies category. This means that this number of individuals is subtracted from # Humans and added to # Zombies . Double check that your count of new infections matches the app's count! In , the one zombie overlaps two blue X hexes. We therefore see that on Round 1 there are two New Infections . We also compare Round 1 with Round 0. The two New Infections for Round 1 mean that the population of Susceptibles (that is, humans) drops by 2, from 49 to 47, while the population of Infectious (that is, zombies) rises by 2, from 1 to 3.)    When you are ready, click next round to see a new grid for Round 2. The table of data, and the graph, both update to include Round 2. Continue to click next round at your own pace, thinking through the grid, table, and graph as each step proceeds. The game ends when there are either no humans left to infect, or no zombies left to keep infecting new humans.    As an alternative to make the game more interactive, the app allows you to choose your own locations for humans and zombies. To choose your own locations, under Mode , check Hotseat instead of Auto . The app then prompts you to place all the Humans for one round of the simulation. After all Humans are placed, the app prompts you to place your Zombies. For each Zombie, you must place the head and the arms. When this is complete, the app shows both Humans and Zombies, to indicate how many new infections have occurred. To make this into a game, two people can play. One person places the Humans, without their partner watching . Then the partner places the Zombies, again without their partner watching . Then, together, the partners can see how many new infections there are, once the Human and Zombie grids are shown together. Is there any strategy that helps either the Humans or the Zombies?    Try the game one or many times, on your own or with a partner. Copy several resulting data sets, as numbers and as images, so that you can look for patterns.      We Now Have Data: Qualitative Musings  You have now had the chance to generate one or many data sets. Take time to examine the data, both in the form of a table and in the form of a graph. Do this with multiple data sets: in a classroom setting, different student groups can share data.    Think through the following questions. Spend time trying to answer these before you continue through this book.    Upon viewing multiple sets of data from the Zombie Game App , what patterns do you observe?    Do you have any questions, or guesses, about what might happen in additional simulations in the app?    So far, we have mostly kept the default settings in the app, and played just one version of the hands-on game, but what if we changed the rules for human zombie interaction? Do you suspect that the outcome(s) could then be different? If so, then in what ways do you think the outcome(s) might change?      In this book, we work with mathematical models. As a first step toward building mathematical models, we should think through the underlying rules of our situation. We should also think through any outcomes of these rules. Must these rules always lead to similar outcomes? Could these same rules produce significantly different outcomes? Spending time on understanding our system is a crucial part of making sure our mathematical approaches make sense.    In , some of the first patterns to notice may be about the shapes of the graphs of the Human and Zombie populations as time progresses forward from Day 0. Next, develop responses to the following questions, and explain your reasoning. (If you already thought about these as part of , great work!)    What can you say about whether the size of each population (Humans and Zombies) is rising or falling?    Can a single population first rise, and later fall (or first fall, and then rise)?    If we tried this simulation many times, in what ways could your results be similar, and in what ways could your results be different?      There are many other things you may notice. To name just a few ideas: you may think about the speed with which each curve rises or falls. You may think about how much these speeds change when you try the game several times. You may relate a rise in one graph to a fall in the other, thinking about a sort of symmetry between the two graphs. You may think about when the rising or falling is relatively slow vs. relatively fast. These and many other observations are a valued and central part of working toward mathematical model building.    A First Model  After completing a simulation, you have data for the numbers of humans and zombies during each day of the outbreak. These data can be presented as a table of values, and they can be presented as a graph. In the app, the table format for data appears as in , and the graph format for data appears as in .   Table of sample data from a human zombie simulation   Sample data for a full simulation from the Zombie Game App, viewed as a table     Graph of sample data from a human zombie simulation   Sample data for a full simulation from the Zombie Game App, viewed as a graph    As we build a model, we focus on the relatively slow changes in population sizes that happen near the beginning and end of the model. This may not happen in every simulation: for instance, sometimes zombies happen to infect a lot of humans in the last time step. However, in other simulations, one lone human may last for many days before being infected. We focus on what happens on average . For this model, on average, the pace of infection seems slower near the beginning and near the end of the outbreak.    One observation is that the pace of infection is slower when there are relatively few humans, or when there are relatively few zombies.    Can you see why it makes sense that infection tends to spread less quickly when there are fewer individuals in one of the populations?    Conversely, why does it make sense for infection to spread relatively rapidly when there are relatively large numbers of both humans and zombies?    To take the discussion about pace of infection to a logical extreme: how fast can infection spread when there are zero humans, or when there are zero zombies?      Putting this all together, we can say that, on average, the change in the number of infections seems to depend on both the number of humans (Susceptibles) and the number of zombies (Infectious). One mathematical approach to writing this is to say that new cases per day are proportional to the number of Susceptibles multiplied by the number of Infectious. We can write this as follows:   To turn this into a mathematical formula, we will use a system of ordinary differential equations . This is a good time to mention: to read and learn from this text, there is no need to have taken a course on differential equations. To write and work with the models we use, it is sufficient to know these ideas from calculus:    derivatives represent change;    an increasing graph has a positive slope and a derivative greater than zero;    a decreasing graph has a negative slope and a derivative less than zero; and    a horizontal graph (one in which the output value is not changing) has a slope of zero and a derivative equal to zero.    One other helpful piece of information is the fact that a differential equation is just an equation containing a derivative. Many of the equations in calculus contain a derivative. A quick example is , which contains the derivative . This means that if you have studied calculus, then you have already built significant experience using differential equations.  With these calculus ideas in mind, we return to our model. We will write two equations, one to represent the change in the Susceptible population and one to represent the change in the Infectious population. When we say change , we mean the change that happens on average if we were to run the simulation many times. Our independent variable is time, which we label . You may have noticed that time is the variable on the horizontal axis: this axis is labeled Round in the app, and it represents time in the form of days. For our dependent variables, we choose letters that correspond to the names of each population. This makes the dependent variable meanings easier to remember, and for many people, it makes the differential equations easier to interpret. Therefore let represent the Susceptible population and represent the Infectious population. Since our populations are represented by the letters and , we call this model an SI model . We say the names of each of the first two letters when saying SI model aloud, that is, we say S  I  model .  You may have noticed that our data show us not just total numbers of and at each time step, but also show how and change over time. The number of New Infections tells us precisely how many people change, on each day, from the population to the population. We now connect , , and the number of New Infections using differential equations and the proportionality relationship from :   There is a lot of calculus happening in these SI model equations! Here are some of the key ideas to notice.    The derivative term represents the change, across time, in population .    Similarly, the derivative represents the change, across time, in population .    In this model, individuals leaving go immediately into , which is why the same term appears on the right-hand side of both equations.    Individuals can only leave , so decreases, and is negative. We actually see the negative sign ( ) written into the differential equation.    Individuals can only enter , so increases, and is positive. We do not explicitly write a positive sign ( ), but we note that there is no negative sign ( ).    The values of and should never be negative. They should be either positive or zero. This makes sense because they represent populations of individuals. This must also be true mathematically, in order for the model to make sense.    We represent the idea of proportionality by using the parameter . We will experiment in with different values of to see how changing affects the outcomes of the model.    The value of must be positive. This observation is consistent with us directly seeing the negative sign ( ) when a term is negative, and not seeing the negative sign when a term is positive. (With this observation, it could be possible for to be 0, but if there is any outbreak and any interaction of with , then will not be 0.)    This model uses differential equations, which think of time as continuous, using every real value for starting at . By contrast, when we collect data from the zombie game, time is discrete , meaning that time steps forward through values such as Day 0 , Day 1 , Day 2 , and so on. In this course, we mainly use differential equation models, meaning time is thought of as continuous . Continuous time may match well with our intuitive sense of how time works: time does not stop and start. However, the data we collect about disease spread will often be discrete, on time scales such as days or weeks. We will include this knowledge in our work with models.     shows one possible graph of the SI model, with selected so that the graphs in and are fairly similar. Compare these two graphs, thinking through the questions below.   A sample graph of the SI model, drawn using Equations and .   Sample SI graph, showing Susceptibles starting at 49 and dropping toward 0, and Infectious starting at 1 and rising toward 50      The curves in are smooth, whereas the graphs shown in are less so. Why is this?    The SI model, as described in Equations and , provides formulas for and . Yet the graph in shows solution curves for Susceptibles and Infectious, that is, and . Describe how the formulas for and in the SI model correspond to the solution curves and shown in .    Throughout the human-zombie simulation, there are exactly 50 people at all times. Explain how this feature of the simulation appears in both and .    Continue to comment on comparisons, similarities, and differences between and . There are no specific right answers here: this is open-ended exploration, building intuition and understanding for the interactions among data, graphs, and a differential equations model.        Vary the zombie simulation so that zombies have only one arm. In this case, the app represents each zombie by two connected dots, rather than three connected dots. We can change the # of Zombie Arms in the app from 2 to 1. Complete at least two simulations in which zombies have two arms, and at least two simulations in which zombies have one arm, so you will be able to compare outcomes.   Collect and graph the simulation data. Display tables and graphs of data, in the style of and .    How do your results when zombies have one arm compare with the results when zombies have two arms? Write at least three observations about this comparison.    What other variations can you imagine creating in this game? Describe how the game changes, and connect each game change with what it would mean in the real-world scenario of a zombie outbreak.   How might your mathematical model change in order to match this change in the game? In other words, how might your differential equations change?    How might long-term outcomes for humans and zombies change, if at all?   Support your thoughts, to the best of your abilities, using the data and graphs you generate from simulating your changes to the game.  Spend more time examining and thinking about the graph of the SI model, as shown in . The prompts below ask you to make calculus-based observations about the functions and and their derivatives and .   Since , , and cannot be negative, we recognize that must be either negative or equal to zero. Explain what this observation relating to indicates about the Susceptibles graph in .    Since , , and cannot be negative, we recognize that must be either positive or equal to zero. Explain what this observation relating to indicates about the Infectious graph in .    In we will vary the value of in the SI model. Try to predict some of the ways in which changing will change the outcome of the SI model. How will the solution curves in change as increases? How will the solution curves in change as decreases? (Though the value of changes, your discussion should keep .)     "
},
{
  "id": "intro-zombies-1",
  "level": "2",
  "url": "ch-zombies-can-math-help.html#intro-zombies-1",
  "type": "Goals",
  "number": "",
  "title": "",
  "body": "   Simulate an outbreak and actively observe the data that emerge    Think through the disease spread process underlying a simulation    Compare the disease spread process with a system of differential equations suggested as a possible model for this process    Consider how changes in the disease spread process can change the outcome    "
},
{
  "id": "expl-activity-zombie-game",
  "level": "2",
  "url": "ch-zombies-can-math-help.html#expl-activity-zombie-game",
  "type": "Exploration",
  "number": "2.1",
  "title": "Zombie Game.",
  "body": " Zombie Game   This game uses a grid of 100 hexagons to represent a space in which humans and zombies interact. Each round of game play represents one day. For each day, each human ( Susceptible ) is represented on the grid by a blue X on a single hexagon. Each zombie ( Infectious ) is represented by three red dots connected by red lines, meant to suggest a head and two arms, each of which can infect a human. Each zombie spreads out across three connected hexagons. Sample hex grids, both unmarked and marked, appear in .   Blank hex grid, and sample filled-in section    Full hex grid, not filled in   Hex grid of 100 hexagons, in a ten-by-ten arrangement     Representing humans (blue X marks) and zombies (red dots and lines, representing a head and two arms) on the hex grid   Detail of hex grid, showing placement of zombies and humans        To start the simulation, go to the Zombie Game App . Use the default settings at first, except to change the Human Start Count to 49, as shown in . Combining these 49 Humans with the Zombie Start Count of 1, the total population then equals 50.   Changing Human Start Count to 49 in the Zombie Game App   Screen image from the Zombie Game App, showing the Human Start Count      To watch the outbreak unfold, day by day, first click start . You will see the zombies and humans placed randomly on the grid. Both a table of data, and a graph of Round 0 and Round 1 data, appear to the right. A sample Round 1 result appears in , and the table of data is shown more clearly in . There is randomness in how Zombies and Humans are placed on the grid, so your one-day results on the app may be different.   Sample output for Round 1 from the Zombie Game App   Sample output for Round 1 from the Zombie Game App, including the grid of humans and zombies, plus a table and a graph of data for Rounds 0 and 1     Table of sample data from Round 1 of a human zombie simulation   Sample data for one round of a simulation from the Zombie Game App, viewed as a table    If you began with 49 humans and 1 zombie, these will be the numbers listed for Round 0. The data for Round 1 are computed by looking at the hex grid: each human that overlaps with a zombie is a New Infection and moves from the # Humans category to the # Zombies category. This means that this number of individuals is subtracted from # Humans and added to # Zombies . Double check that your count of new infections matches the app's count! In , the one zombie overlaps two blue X hexes. We therefore see that on Round 1 there are two New Infections . We also compare Round 1 with Round 0. The two New Infections for Round 1 mean that the population of Susceptibles (that is, humans) drops by 2, from 49 to 47, while the population of Infectious (that is, zombies) rises by 2, from 1 to 3.)    When you are ready, click next round to see a new grid for Round 2. The table of data, and the graph, both update to include Round 2. Continue to click next round at your own pace, thinking through the grid, table, and graph as each step proceeds. The game ends when there are either no humans left to infect, or no zombies left to keep infecting new humans.    As an alternative to make the game more interactive, the app allows you to choose your own locations for humans and zombies. To choose your own locations, under Mode , check Hotseat instead of Auto . The app then prompts you to place all the Humans for one round of the simulation. After all Humans are placed, the app prompts you to place your Zombies. For each Zombie, you must place the head and the arms. When this is complete, the app shows both Humans and Zombies, to indicate how many new infections have occurred. To make this into a game, two people can play. One person places the Humans, without their partner watching . Then the partner places the Zombies, again without their partner watching . Then, together, the partners can see how many new infections there are, once the Human and Zombie grids are shown together. Is there any strategy that helps either the Humans or the Zombies?    Try the game one or many times, on your own or with a partner. Copy several resulting data sets, as numbers and as images, so that you can look for patterns.   "
},
{
  "id": "exer-begin-zombie-app",
  "level": "2",
  "url": "ch-zombies-can-math-help.html#exer-begin-zombie-app",
  "type": "Activity",
  "number": "2.2",
  "title": "",
  "body": "  Think through the following questions. Spend time trying to answer these before you continue through this book.    Upon viewing multiple sets of data from the Zombie Game App , what patterns do you observe?    Do you have any questions, or guesses, about what might happen in additional simulations in the app?    So far, we have mostly kept the default settings in the app, and played just one version of the hands-on game, but what if we changed the rules for human zombie interaction? Do you suspect that the outcome(s) could then be different? If so, then in what ways do you think the outcome(s) might change?     "
},
{
  "id": "sec-we-now-have-data-qualitative-musings-5",
  "level": "2",
  "url": "ch-zombies-can-math-help.html#sec-we-now-have-data-qualitative-musings-5",
  "type": "Activity",
  "number": "2.3",
  "title": "",
  "body": "  In , some of the first patterns to notice may be about the shapes of the graphs of the Human and Zombie populations as time progresses forward from Day 0. Next, develop responses to the following questions, and explain your reasoning. (If you already thought about these as part of , great work!)    What can you say about whether the size of each population (Humans and Zombies) is rising or falling?    Can a single population first rise, and later fall (or first fall, and then rise)?    If we tried this simulation many times, in what ways could your results be similar, and in what ways could your results be different?     "
},
{
  "id": "fig-human-zombie-data-table",
  "level": "2",
  "url": "ch-zombies-can-math-help.html#fig-human-zombie-data-table",
  "type": "Figure",
  "number": "2.5",
  "title": "",
  "body": " Table of sample data from a human zombie simulation   Sample data for a full simulation from the Zombie Game App, viewed as a table   "
},
{
  "id": "fig-human-zombie-data-graph",
  "level": "2",
  "url": "ch-zombies-can-math-help.html#fig-human-zombie-data-graph",
  "type": "Figure",
  "number": "2.6",
  "title": "",
  "body": " Graph of sample data from a human zombie simulation   Sample data for a full simulation from the Zombie Game App, viewed as a graph   "
},
{
  "id": "sec-a-first-model-6",
  "level": "2",
  "url": "ch-zombies-can-math-help.html#sec-a-first-model-6",
  "type": "Activity",
  "number": "2.4",
  "title": "",
  "body": "  One observation is that the pace of infection is slower when there are relatively few humans, or when there are relatively few zombies.    Can you see why it makes sense that infection tends to spread less quickly when there are fewer individuals in one of the populations?    Conversely, why does it make sense for infection to spread relatively rapidly when there are relatively large numbers of both humans and zombies?    To take the discussion about pace of infection to a logical extreme: how fast can infection spread when there are zero humans, or when there are zero zombies?     "
},
{
  "id": "sec-a-first-model-12",
  "level": "2",
  "url": "ch-zombies-can-math-help.html#sec-a-first-model-12",
  "type": "Paragraph (with a defined term)",
  "number": "",
  "title": "",
  "body": "SI model "
},
{
  "id": "sec-a-first-model-17",
  "level": "2",
  "url": "ch-zombies-can-math-help.html#sec-a-first-model-17",
  "type": "Paragraph (with a defined term)",
  "number": "",
  "title": "",
  "body": "discrete continuous "
},
{
  "id": "sec-a-first-model-18",
  "level": "2",
  "url": "ch-zombies-can-math-help.html#sec-a-first-model-18",
  "type": "Activity",
  "number": "2.5",
  "title": "",
  "body": "   shows one possible graph of the SI model, with selected so that the graphs in and are fairly similar. Compare these two graphs, thinking through the questions below.   A sample graph of the SI model, drawn using Equations and .   Sample SI graph, showing Susceptibles starting at 49 and dropping toward 0, and Infectious starting at 1 and rising toward 50      The curves in are smooth, whereas the graphs shown in are less so. Why is this?    The SI model, as described in Equations and , provides formulas for and . Yet the graph in shows solution curves for Susceptibles and Infectious, that is, and . Describe how the formulas for and in the SI model correspond to the solution curves and shown in .    Throughout the human-zombie simulation, there are exactly 50 people at all times. Explain how this feature of the simulation appears in both and .    Continue to comment on comparisons, similarities, and differences between and . There are no specific right answers here: this is open-ended exploration, building intuition and understanding for the interactions among data, graphs, and a differential equations model.     "
},
{
  "id": "exercises-ch-zombies-can-math-help-1",
  "level": "2",
  "url": "ch-zombies-can-math-help.html#exercises-ch-zombies-can-math-help-1",
  "type": "Exercise",
  "number": "2.3.1",
  "title": "",
  "body": "Vary the zombie simulation so that zombies have only one arm. In this case, the app represents each zombie by two connected dots, rather than three connected dots. We can change the # of Zombie Arms in the app from 2 to 1. Complete at least two simulations in which zombies have two arms, and at least two simulations in which zombies have one arm, so you will be able to compare outcomes.   Collect and graph the simulation data. Display tables and graphs of data, in the style of and .    How do your results when zombies have one arm compare with the results when zombies have two arms? Write at least three observations about this comparison.   "
},
{
  "id": "exercises-ch-zombies-can-math-help-2",
  "level": "2",
  "url": "ch-zombies-can-math-help.html#exercises-ch-zombies-can-math-help-2",
  "type": "Exercise",
  "number": "2.3.2",
  "title": "",
  "body": "What other variations can you imagine creating in this game? Describe how the game changes, and connect each game change with what it would mean in the real-world scenario of a zombie outbreak.   How might your mathematical model change in order to match this change in the game? In other words, how might your differential equations change?    How might long-term outcomes for humans and zombies change, if at all?   Support your thoughts, to the best of your abilities, using the data and graphs you generate from simulating your changes to the game. "
},
{
  "id": "exercises-ch-zombies-can-math-help-3",
  "level": "2",
  "url": "ch-zombies-can-math-help.html#exercises-ch-zombies-can-math-help-3",
  "type": "Exercise",
  "number": "2.3.3",
  "title": "",
  "body": "Spend more time examining and thinking about the graph of the SI model, as shown in . The prompts below ask you to make calculus-based observations about the functions and and their derivatives and .   Since , , and cannot be negative, we recognize that must be either negative or equal to zero. Explain what this observation relating to indicates about the Susceptibles graph in .    Since , , and cannot be negative, we recognize that must be either positive or equal to zero. Explain what this observation relating to indicates about the Infectious graph in .    In we will vary the value of in the SI model. Try to predict some of the ways in which changing will change the outcome of the SI model. How will the solution curves in change as increases? How will the solution curves in change as decreases? (Though the value of changes, your discussion should keep .)   "
},
{
  "id": "ch-visualization-graphing-model-results-and-data",
  "level": "1",
  "url": "ch-visualization-graphing-model-results-and-data.html",
  "type": "Chapter",
  "number": "3",
  "title": "Visualization: Graphing Model Results and Data",
  "body": " Visualization: Graphing Model Results and Data      Visualize data from the Zombie Game App alongside solution curves of the SI model from     Use comparisons between data and our initial SI model to visually estimate the value of the parameter     Learn the Python needed for solving systems of differential equations and graphing these solutions, plus data, on a shared set of axes     In we simulated a simple outbreak. This outbreak can be modeled using the system of ordinary differential equations appearing in and . Here is the system, also called an SI model, again:   We began to explore the differences between the discrete data, collected round-by-round in the Zombie Game App, and the continuous model, which uses a system of differential equations to produce smooth curves. In this chapter, we continue that exploration visually, by producing graphs of data and graphs of model results. We also see a first, very visual, way to estimate the value of in our model. (There will be other, more detailed, ways to estimate , as we continue in this text.) To do all this, we employ visualization tools. This text uses cells that run both Python and SageMath , which is a free open-source mathematics software system https:\/\/www.sagemath.org\/ , for visualization. The Python code here can be used in any setting where you use Python. The Python-related goal of this text is to make it as easy and intuitive as possible for readers to jump into using Python, so that we can better explore disease models. Some readers may prefer different Python syntax, or using a different program altogether, and these alternate approaches are welcome.    Begin by reading and seeking to understand the Python code in . In addition to thinking through what the Python code does, this textbook focuses attention on producing output that best showcases our modeling results and that is readable by a wide audience.   Creating Graphs in Python from the Human Zombie Game   If you have never used Python before, you are in the right place! If you have used Python, you may be able to move through this chapter more quickly, but be sure to spend time to make sure you know the code you need to complete modeling tasks. In this chapter, we spend a significant amount of time reading code, viewing code output, and making changes to code, to build up enough Python knowledge to be able to generate additional graphs of data and model results. The code we practice with allows us to visualize the sample data set shown as a table in .    Read carefully through the code below, focusing your attention on lines 3 8. Click the Evaluate (Sage) button underneath to view the output. Using the code and its output, answer the questions that follow.     Explain where and how in the code we enter the data from and give names in Python to the data.    Which lines of code produce the blue dots on the output graph, and what information from do these dots represent?    Which lines of code produce the orange stars on the output graph, and what information from do these dots represent?       In Line 3, we enter the time data and name it t_steps . In the human zombie game, time is listed in rounds of game play.  In Lines 4 and 5, we enter the human and zombie data, that is, Susceptible and Infectious, named S_data and I_data , respectively.  To enter a list of data, we type the name and the = sign. We then place the data inside square brackets, and we separate the data using commas. (The data, as listed, are separated by commas and also spaces. The spaces are optional.)  We are not entering the data for New Infections. Instead, we enter only the data we need for graphing the Susceptible and Infectious populations.    Lines 3 and 4 enter the data: the inputs (time, in terms of rounds of game play, shown by tick marks on the horizontal axis and entered in Line 3) and the outputs (values of the Human population, also called the Susceptible population, shown by tick marks on the vertical axis and entered in Line 4). Line 6 creates, but does not show, the plot of data from Lines 3 and 4. Line 8 shows the plot of data.    Lines 3 and 5 enter the data: the inputs (time, in terms of rounds of game play, shown by tick marks on the horizontal axis and entered in Line 3) and the outputs (values of the Zombie population, also called the Infectious population, shown by tick marks on the vertical axis and entered in Line 5). Line 7 creates, but does not show, the plot of data from Lines 3 and 5. Line 8 shows the plot of data.      Go back to the Python code and begin to play with it: make some changes. You can always start anew by refreshing the browser window. Address the following questions, and experiment freely beyond that.    What marker shapes do you like? To experiment with other shapes, see the library of marker shapes available in the online documentation for matplotlib .    Try different colors for the markers. One way to do this quickly is to go to this page about colors from the online documentation for matplotlib , and scroll down to the header CSS Colors . Replace blue and orange with colors you choose from the CSS Colors list, and view the resulting graph. (There are many other ways to choose colors in Python, and you can search online examples and documentation to learn about these.)      The first two lines of the Python code are important, but their phrasing does not make very obvious what they do. Line 1 imports a Python package that includes commands for drawing plots. Line 2 clears any past plots, meaning any past plots should be completely gone. This makes sure that any new plot contains only what we want. Line 2 may not be needed when we very first use Python, but if we create a different plot, and then come back to this code cell and re-enter it, the other plot we created could be overlaid with this one. The clear command, plt.cla() , makes sure that only our current plot appears.      Solving Differential Equations Using Graphs  Our goal in this section is to learn to use Python to create graphs similar to what we saw in . Such a graph starts with a system of differential equations and draws one possible graphical solution to that system. The graphical solution drawn depends on the equations themselves, the value(s) of any parameter(s), and the starting values for each population in the system, that is, the values when of , , and any other populations being modeled. For now, we specify that this type of solution is a graphical solution , but as the book continues, we will often refer to a graphical solution as simply a solution .  One thing we will almost never do is solve an entire system of differential equations in the way you may have seen in a calculus course, where we wrote the solution as a formula. To remind you how this often looks in calculus class that is, how it looks to solve by writing the solution of a differential equation as a formula we show an example in . Then begins the discussion about why we use a different approach in this text.    As we mentioned back in , a differential equation is just an equation in which at least one term is a derivative. This means that an equation like is a differential equation.  Solving a differential equation often means finding a way to write an equivalent relationship, without including a derivative. Using this interpretation of solving : solve     The general solution is , where can be any constant. In this case, we solved by computing the antiderivatives of both sides of the differential equation.      Now consider the SI model:   What are the challenges to solving this system of equations, where solving means determining formulas that do not involve derivatives for and ?    There are many ways to answer this. One consideration is that each of the differential equations involves both and . This means the differential equations do not stand alone: each depends on the other. This interrelationship means we cannot just compute two separate antiderivative formulas.  Another consideration is that the right-hand side of the differential equation in involves only , that is, only the independent variable. The dependent variable does not appear except in the derivative term . However, in the SI model system of equations, the dependent variables and appear in the derivatives and elsewhere in the equations . The antiderivative methods learned in a typical introductory Calculus course do not apply in this situation.  You may have thought of yet other challenges as well.    As discussed in , solving a system of differential equations is challenging. As we include more than two compartments, finding solution formulas for , , and additional populations becomes yet more challenging, and is often impossible. Even when we can determine solution formulas, they are typically quite complicated to work with.  Instead, our approach is to compute numerical solutions , which are solutions in the form of numbers. The main idea is that Python starts at the initial population values, then uses the system of differential equations to step through the full range of time, computing population values step-by-step at later times by using information about how the population values change throughout. The system of differential equations is made up of derivatives, which are rates of change, so they exactly describe how the populations change at all times . The population values computed in the numerical solution can be printed, or more often, graphed, to see the results in the form of a graphical solution.  We noted earlier that graphical solutions may be called simply solutions . Similarly, numerical solutions are sometimes called simply solutions . And we have seen that formula-based solutions can be called simply solutions . It is important to use context to determine which kind of solution is being discussed, in this text or in other reading.  Here is an outline of the numerical solution process.    Tell Python the formulas for the system of differential equations.    Tell Python which numbers to use for any parameters in the model. We select the numbers for a particular numerical solution, and we can use different numbers to create a different numerical solution.    Tell Python the initial conditions for each population, that is, the size of each population at the starting time of the model (which is usually ).    Tell Python when to start and stop the model, that is, the starting and ending values for time . Also tell Python what time steps to use as Python steps through from the starting to the ending time.    Ask Python to use all this information to numerically solve the model and plot graphical solution curves.    In , compare this outline with Python code.    Read the Python code in the block below, and click the Evaluate (Sage) button to view the resulting graph. Think carefully about steps 1-5 in the outline above. Which lines of code address which steps of the outline? (Notice that you may need to scroll down within the code block. Alternatively, click the rectangular icon in the top right of the code block. This opens a full-screen version of the code. To return to the regular screen, click again the rectangle in the top right.)        The formulas for the system of differential equations appear most directly in line 8, in order. The first formula is -beta * S * I , and the second formula is beta * S * I . Collectively, these are named dy\/dt . More generally, the lines 6 9 define the system of differential equations.    In line 11, we give the value of 0.02. This number can be changed, and the resulting numerical solution then changes accordingly.    In line 12, the initial conditions are set to and . These initial conditions are collectively named y0 . The initial conditions appear in square brackets and are separated by a comma. This syntax should look familiar from line 8, when we entered the right-hand sides of the differential equations all in one command, using the same syntax.    The time range for this numerical solution appears in line 13, using the arange command from the numpy package downloaded in line 2. The code says t = np.arange(0.0, 8.0, 0.1) . This means that time starts at and continues till the step just before . Therefore is the last time step for which values of and are computed. In addition, the 0.1 tells Python to use a step size of 0.1 in the step through process for computing and values.    We ask in line 14 for Python to compute a solution, called sol . To compute this solution, Python uses the command odeint and the inputs hz (the differential equations in the model), y0 (the initial conditions for this solution), and t_range (the range of time across which to compute the solution). These commands produce a collection of numbers that describe the values of and at all the times specified in t_range . These numbers are arranged in two columns: one column for all the values, and one column for all the values.  The commands in lines 16-18 work together to create the plot we see after clicking Evaluate (Sage) . Line 16 plots the blue curve, using the time inputs t_range and the values of throughout those times. The values of are described as sol[:, 0] . The : in sol[:, 0] indicates that we want all rows of the solution, which means the solution at all times . The 0 in sol[:, 0] means that we want the values for each of those times. Python typically starts counting with 0 rather than 1, so the column of values is numbered as column 0 rather than column 1 .  Line 17 plots the orange curve, using the time inputs t_range and the values of throughout those times, which are described as sol[:, 1] . This command is very similar to sol[:, 0] , but whereas the values were in column of sol , the values are in column 1 of sol .       Here is a summary of the Python code above, with some of the commands explained in more detail.  In the lines  import matplotlib.pyplot as plt  import numpy as np  from scipy.integrate import odeint  we import online packages that make it possible for Python to do some of the things we are about to do. Saying we are importing as gives us a name, such as plt or np , by which to call each package and use the tools within that package.  The lines  def hz(y, t):  S, I = y  dydt = [-beta * S * I, beta * S * I]  return dydt  define the system of differential equations, using the command def . The system is named hz , for human-zombie , and the (y, t) means that the model depends on variables and . The line S, I = y defines as comprising both and , in that order. This means that collectively represents all our dependent variables. Taking the derivative of , then, means taking each of the derivatives and . The formulas for these derivatives, which are on the right-hand sides of the SI model, appear in order in the line dydt = [-beta * S * I, beta * S * I] . Finally, the line return dydt ends the definition and says that whenever we later use the definition, we will be using the derivatives defined in dydt .  A quick way to think about these lines is that they define our system of differential equations and give them the name hz .  The lines  beta = 0.02  y0 = [49, 1]  t_range = np.arange(0.0, 8.0, 0.1)  provide values for , the initial conditions and , and . Any of these values can be changed, and the code can be run again, to produce a different numerical simulation of the same system of differential equations. Notice that the initial conditions are listed in the same order as how we defined the differential equations: is first, and is second.  The solution of the system of differential equations  sol = odeint(hz, y0, t_range)  is a numerical solution, and it includes multiple parts. The solution is named sol . The Python command odeint computes the solution. For odeint to run, it needs three things: (1) a system of differential equations hz , (2) initial conditions y0 for the differential equations, and (3) a time range t_range across which to create the solution. Though odeint computes the numerical solution, it does not show us the graphical solution: the plots we create later show us these results. Instead, the numerical solution created by odeint consists of lists of numbers for and for , at the times specified in t_range . (If you would like to see the numerical values computed by sol , include the line print(sol) in the block of Python code above, sometime after the line sol = odeint(hz, y0, t_range) . When you then evaluate the code, the list of values will appear.)  The lines  plt.plot(t_range, sol[:, 0], color='blue')  plt.plot(t_range, sol[:, 1], color='orange')  create, but do not show, the plots of graphical solutions to the system of differential equations. For each plot, we provide the input values t_range and the output values from the numerical solution sol . As described above, sol is a set of numbers which are the values of the populations and at all the times in t_range . The numbers in sol are structured into two lists, list 0 and list 1. (Python often counts things, such as lists, starting with 0 rather than starting with 1.) The syntax sol[:,0] describes all the data. The colon : means all the elements, and the 0 means list 0, which is the list containing values of . The syntax sol[:,1] describes all the data, with : again representing all and 1 representing list 1, which contains values.  The lines above include colors for each graph, 'blue' for the graph and 'orange' for the graph. Stating colors is optional.  Finally,  plt.show()  shows the two plots, on a shared set of axes.  To build further understanding of how the Python code works, it helps to make several small changes to the code. Simultaneously, we continue to build intuition for how the output graph is affected by our selected parameter values, initial conditions, time range, and more. Try this in .    Start with the same Python code as in and try various small changes to the code. Identify where and how in the code to make the changes suggested below, and discuss the effects of each change on the resulting graph. Here and elsewhere, whenever we work with Python, feel free to try your own adaptations to the code.     Change the value of . Identify where in the Python code to make this change, and comment on how the output graph changes when increases or decreases. (While you can change to any value you like, recall that a realistic outbreak model requires .)    Change the initial conditions so that , , or both. Comment on how these changes affect the resulting graph. (To stay in the realm of biologically feasible outbreaks, keep and .)    Change the time range. Continue to begin at , but change the end time to something different than . Discuss reasons why a modeler may want to change the time range, and identify ways in which changing the time range causes the output graph to change.    Change the step size for time so that Python steps forward in increments of 1.0 instead of 0.1. Identify where in the Python code to make this change, and observe any ways in which the output graph looks different after the change.      These are all the basics for numerically solving a system of differential equations. In we create a graph in which data points and solution curves appear all on the same set of axes. Combining these plots provides a visual way to change the value of to improve the model's fit to data points. Then, also in , we discuss helpful ways to visualize information on graphs, so readers can best understand the results that emerge from models.    Estimating and Building Visualization Skills  To start, use information from the coding blocks above to create a single graph containing discrete data points for Humans and Zombies as well as continuous solution curves to the model for Susceptible and Infectious populations.    Combine lines of Python code from the coding blocks shown in and so that both the individual data markers from and the smooth solution curves from appear on the same graph.  Notice before you begin: some of the same commands appear in each of the two coding blocks you are combining. You do not need to include those lines twice.   Once you have combined the data points and solution curves into a single graph, try different values of . Working visually, comparing data points with solution curves, can you identify a value of that you believe produces the best correspondence between data points and solution curves? Discuss your reasoning, including a description of the features of a good correspondence between data points and solution curves.    If your approach creates two separate sets of axes, try again. Can you find a way to produce just one set of axes that contains both the data points from the Zombie Game App, and also the solution curves from the system of differential equations?  Regarding , we are not seeking a mathematically precise best fit . Instead, we are (1) visually identifying what a good fit may look like, and (2) describing the features of a good fit, from a visual perspective . The features may be somewhat subjective: there is not likely to be a perfect fit, and different readers may have different priorities regarding how a good fit should look.    One possible answer for the code is the following. import matplotlib.pyplot as plt import numpy as np from scipy.integrate import odeint plt.cla() t_steps = [0, 1, 2, 3, 4, 5, 6] S_data = [49, 47, 43, 36, 20, 4, 0] I_data = [1, 3, 7, 14, 30, 46, 50] def hz(y, t): S, I = y dydt = [-beta * S * I, beta * S * I] return dydt beta = 0.02 y0 = [49, 1] t_range = np.arange(0.0, 8.0, 0.1) sol = odeint(hz, y0, t_range) plt.plot(t_steps, S_data,'o', color='blue') plt.plot(t_steps, I_data, '*', color='orange') plt.plot(t_range, sol[:, 0], color='blue') plt.plot(t_range, sol[:, 1], color='orange') plt.show()   There are many possible answers regarding the value of . The key is to discuss what a good fit may look like. When the data and model do not fit perfectly, which is usually what will happen, then which aspects of the data do we most hope are represented in the model's solution curves?    At this point, you have worked with enough Python code to be able to graph your own data points and your own solutions to systems of differential equations that represent disease spread. Before we complete this chapter, however, we spend additional time with Python and visualization, with the goal of designing plots that best convey the information learned from models.  Each activity below invites you to learn by doing. Additionally: think through what YOU would like to see in plots. What features make it easier for you to interpret a graph? What features tell you best how to connect an image with a mathematical equation?    Evaluate the code below. Use the Python code, as well as the resulting graphs, to answer the questions appearing below the code block.     This code block includes an additional optional command in each of the lines starting with plt.plot . This command begins with label in each line. Where do you find these labels, and , on the plot produced below the code?   Line 19 says plt.legend() . What does this mean? You can check by turning this line off, then on again. To turn it off, type # at the start of Line 19, and run the code again. To turn it back on, remove the # . Starting a line with # turns the line into a comment rather than code. This means that Python does not execute the rest of the line after the # .   Line 20 states plt.xlabel('time') . Do you see where this label appears in the resulting plot? If so: can you figure out how to label the vertical axis as populations , to represent the combination of populations and ?   Uncomment Line 21 by removing the # symbol and evaluate the code again. How does this change the resulting plot? What advantages or disadvantages do you see in this change?        The labels and appear in the box on the graph, next to the line color of their associated plot. That is, label appears next to a blue line, and is plotted in blue. Label appears next to an orange line, and is plotted in orange.    The legend is the box mentioned in the previous bullet point. Legends can be very helpful when multiple plots appear on a shared set of axes.    The label appears below the horizontal axis. To label the vertical axis, include this new line in the code: plt.ylabel('populations') .    A grid appears throughout the plot. This may be an advantage for better pinpointing what the values of and are at various times . It may be a disadvantage if it makes the plot seem cluttered. There may be other advantages and disadvantages.       Comments are mentioned in . In Python, comments are helpful for turning code lines on and off. One reason to do this is to troubleshoot: if code seems to not be working, turning some lines temporarily into comments can help narrow down where the problem lies. Another reason to include comments is to write notes about what is happening in the code. This is helpful if you will use this code later, or share it with other people, to make it easier for you and others to use the code in the future.  The next activity shows more detailed use of comments, along with more ways to distinguish different solution curves when we plot multiple results on a shared set of axes.    Notice that the code block below includes many comments. Read through the comments: do they make sense? Would you add others?  Then evaluate the code and respond to the prompts below.     What do the linestyle commands do? Include them in Lines 26 and 27, when plotting S_data and I_data , to connect the markers from the Zombie Game App data points with the same style lines as those that solve the SI model.    What do the markersize commands do? Try different numerical values to find what you like.    What do the linewidth commands do? Try different numerical values to find what you like.    Label the data points from the Zombie Game App so that they appear in the legend.    Change the label on the horizontal axis to say time (rounds) to make the units of time more clear.          Start with the basic SI model in Python. Code for this appears in and . Change the code in the ways described below. For each change, list the original Python code, specify what code updates you make, provide an image of the resulting graph, and describe in words how the resulting graph looks different as a result of the change you made. Keep the change in part (a) when you update part (b), then keep all these changes when you update part (c).    Increase to 200.    Adjust so that the Susceptible population is approximately 100 on day 10. Notice that this update requires you to change not just , but also the length of time the model runs. State the value of you determine.    Increase to 10.     The following figures, in order, are possible results.   A possible outcome from setting .   Sample solution graph for setting to 200.     A possible outcome when adjusting so that . The graph includes a grid, and it extends time to .   Sample solution graph for setting so that . The graph includes a grid, and it extends time to .     A possible outcome when setting .   Sample solution graph for setting to 10.     Open the Zombie Game App and run it with its default settings, creating a data set that is (hopefully) different than that in .   Write your data set as a table, in the style of .    Use Python to create multiple plots on a single set of axes, with time on the horizontal axis. First plot your data points for humans and zombies. Then plot the graphical solutions to the differential equations in the SI model. You will need to choose your value of for the model. In doing so, adjust so that the SI model solution curves fit fairly well with the generated data points.    Write about your observations of ways in which the curves fit the data well, and ways in which the fit is not as good.    Look up information online about making data visualization more accessible to people who have some version of colorblindness. Read multiple sources on this topic, and use them to respond to the following questions. Cite your sources, including links to any web pages, the title of each web page used, the name of the publisher of each web page, and the date you most recently accessed the web page.   What sorts of color palettes can work relatively well to make a graph more accessible to a colorblind individual?    What are some ways that data markers can be used to improve graph accessibility?    How can different line styles be used to improve graph accessibility?    What are yet additional ways you can use Python features to create graphs that are accessible to as many people as possible?     "
},
{
  "id": "intro-visualization-graphing-model-results-and-data-1",
  "level": "2",
  "url": "ch-visualization-graphing-model-results-and-data.html#intro-visualization-graphing-model-results-and-data-1",
  "type": "Goals",
  "number": "",
  "title": "",
  "body": "   Visualize data from the Zombie Game App alongside solution curves of the SI model from     Use comparisons between data and our initial SI model to visually estimate the value of the parameter     Learn the Python needed for solving systems of differential equations and graphing these solutions, plus data, on a shared set of axes    "
},
{
  "id": "expl-creating-graphs-in-python-from-the-human-zombie-game",
  "level": "2",
  "url": "ch-visualization-graphing-model-results-and-data.html#expl-creating-graphs-in-python-from-the-human-zombie-game",
  "type": "Exploration",
  "number": "3.1",
  "title": "Creating Graphs in Python from the Human–Zombie Game.",
  "body": " Creating Graphs in Python from the Human Zombie Game   If you have never used Python before, you are in the right place! If you have used Python, you may be able to move through this chapter more quickly, but be sure to spend time to make sure you know the code you need to complete modeling tasks. In this chapter, we spend a significant amount of time reading code, viewing code output, and making changes to code, to build up enough Python knowledge to be able to generate additional graphs of data and model results. The code we practice with allows us to visualize the sample data set shown as a table in .    Read carefully through the code below, focusing your attention on lines 3 8. Click the Evaluate (Sage) button underneath to view the output. Using the code and its output, answer the questions that follow.     Explain where and how in the code we enter the data from and give names in Python to the data.    Which lines of code produce the blue dots on the output graph, and what information from do these dots represent?    Which lines of code produce the orange stars on the output graph, and what information from do these dots represent?       In Line 3, we enter the time data and name it t_steps . In the human zombie game, time is listed in rounds of game play.  In Lines 4 and 5, we enter the human and zombie data, that is, Susceptible and Infectious, named S_data and I_data , respectively.  To enter a list of data, we type the name and the = sign. We then place the data inside square brackets, and we separate the data using commas. (The data, as listed, are separated by commas and also spaces. The spaces are optional.)  We are not entering the data for New Infections. Instead, we enter only the data we need for graphing the Susceptible and Infectious populations.    Lines 3 and 4 enter the data: the inputs (time, in terms of rounds of game play, shown by tick marks on the horizontal axis and entered in Line 3) and the outputs (values of the Human population, also called the Susceptible population, shown by tick marks on the vertical axis and entered in Line 4). Line 6 creates, but does not show, the plot of data from Lines 3 and 4. Line 8 shows the plot of data.    Lines 3 and 5 enter the data: the inputs (time, in terms of rounds of game play, shown by tick marks on the horizontal axis and entered in Line 3) and the outputs (values of the Zombie population, also called the Infectious population, shown by tick marks on the vertical axis and entered in Line 5). Line 7 creates, but does not show, the plot of data from Lines 3 and 5. Line 8 shows the plot of data.      Go back to the Python code and begin to play with it: make some changes. You can always start anew by refreshing the browser window. Address the following questions, and experiment freely beyond that.    What marker shapes do you like? To experiment with other shapes, see the library of marker shapes available in the online documentation for matplotlib .    Try different colors for the markers. One way to do this quickly is to go to this page about colors from the online documentation for matplotlib , and scroll down to the header CSS Colors . Replace blue and orange with colors you choose from the CSS Colors list, and view the resulting graph. (There are many other ways to choose colors in Python, and you can search online examples and documentation to learn about these.)      The first two lines of the Python code are important, but their phrasing does not make very obvious what they do. Line 1 imports a Python package that includes commands for drawing plots. Line 2 clears any past plots, meaning any past plots should be completely gone. This makes sure that any new plot contains only what we want. Line 2 may not be needed when we very first use Python, but if we create a different plot, and then come back to this code cell and re-enter it, the other plot we created could be overlaid with this one. The clear command, plt.cla() , makes sure that only our current plot appears.   "
},
{
  "id": "sec-solving-differential-equations-using-graphs-2",
  "level": "2",
  "url": "ch-visualization-graphing-model-results-and-data.html#sec-solving-differential-equations-using-graphs-2",
  "type": "Paragraph (with a defined term)",
  "number": "",
  "title": "",
  "body": "graphical solution "
},
{
  "id": "exer-solve-de",
  "level": "2",
  "url": "ch-visualization-graphing-model-results-and-data.html#exer-solve-de",
  "type": "Activity",
  "number": "3.2",
  "title": "",
  "body": "  As we mentioned back in , a differential equation is just an equation in which at least one term is a derivative. This means that an equation like is a differential equation.  Solving a differential equation often means finding a way to write an equivalent relationship, without including a derivative. Using this interpretation of solving : solve     The general solution is , where can be any constant. In this case, we solved by computing the antiderivatives of both sides of the differential equation.   "
},
{
  "id": "exer-cannot-easily-solve-de-system",
  "level": "2",
  "url": "ch-visualization-graphing-model-results-and-data.html#exer-cannot-easily-solve-de-system",
  "type": "Activity",
  "number": "3.3",
  "title": "",
  "body": "  Now consider the SI model:   What are the challenges to solving this system of equations, where solving means determining formulas that do not involve derivatives for and ?    There are many ways to answer this. One consideration is that each of the differential equations involves both and . This means the differential equations do not stand alone: each depends on the other. This interrelationship means we cannot just compute two separate antiderivative formulas.  Another consideration is that the right-hand side of the differential equation in involves only , that is, only the independent variable. The dependent variable does not appear except in the derivative term . However, in the SI model system of equations, the dependent variables and appear in the derivatives and elsewhere in the equations . The antiderivative methods learned in a typical introductory Calculus course do not apply in this situation.  You may have thought of yet other challenges as well.   "
},
{
  "id": "sec-solving-differential-equations-using-graphs-7",
  "level": "2",
  "url": "ch-visualization-graphing-model-results-and-data.html#sec-solving-differential-equations-using-graphs-7",
  "type": "Paragraph (with a defined term)",
  "number": "",
  "title": "",
  "body": "numerical solutions "
},
{
  "id": "sec-solving-differential-equations-using-graphs-10-3-1",
  "level": "2",
  "url": "ch-visualization-graphing-model-results-and-data.html#sec-solving-differential-equations-using-graphs-10-3-1",
  "type": "Paragraph (with a defined term)",
  "number": "",
  "title": "",
  "body": "initial conditions "
},
{
  "id": "exer-first-odeint-code",
  "level": "2",
  "url": "ch-visualization-graphing-model-results-and-data.html#exer-first-odeint-code",
  "type": "Activity",
  "number": "3.4",
  "title": "",
  "body": "  Read the Python code in the block below, and click the Evaluate (Sage) button to view the resulting graph. Think carefully about steps 1-5 in the outline above. Which lines of code address which steps of the outline? (Notice that you may need to scroll down within the code block. Alternatively, click the rectangular icon in the top right of the code block. This opens a full-screen version of the code. To return to the regular screen, click again the rectangle in the top right.)        The formulas for the system of differential equations appear most directly in line 8, in order. The first formula is -beta * S * I , and the second formula is beta * S * I . Collectively, these are named dy\/dt . More generally, the lines 6 9 define the system of differential equations.    In line 11, we give the value of 0.02. This number can be changed, and the resulting numerical solution then changes accordingly.    In line 12, the initial conditions are set to and . These initial conditions are collectively named y0 . The initial conditions appear in square brackets and are separated by a comma. This syntax should look familiar from line 8, when we entered the right-hand sides of the differential equations all in one command, using the same syntax.    The time range for this numerical solution appears in line 13, using the arange command from the numpy package downloaded in line 2. The code says t = np.arange(0.0, 8.0, 0.1) . This means that time starts at and continues till the step just before . Therefore is the last time step for which values of and are computed. In addition, the 0.1 tells Python to use a step size of 0.1 in the step through process for computing and values.    We ask in line 14 for Python to compute a solution, called sol . To compute this solution, Python uses the command odeint and the inputs hz (the differential equations in the model), y0 (the initial conditions for this solution), and t_range (the range of time across which to compute the solution). These commands produce a collection of numbers that describe the values of and at all the times specified in t_range . These numbers are arranged in two columns: one column for all the values, and one column for all the values.  The commands in lines 16-18 work together to create the plot we see after clicking Evaluate (Sage) . Line 16 plots the blue curve, using the time inputs t_range and the values of throughout those times. The values of are described as sol[:, 0] . The : in sol[:, 0] indicates that we want all rows of the solution, which means the solution at all times . The 0 in sol[:, 0] means that we want the values for each of those times. Python typically starts counting with 0 rather than 1, so the column of values is numbered as column 0 rather than column 1 .  Line 17 plots the orange curve, using the time inputs t_range and the values of throughout those times, which are described as sol[:, 1] . This command is very similar to sol[:, 0] , but whereas the values were in column of sol , the values are in column 1 of sol .      "
},
{
  "id": "exer-first-odeint-code-play-around",
  "level": "2",
  "url": "ch-visualization-graphing-model-results-and-data.html#exer-first-odeint-code-play-around",
  "type": "Activity",
  "number": "3.5",
  "title": "",
  "body": "  Start with the same Python code as in and try various small changes to the code. Identify where and how in the code to make the changes suggested below, and discuss the effects of each change on the resulting graph. Here and elsewhere, whenever we work with Python, feel free to try your own adaptations to the code.     Change the value of . Identify where in the Python code to make this change, and comment on how the output graph changes when increases or decreases. (While you can change to any value you like, recall that a realistic outbreak model requires .)    Change the initial conditions so that , , or both. Comment on how these changes affect the resulting graph. (To stay in the realm of biologically feasible outbreaks, keep and .)    Change the time range. Continue to begin at , but change the end time to something different than . Discuss reasons why a modeler may want to change the time range, and identify ways in which changing the time range causes the output graph to change.    Change the step size for time so that Python steps forward in increments of 1.0 instead of 0.1. Identify where in the Python code to make this change, and observe any ways in which the output graph looks different after the change.     "
},
{
  "id": "exer-combine-data-points-and-curves",
  "level": "2",
  "url": "ch-visualization-graphing-model-results-and-data.html#exer-combine-data-points-and-curves",
  "type": "Activity",
  "number": "3.6",
  "title": "",
  "body": "  Combine lines of Python code from the coding blocks shown in and so that both the individual data markers from and the smooth solution curves from appear on the same graph.  Notice before you begin: some of the same commands appear in each of the two coding blocks you are combining. You do not need to include those lines twice.   Once you have combined the data points and solution curves into a single graph, try different values of . Working visually, comparing data points with solution curves, can you identify a value of that you believe produces the best correspondence between data points and solution curves? Discuss your reasoning, including a description of the features of a good correspondence between data points and solution curves.    If your approach creates two separate sets of axes, try again. Can you find a way to produce just one set of axes that contains both the data points from the Zombie Game App, and also the solution curves from the system of differential equations?  Regarding , we are not seeking a mathematically precise best fit . Instead, we are (1) visually identifying what a good fit may look like, and (2) describing the features of a good fit, from a visual perspective . The features may be somewhat subjective: there is not likely to be a perfect fit, and different readers may have different priorities regarding how a good fit should look.    One possible answer for the code is the following. import matplotlib.pyplot as plt import numpy as np from scipy.integrate import odeint plt.cla() t_steps = [0, 1, 2, 3, 4, 5, 6] S_data = [49, 47, 43, 36, 20, 4, 0] I_data = [1, 3, 7, 14, 30, 46, 50] def hz(y, t): S, I = y dydt = [-beta * S * I, beta * S * I] return dydt beta = 0.02 y0 = [49, 1] t_range = np.arange(0.0, 8.0, 0.1) sol = odeint(hz, y0, t_range) plt.plot(t_steps, S_data,'o', color='blue') plt.plot(t_steps, I_data, '*', color='orange') plt.plot(t_range, sol[:, 0], color='blue') plt.plot(t_range, sol[:, 1], color='orange') plt.show()   There are many possible answers regarding the value of . The key is to discuss what a good fit may look like. When the data and model do not fit perfectly, which is usually what will happen, then which aspects of the data do we most hope are represented in the model's solution curves?   "
},
{
  "id": "exer-grid-axis-labels-comments",
  "level": "2",
  "url": "ch-visualization-graphing-model-results-and-data.html#exer-grid-axis-labels-comments",
  "type": "Activity",
  "number": "3.7",
  "title": "",
  "body": "  Evaluate the code below. Use the Python code, as well as the resulting graphs, to answer the questions appearing below the code block.     This code block includes an additional optional command in each of the lines starting with plt.plot . This command begins with label in each line. Where do you find these labels, and , on the plot produced below the code?   Line 19 says plt.legend() . What does this mean? You can check by turning this line off, then on again. To turn it off, type # at the start of Line 19, and run the code again. To turn it back on, remove the # . Starting a line with # turns the line into a comment rather than code. This means that Python does not execute the rest of the line after the # .   Line 20 states plt.xlabel('time') . Do you see where this label appears in the resulting plot? If so: can you figure out how to label the vertical axis as populations , to represent the combination of populations and ?   Uncomment Line 21 by removing the # symbol and evaluate the code again. How does this change the resulting plot? What advantages or disadvantages do you see in this change?        The labels and appear in the box on the graph, next to the line color of their associated plot. That is, label appears next to a blue line, and is plotted in blue. Label appears next to an orange line, and is plotted in orange.    The legend is the box mentioned in the previous bullet point. Legends can be very helpful when multiple plots appear on a shared set of axes.    The label appears below the horizontal axis. To label the vertical axis, include this new line in the code: plt.ylabel('populations') .    A grid appears throughout the plot. This may be an advantage for better pinpointing what the values of and are at various times . It may be a disadvantage if it makes the plot seem cluttered. There may be other advantages and disadvantages.     "
},
{
  "id": "exer-dash-dot-comments",
  "level": "2",
  "url": "ch-visualization-graphing-model-results-and-data.html#exer-dash-dot-comments",
  "type": "Activity",
  "number": "3.8",
  "title": "",
  "body": "  Notice that the code block below includes many comments. Read through the comments: do they make sense? Would you add others?  Then evaluate the code and respond to the prompts below.     What do the linestyle commands do? Include them in Lines 26 and 27, when plotting S_data and I_data , to connect the markers from the Zombie Game App data points with the same style lines as those that solve the SI model.    What do the markersize commands do? Try different numerical values to find what you like.    What do the linewidth commands do? Try different numerical values to find what you like.    Label the data points from the Zombie Game App so that they appear in the legend.    Change the label on the horizontal axis to say time (rounds) to make the units of time more clear.      "
},
{
  "id": "exercises-visualization-graphing-model-results-and-data-1",
  "level": "2",
  "url": "ch-visualization-graphing-model-results-and-data.html#exercises-visualization-graphing-model-results-and-data-1",
  "type": "Exercise",
  "number": "3.3.1",
  "title": "",
  "body": " Start with the basic SI model in Python. Code for this appears in and . Change the code in the ways described below. For each change, list the original Python code, specify what code updates you make, provide an image of the resulting graph, and describe in words how the resulting graph looks different as a result of the change you made. Keep the change in part (a) when you update part (b), then keep all these changes when you update part (c).    Increase to 200.    Adjust so that the Susceptible population is approximately 100 on day 10. Notice that this update requires you to change not just , but also the length of time the model runs. State the value of you determine.    Increase to 10.     The following figures, in order, are possible results.   A possible outcome from setting .   Sample solution graph for setting to 200.     A possible outcome when adjusting so that . The graph includes a grid, and it extends time to .   Sample solution graph for setting so that . The graph includes a grid, and it extends time to .     A possible outcome when setting .   Sample solution graph for setting to 10.    "
},
{
  "id": "exercises-visualization-graphing-model-results-and-data-2",
  "level": "2",
  "url": "ch-visualization-graphing-model-results-and-data.html#exercises-visualization-graphing-model-results-and-data-2",
  "type": "Exercise",
  "number": "3.3.2",
  "title": "",
  "body": "Open the Zombie Game App and run it with its default settings, creating a data set that is (hopefully) different than that in .   Write your data set as a table, in the style of .    Use Python to create multiple plots on a single set of axes, with time on the horizontal axis. First plot your data points for humans and zombies. Then plot the graphical solutions to the differential equations in the SI model. You will need to choose your value of for the model. In doing so, adjust so that the SI model solution curves fit fairly well with the generated data points.    Write about your observations of ways in which the curves fit the data well, and ways in which the fit is not as good.   "
},
{
  "id": "exercises-visualization-graphing-model-results-and-data-3",
  "level": "2",
  "url": "ch-visualization-graphing-model-results-and-data.html#exercises-visualization-graphing-model-results-and-data-3",
  "type": "Exercise",
  "number": "3.3.3",
  "title": "",
  "body": "Look up information online about making data visualization more accessible to people who have some version of colorblindness. Read multiple sources on this topic, and use them to respond to the following questions. Cite your sources, including links to any web pages, the title of each web page used, the name of the publisher of each web page, and the date you most recently accessed the web page.   What sorts of color palettes can work relatively well to make a graph more accessible to a colorblind individual?    What are some ways that data markers can be used to improve graph accessibility?    How can different line styles be used to improve graph accessibility?    What are yet additional ways you can use Python features to create graphs that are accessible to as many people as possible?   "
},
{
  "id": "ch-compartmental-diagrams",
  "level": "1",
  "url": "ch-compartmental-diagrams.html",
  "type": "Chapter",
  "number": "4",
  "title": "Compartmental Diagrams",
  "body": " Compartmental Diagrams      Begin to use compartmental diagrams    Learn the rules and assumptions for drawing compartmental diagrams    Connect compartmental diagrams with their corresponding systems of differential equations    Build understanding of units and rate parameters in models     In we simulated a simple outbreak. This outbreak can be modeled using the system of ordinary differential equations appearing in and . Here is the system again:   This style of model is called a compartmental model because the individuals in our model are designated by categories called compartments ; in this case, the compartments are Susceptibles and Infectious . In we made calculus-based observations of the differential equations in this model. We can draw the dynamics of the model in a compartmental diagram , as shown in .   The compartmental diagram for one possible SI model, where S stands for Susceptible and I stands for Infectious   (Write this)     In this text, we regularly represent the dynamics of an outbreak using both compartmental model drawings and systems of differential equations. When we are careful in how we draw our compartmental diagrams, we can use these diagrams interchangeably with their corresponding systems of differential equations. In this chapter, we learn the vocabulary of compartmental models, as well as ways to draw compartmental diagrams so they clearly and completely represent the information contained in their corresponding systems of differential equations.  We begin in by trying a different version of the human zombie game. We then ask you to use the intuition you are building to think through how the compartmental diagram should look for this human zombie game variation. After that, we discuss more details about compartmental diagrams. You are strongly encouraged to try to build your own compartmental diagram before moving on to the text's discussion of the details.    Varying the Human Zombie Game   In the original Zombie Game App, once an individual becomes a zombie, they are always a zombie. This means that no one leaves the Infectious compartment.  Suppose, instead, that zombies do not last forever. Instead, after some number of days, the zombies die (again), or in other words, the zombies become inactive. The number of days they remain Infectious before becoming inactive can be stated in the app.     Before trying this scenario in the app , think through how zombie death, and different zombie lifespans, would change the outcomes of the simulation. In particular, think carefully about these questions:    What do you expect will happen if Zombies die, that is, they become inactive and unable to spread infection? Whether you feel very certain, or somewhat uncertain, articulate some outcomes that you think will occur with this game variation.    How might your expected outcomes differ from those in the original model?    Outcomes might be measured by the table of data, by the graphs, by the timing of how infection spreads, by the numbers of survivors, or in other ways. For each of your expectations about how the outcomes may change, what support can you show for why this expectation makes sense?    This exercise is not about right or wrong ideas, but instead is about building hypotheses, comparing the hypotheses with data, and developing deeper understanding of what the model shows.    After you have thought through how the outcomes will change in a variation, use the app to generate data.  To set up this variation in the Zombie Game app, check the box for Zombie Mortality , shown by the lower red arrow in . A box then appears for Zombie Lifespan (days) , shown by the upper red arrow in . Try setting Zombie Lifespan to 1, then 2, then 3. For each length of time, run several simulations, save your data sets, and compare the outcomes.   Checking the box for Zombie Mortality and setting a value for Zombie Lifespan (days)   Screen image from the Zombie Game App, showing the checked box for Zombie Mortality and the Zombie Lifespan (days) that appears       Compare the results with the ideas you generated in part (a). How similar or different are the actual results, compared with what you thought?     What else do you observe? Consider how many humans or zombies survive till the end, and consider how much these numbers vary from simulation to simulation. Consider how many days the outbreak lasts. Make note of any additional observations you have, and reach out to other people trying this experiment to see how your results compare with theirs.     Before moving on to the next section , use your intuition to draw a possible compartmental diagram for the outbreak you just simulated in this Exploration. The only compartmental diagram we have seen so far is in : use this diagram as an example, and make changes to match your simulation.      Compartmental Diagrams: Vocabulary and Comments  In this section, we give a general description of compartmental diagrams. As you read, check in with the intuition you have been building: do these ideas fit with your understanding so far? Soon, in , we will connect these general ideas about compartmental diagrams with the specific model you constructed in .  A compartmental diagram is made up of boxes and arrows, each labeled to show what it represents. The boxes are called compartments and represent mutually distinct groups of individuals. The arrows indicate the possible ways that individuals can relocate from one compartment to another.  When we say mutually distinct , we mean that at any moment in time, an individual is in exactly one compartment: no more, no fewer. This means our entire population is fully accounted for at all times because everyone appears in some compartment. We also notice that we cannot double-count individuals, as they cannot be in more than one compartment at a time.  Because our models use continuous time and differential equations, we will sometimes compute non-integer values for the number of individuals in some compartments. We should think through this carefully. If, for instance, we find that at some time we have 13.6 Susceptibles and 36.4 Infectious, we are not saying that we have 13 Susceptibles, plus 36 Infectious, plus one individual who is split up to be 60% Susceptible and 40% Infectious. Instead, the differential equation model is telling us on average what happens, across many possible simulations or many possible outcomes. In computing an on average outcome, non-integer values are possible. If we wish to refer to actual numbers of people, we can round to the nearest integer, or use language that reflects the on average meaning of our model.  When we use a compartmental diagram, we should carefully define and describe all our terms. The definitions and descriptions may change in different models, so we should not assume that , , , or other variables always have the same meaning. Time, , may be measured in days, weeks, or some other unit, and we should indicate the unit. Here are possible descriptions for and based on the human zombie game in : stands for the Susceptible population, meaning people who do not have the zombie disease yet but could become ill with this disease, and stands for the Infectious population, meaning individuals who are currently contagious and currently showing symptoms of the zombie disease. In other outbreaks, and therefore in other models, these descriptions may change. As just one example, in a different model may refer to individuals who are Infectious in the sense that they are contagious, but they may or may not be showing symptoms. Modelers should fully state the specific definitions of , , or other populations, in their models.  The term indicates flow from to . This term indicates that the flow depends on both the population and the population . When either population is very small, flow is relatively small. When both populations are relatively large, their product is large and therefore flow is relatively large. This sort of term is called a mass action term, from the Law of Mass Action in chemistry. The idea of mass action is just one way to model flow from one compartment to another; we will study other formulas for flow.   The letters , , and are variables in the model. The Greek letter is a parameter. We use the following conventions for letters in most of the models we study:    Time is denoted as the lowercase letter  .    We use capital letters such as and to indicate populations of people, which are typically functions of time, so that , .     Greek letters such as represent some aspect of how a disease progresses and are called parameters .    A parameter may seem to behave a bit like a variable, since it can take on different values. However, parameters play a different role than variables in our models. In a given simulation, we use biological information to set all parameter values . By contrast, we choose only the initial values of our variables, that is, the values when , and then the simulation reveals the values of each variable at later points in time. For instance, in the human zombie example, we start at with 49 humans and 1 zombie. Writing this in mathematical terms: and . After , the populations of Susceptibles and Infectious depend on the outcome of the simulation. Even the length of time for the simulation depends on how long it takes the Infectious zombies to convert all the Susceptible humans.  As first mentioned in , the values of parameters and population variables can be positive, or sometimes , but should never be negative. Variables referring to populations, such as and , indicate the number of people in a compartment, and therefore it does not make sense for them to be negative, as this would indicate a negative number of people. A variable referring to time should almost always be positive, as we typically think of a disease starting at time . Parameters describe a variety of things, from the transmission parameter we have seen, to parameters we will start learning about in and that relate to time spent in a compartment, to parameters indicating percentages, such as percentage of a population that is vaccinated. In all cases, only non-negative numbers are biologically meaningful. An advantage of positive parameters and variables is that we see in our model whether a term is positive or negative in an equation: if we see a negative sign, the term is negative; otherwise, that term is positive. This is in contrast to more general mathematical equations in other applications: mathematical epidemiology makes positives and negatives completely apparent.    From Zombie Game Variation to Compartmental Diagram  The Zombie Game variation in introduces a new category of individuals, beyond Susceptibles and Infectious. This new category corresponds to a new compartment, compared with , in the model's compartmental diagram.  When zombies die, they leave the Infectious compartment and can no longer infect the Susceptibles. It is typical to represent these dynamics by introducing a Removed (R) compartment for the individuals who were zombies but have then become inactive. Our model then includes S, I, and R compartments, so we call it an SIR model . We typically say each of the letters in SIR when naming this model aloud. That is, we refer to the S  I  R model, not the sir model. A compartmental diagram representing the dynamics of this SIR model appears in .   One possible (Susceptible, Infectious, Removed) compartmental diagram   (Write this)     In this diagram, we include the S and I compartments used previously, while also allowing the Infectious zombies to leave the I compartment and enter the R compartment, where they stay for the rest of the simulation. The mathematical formula for movement from I to R is . The parameter (the Greek letter gamma ) represents the rate at which individuals leave and enter . Larger values of , for instance, mean that zombies become inactive more rapidly than with smaller values of . This formula indicates that neither Susceptibles nor Removed individuals influence movement from I to R: instead, only the number of Infectious people, and a rate based on how long they remain zombies, determine this movement between compartments.    Take time to think through the compartmental diagram in .    Does match your sense of how individuals progress through the simulation? Are all individuals always in exactly one compartment, that is, in at least one compartment and also no more than one compartment at any given time?    Using the information in the compartmental diagram, write the differential equations for this SIR model.        Have you considered whether all individuals must pass through all three compartments?    We saw in that the term named on an arrow appears twice in the differential equations: once as a negative term, in the equation for the compartment the arrow is exiting, and once as a positive term, in the equation for the compartment the arrow is entering.        It should be true that individuals are in exactly one compartment at a time, but with all claims such as this, you should convince yourself or else ask questions about it. It should also be true that individuals cannot progress in any order other than what the compartmental diagram shows. However, in some simulations, some individuals may not leave compartment S. By contrast, with and the SI model, all individuals progress from the S compartment to the I compartment.    The differential equations for this SIR model are:             Estimating Gamma and Other Rates  Consider an SIR model as represented in . Let us think about what the values of should be.    What would it mean if , , or ? Specifically: what fraction of the members of the I compartment leaves I within one unit of time for each of these values of ? For instance, if the unit of time in the SIR model is days, then what fraction of the members of the I compartment leaves I within one day? Similarly, what percentage of the members of the I compartment leaves I within one unit of time for each value of ?    If , then all members of compartment I, that is, of the members, leave I at each unit of time. If , then half the members, that is, , leave I at each unit of time. And if , then one-quarter of the members, that is, , leave I at each unit of time.      Using what you learned in , think further about , , or . For each of these values of , how long does a typical individual remain in compartment I before leaving for compartment R?    If , then all members of compartment I leave at each unit of time, so a typical individual stays in I for one unit of time. If , then half the members of I leave at each unit of time, so a typical individual stays in I for approximately two units of time. And if , then one-quarter of the members of I leave at each unit of time, so a typical individual stays in I for approximately four units of time.    We begin to see in that we can understand intuitively in relationship to how long an individual is in the I compartment. A compartmental model does not track individuals directly, and the responses in do not suggest that every individual in an outbreak is sick for a precise amount of time that is shown by . Instead, the relationship between and length of time in compartment I shows how long on average individuals stay in compartment I. We can write this relationship mathematically:   Another way to phrase this, when being in the I compartment corresponds to a person being infectious (however infectious is defined in a given model) is:   In we use the ideas in and to estimate for specific outbreaks.  Notice that is an amount of time. This means that the units of are . This observation corresponds with being a rate .  Many, but not all, of the parameters in the models in this text are rates. Usually, when a parameter in a compartmental model is a rate, we can estimate its value in a similar way to how we estimate in .  In particular, notice that in our model can not be a rate. We see this when we recognize that each term in a model equation must have the same units: otherwise, we cannot set terms equal to each other, or add or subtract terms. Explore how this works in .    In , we developed the following system of differential equations for the SIR model shown in :   Recall that each of the variables , , and represents some average number of individuals. This means that the units for each of , , and are population . Alternatively, we could call these units people or individuals . We also just saw from the discussion of that the units of are .    Consider the equation from the SIR model. What are the units of the term on the left-hand side, and what are the units of the term on the right-hand side? Can you confirm that these two terms have the same units?    Next, consider the equation from the SIR model. Start by using the first part of this activity to determine the units of and . Next, in order for the units to be the same for all three terms, what should the units be for ? Finally, knowing the units of , what must be the units for ?    Use your results from the first two parts of this activity to confirm that the units are the same on both sides of the equation in the SIR model.        The term has units because the units of in the numerator are population and the units of in the denominator are time .  The term has units because has units and has units (population).  Both sides have the same units, namely .    The terms and have units , for similar reasons to those described in the first part of this activity.  The term should therefore also have units . Since there are two populations, and , multiplied in the numerator, this means that must have units .    The term has units , for similar reasons to those described in the first part of this activity.  Within the term , we saw in the second part of this activity that has units . Both and have units (population). Multiplying together the three terms , , and , the resulting units are .  These observations confirm that the units are the same on both sides of the equation .      After completing , we recognize that in our SIR model, the units of are not . Therefore is not a rate, and we cannot estimate the value of similarly to how we estimate the value of . Indeed, estimating the value of will require different methods. In we discuss estimating visually by comparing our model with data. In and we introduce another way to estimate , using other parameter values we know, along with a formula involving an epidemiological concept known as the basic reproduction number .    Use the ideas and website suggestions of to determine how long individuals are infectious with measles, in the sense used for our SIR model, where infectious signifies contagious . Cite your source(s). Include links to any web pages, the title of each web page used, the name of the government agency or other publisher of each web page, and the date you most recently accessed the web page. Then suppose you are creating an SIR model for the spread of measles. What value would you use for ? Explain your reasoning.  Compare your response to exercise 1 in with this article on measles from . What are the similarities, and the differences, between how the CDC and People magazine describe how long measles is infectious (where here, infectious means contagious )?  Use the ideas and website suggestions of to determine how long individuals are infectious (here, meaning contagious ) with RSV. Cite your source(s). Include links to any web pages, the title of each web page used, the name of the government agency or other publisher of each web page, and the date you most recently accessed the web page. Then suppose you are creating an SIR model for the spread of RSV. What value would you use for ? Explain your reasoning.   "
},
{
  "id": "intro-compartmental-diagrams-1",
  "level": "2",
  "url": "ch-compartmental-diagrams.html#intro-compartmental-diagrams-1",
  "type": "Goals",
  "number": "",
  "title": "",
  "body": "   Begin to use compartmental diagrams    Learn the rules and assumptions for drawing compartmental diagrams    Connect compartmental diagrams with their corresponding systems of differential equations    Build understanding of units and rate parameters in models    "
},
{
  "id": "intro-compartmental-diagrams-4",
  "level": "2",
  "url": "ch-compartmental-diagrams.html#intro-compartmental-diagrams-4",
  "type": "Paragraph (with a defined term)",
  "number": "",
  "title": "",
  "body": "compartmental model compartments compartmental diagram "
},
{
  "id": "fig-SI-compartmental-diagram",
  "level": "2",
  "url": "ch-compartmental-diagrams.html#fig-SI-compartmental-diagram",
  "type": "Figure",
  "number": "4.1",
  "title": "",
  "body": " The compartmental diagram for one possible SI model, where S stands for Susceptible and I stands for Infectious   (Write this)    "
},
{
  "id": "expl-activity-varying-the-human-zombie-game",
  "level": "2",
  "url": "ch-compartmental-diagrams.html#expl-activity-varying-the-human-zombie-game",
  "type": "Exploration",
  "number": "4.1",
  "title": "Varying the Human–Zombie Game.",
  "body": " Varying the Human Zombie Game   In the original Zombie Game App, once an individual becomes a zombie, they are always a zombie. This means that no one leaves the Infectious compartment.  Suppose, instead, that zombies do not last forever. Instead, after some number of days, the zombies die (again), or in other words, the zombies become inactive. The number of days they remain Infectious before becoming inactive can be stated in the app.     Before trying this scenario in the app , think through how zombie death, and different zombie lifespans, would change the outcomes of the simulation. In particular, think carefully about these questions:    What do you expect will happen if Zombies die, that is, they become inactive and unable to spread infection? Whether you feel very certain, or somewhat uncertain, articulate some outcomes that you think will occur with this game variation.    How might your expected outcomes differ from those in the original model?    Outcomes might be measured by the table of data, by the graphs, by the timing of how infection spreads, by the numbers of survivors, or in other ways. For each of your expectations about how the outcomes may change, what support can you show for why this expectation makes sense?    This exercise is not about right or wrong ideas, but instead is about building hypotheses, comparing the hypotheses with data, and developing deeper understanding of what the model shows.    After you have thought through how the outcomes will change in a variation, use the app to generate data.  To set up this variation in the Zombie Game app, check the box for Zombie Mortality , shown by the lower red arrow in . A box then appears for Zombie Lifespan (days) , shown by the upper red arrow in . Try setting Zombie Lifespan to 1, then 2, then 3. For each length of time, run several simulations, save your data sets, and compare the outcomes.   Checking the box for Zombie Mortality and setting a value for Zombie Lifespan (days)   Screen image from the Zombie Game App, showing the checked box for Zombie Mortality and the Zombie Lifespan (days) that appears       Compare the results with the ideas you generated in part (a). How similar or different are the actual results, compared with what you thought?     What else do you observe? Consider how many humans or zombies survive till the end, and consider how much these numbers vary from simulation to simulation. Consider how many days the outbreak lasts. Make note of any additional observations you have, and reach out to other people trying this experiment to see how your results compare with theirs.     Before moving on to the next section , use your intuition to draw a possible compartmental diagram for the outbreak you just simulated in this Exploration. The only compartmental diagram we have seen so far is in : use this diagram as an example, and make changes to match your simulation.   "
},
{
  "id": "sec-compartmental-diagrams-vocabulary-and-comments-3",
  "level": "2",
  "url": "ch-compartmental-diagrams.html#sec-compartmental-diagrams-vocabulary-and-comments-3",
  "type": "Paragraph (with a defined term)",
  "number": "",
  "title": "",
  "body": "compartments "
},
{
  "id": "sec-compartmental-diagrams-vocabulary-and-comments-9-3-1",
  "level": "2",
  "url": "ch-compartmental-diagrams.html#sec-compartmental-diagrams-vocabulary-and-comments-9-3-1",
  "type": "Paragraph (with a defined term)",
  "number": "",
  "title": "",
  "body": "parameters "
},
{
  "id": "sec-from-zombie-game-variation-to-compartmental-diagram-3",
  "level": "2",
  "url": "ch-compartmental-diagrams.html#sec-from-zombie-game-variation-to-compartmental-diagram-3",
  "type": "Paragraph (with a defined term)",
  "number": "",
  "title": "",
  "body": "SIR model "
},
{
  "id": "fig-SIR-compartmental-diagram",
  "level": "2",
  "url": "ch-compartmental-diagrams.html#fig-SIR-compartmental-diagram",
  "type": "Figure",
  "number": "4.3",
  "title": "",
  "body": " One possible (Susceptible, Infectious, Removed) compartmental diagram   (Write this)    "
},
{
  "id": "activity-sir-diagram-and-des",
  "level": "2",
  "url": "ch-compartmental-diagrams.html#activity-sir-diagram-and-des",
  "type": "Activity",
  "number": "4.2",
  "title": "",
  "body": "  Take time to think through the compartmental diagram in .    Does match your sense of how individuals progress through the simulation? Are all individuals always in exactly one compartment, that is, in at least one compartment and also no more than one compartment at any given time?    Using the information in the compartmental diagram, write the differential equations for this SIR model.        Have you considered whether all individuals must pass through all three compartments?    We saw in that the term named on an arrow appears twice in the differential equations: once as a negative term, in the equation for the compartment the arrow is exiting, and once as a positive term, in the equation for the compartment the arrow is entering.        It should be true that individuals are in exactly one compartment at a time, but with all claims such as this, you should convince yourself or else ask questions about it. It should also be true that individuals cannot progress in any order other than what the compartmental diagram shows. However, in some simulations, some individuals may not leave compartment S. By contrast, with and the SI model, all individuals progress from the S compartment to the I compartment.    The differential equations for this SIR model are:      "
},
{
  "id": "activity-understanding-gamma-pt1",
  "level": "2",
  "url": "ch-compartmental-diagrams.html#activity-understanding-gamma-pt1",
  "type": "Activity",
  "number": "4.3",
  "title": "",
  "body": "  What would it mean if , , or ? Specifically: what fraction of the members of the I compartment leaves I within one unit of time for each of these values of ? For instance, if the unit of time in the SIR model is days, then what fraction of the members of the I compartment leaves I within one day? Similarly, what percentage of the members of the I compartment leaves I within one unit of time for each value of ?    If , then all members of compartment I, that is, of the members, leave I at each unit of time. If , then half the members, that is, , leave I at each unit of time. And if , then one-quarter of the members, that is, , leave I at each unit of time.   "
},
{
  "id": "activity-understanding-gamma-pt2",
  "level": "2",
  "url": "ch-compartmental-diagrams.html#activity-understanding-gamma-pt2",
  "type": "Activity",
  "number": "4.4",
  "title": "",
  "body": "  Using what you learned in , think further about , , or . For each of these values of , how long does a typical individual remain in compartment I before leaving for compartment R?    If , then all members of compartment I leave at each unit of time, so a typical individual stays in I for one unit of time. If , then half the members of I leave at each unit of time, so a typical individual stays in I for approximately two units of time. And if , then one-quarter of the members of I leave at each unit of time, so a typical individual stays in I for approximately four units of time.   "
},
{
  "id": "sec-estimating-gamma-and-other-rates-10",
  "level": "2",
  "url": "ch-compartmental-diagrams.html#sec-estimating-gamma-and-other-rates-10",
  "type": "Paragraph (with a defined term)",
  "number": "",
  "title": "",
  "body": "rate "
},
{
  "id": "activity-introducing-units",
  "level": "2",
  "url": "ch-compartmental-diagrams.html#activity-introducing-units",
  "type": "Activity",
  "number": "4.5",
  "title": "",
  "body": "  In , we developed the following system of differential equations for the SIR model shown in :   Recall that each of the variables , , and represents some average number of individuals. This means that the units for each of , , and are population . Alternatively, we could call these units people or individuals . We also just saw from the discussion of that the units of are .    Consider the equation from the SIR model. What are the units of the term on the left-hand side, and what are the units of the term on the right-hand side? Can you confirm that these two terms have the same units?    Next, consider the equation from the SIR model. Start by using the first part of this activity to determine the units of and . Next, in order for the units to be the same for all three terms, what should the units be for ? Finally, knowing the units of , what must be the units for ?    Use your results from the first two parts of this activity to confirm that the units are the same on both sides of the equation in the SIR model.        The term has units because the units of in the numerator are population and the units of in the denominator are time .  The term has units because has units and has units (population).  Both sides have the same units, namely .    The terms and have units , for similar reasons to those described in the first part of this activity.  The term should therefore also have units . Since there are two populations, and , multiplied in the numerator, this means that must have units .    The term has units , for similar reasons to those described in the first part of this activity.  Within the term , we saw in the second part of this activity that has units . Both and have units (population). Multiplying together the three terms , , and , the resulting units are .  These observations confirm that the units are the same on both sides of the equation .     "
},
{
  "id": "sec-estimating-gamma-and-other-rates-14",
  "level": "2",
  "url": "ch-compartmental-diagrams.html#sec-estimating-gamma-and-other-rates-14",
  "type": "Paragraph (with a defined term)",
  "number": "",
  "title": "",
  "body": "basic reproduction number "
},
{
  "id": "exercises-ch-compartmental-diagrams-1",
  "level": "2",
  "url": "ch-compartmental-diagrams.html#exercises-ch-compartmental-diagrams-1",
  "type": "Exercise",
  "number": "4.4.1",
  "title": "",
  "body": "Use the ideas and website suggestions of to determine how long individuals are infectious with measles, in the sense used for our SIR model, where infectious signifies contagious . Cite your source(s). Include links to any web pages, the title of each web page used, the name of the government agency or other publisher of each web page, and the date you most recently accessed the web page. Then suppose you are creating an SIR model for the spread of measles. What value would you use for ? Explain your reasoning. "
},
{
  "id": "exercises-ch-compartmental-diagrams-2",
  "level": "2",
  "url": "ch-compartmental-diagrams.html#exercises-ch-compartmental-diagrams-2",
  "type": "Exercise",
  "number": "4.4.2",
  "title": "",
  "body": "Compare your response to exercise 1 in with this article on measles from . What are the similarities, and the differences, between how the CDC and People magazine describe how long measles is infectious (where here, infectious means contagious )? "
},
{
  "id": "exercises-ch-compartmental-diagrams-3",
  "level": "2",
  "url": "ch-compartmental-diagrams.html#exercises-ch-compartmental-diagrams-3",
  "type": "Exercise",
  "number": "4.4.3",
  "title": "",
  "body": "Use the ideas and website suggestions of to determine how long individuals are infectious (here, meaning contagious ) with RSV. Cite your source(s). Include links to any web pages, the title of each web page used, the name of the government agency or other publisher of each web page, and the date you most recently accessed the web page. Then suppose you are creating an SIR model for the spread of RSV. What value would you use for ? Explain your reasoning. "
},
{
  "id": "ch-model-analysis-and-the-basic-reproduction-number-R0",
  "level": "1",
  "url": "ch-model-analysis-and-the-basic-reproduction-number-R0.html",
  "type": "Chapter",
  "number": "5",
  "title": "Model Analysis and the Basic Reproduction Number <span class=\"process-math\">\\(\\mathcal{R}_0\\)<\/span>",
  "body": " Model Analysis and the Basic Reproduction Number      Develop the technique of sign analysis for analyzing outcomes of compartmental models    Investigate relationships between a compartmental disease model, the size of the total population being modeled, and each compartment's long-term population value    Introduce the basic reproduction number and its implication for outbreaks     By now, we have studied models from several perspectives. In and the Zombie Game App, we generated data for an outbreak, constructed tables and graphs of data, and thought through how all these pieces of information fit together. then introduced using a system of differential equations for describing the relationships. The Python code in generated images of data points and solution curves for systems of differential equations. Finally, and crucially, we began drawing compartmental diagrams in .  These multiple forms of describing models all work together. They allow us to understand models and their results through graphs, equations, data, and diagrams. Now that we have these tools for discussing models, we take time to mathematically analyze models. Some of this analysis is necessary for confirming that our models make sense in relationship to the real world. Additional analysis of models gives us ways to think about controlling outbreaks.  Our starting point, using a combination of visual and equation-based understanding, begins in .   Rise and Fall of an Epidemic   We first saw the SIR model in . The compartmental diagram appears in and the system of differential equations is the following:   Throughout this Exploration, continue to connect the model, graphs of its solution curves, and real-world meaning.    Look at the expressions on the right-hand sides of the differential equations for the SIR model.    Which terms are positive? Which terms are negative? What does this tell you about how each population can flow through the compartments?    For each differential equation, what signs ( , , or ) are possible on the right-hand side? What does this tell you about the solution curves for the model?      For the graph in , which curve goes with which compartment of the SIR model? Justify your reasoning in two ways:    Use your sign analysis , that is, the work you just did on describing solution curves based on the sign ( , , or ) of the right-hand side of that compartment's differential equation in the SIR model.    Describe what happens in the Zombie Game App when we run a simulation including zombie mortality, and confirm that these curves make sense in that context.     One set of solution curves for the SIR model   Solution curves for the SIR model, unlabeled, for an exercise asking students to identify which curve represents which compartment in the model        Using Calculus to Analyze Models  The work of involves central ideas from introductory calculus. The equations of the SIR model are differential equations , which means they include derivatives. Derivatives represent change , and we often describe this change as the slope of a graph . The graphs we use in studying models are the solution curves of the model. That is, given equations for, say, , , and , the solution curves are the graphs of , , and , with time on the horizontal axis, and the populations , , and on the vertical axis.  Now, let us continue with model analysis, specifically naming calculus concepts along the way.    Consider the SIR model:   and define to be the total population being modeled, at time .  Each equation in this model represents the change in a single compartment's population, over time. How can we use the equations in the model to represent the change in total population over time? That is, how can we use the equations to represent ?  Determine the value of the change in total population : you should be able to compute a number. What does this number tell us about the total population in our model?    Add together the three differential equations. What is the meaning of the left-hand side? What is the meaning of the right-hand side? And what value do we obtain on the right-hand side when summing the differential equations?    On the left-hand side:   Therefore, summing the three differential equations determines the change over time of the total population.  On the right-hand side:   Since the three differential equations sum to zero, the change in total population is . This tells us that the total population in our model does not change. In other words, the size of the total population remains constant.    The analysis in includes the following calculus concepts.    The sum of derivatives equals the derivative of the sum: . Therefore .    When the derivative of a function equals , the function is unchanging: indicates that is unchanging.    In an outbreak that occurs over a relatively short time, it may make complete sense to say that the population is unchanging. It may be that the population truly does not change at all, or it may be that the population is changing so little that we decide not to include population change in a model of the outbreak. Noticing when population change is , or close to , allows us to write relatively simple models that do not try to incorporate births, deaths, immigration, emigration, or other population changes. Models that represent a longer span of time may need to account for changes in population.  Considering population change requires us to think more deeply about compartment R. We have referred to this compartment as Removed . Some models call the R compartment Recovered . In an outbreak where people all return to full health, calling the R compartment Recovered works well. In an outbreak that causes deaths, one modeling option is to include both deaths and recoveries in the same R compartment. In this case, the name Removed provides a better description. In either case, recognizing that R may stand for differently named compartments is a reminder to us about why we should fully describe each of our models, even if we believe SIR models are well known to our audience: even among SIR models, the interpretations can differ.  For now, we continue to work with an SIR model in which population does not change. We note that some models do need to account for changes in population. As one example, models that represent a longer span of time may incorporate births and deaths. We will see such models later in this text.  Another comment: though we have said our current SIR model probably refers to an outbreak over a relatively short time span, we purposely do not designate amounts of time that are relatively short or longer . This is a choice for the modeler. For each model, a human (the modeler, or perhaps a group working together) makes decisions about whether to list population changes based on length of time or other reasons. They then provide their decisions when describing their models, and they include some form of justification for each decision.  Next, we go back to the SIR model we have been studying to work through some ways the model solutions can change as parameter values change.    Use the code below to create three different graphs of solution curves to an SIR model in which , , , and . The first set of values for and appear in the code block; change the code to get the other two sets of values. It may help you to save screenshots of each of the three graphs, so you can more easily see all three at the same time.    In the first graph, let and .    In the second graph, let and .    In the third graph, let and .    Then respond to the prompts below the code block.     What observations can you make, overall, about the three graphs? Take time with this question, and think expansively, before moving on to the next questions.    Discuss the similarities and differences in the curves in each of your three graphs. Include observations using our sign analysis from : when is rising or falling, and what does this have to do with the sign ( , , or ) of ?    Compare the long-term outcomes for and across the three graphs. What do you notice about the total number of people who ever became sick in each case?    Explore the role that changes to make to the outcome in each graph. Similarly, think through how changes to contribute to graph outcomes. For each parameter, decide first how you think changing the parameter will change the solution curves. Then use the code block to make several changes to that parameter, and compare what you see with what you thought you would see.        This is open-ended.    In the first two graphs, rises, then falls. For a sign analysis, first write out the differential equation for . Then substitute in the values of and and the initial values and to see that . Yet decreases rapidly, until , and at this time the curve falls.  In the third graph, the graph has a negative slope from the very beginning. A sign analysis shows why this makes sense, based on the initial value of .    In the first graph, everyone eventually gets sick. One way to see this is that the long-term value of appears to be and the long-term value of appears to be , which is the total population.  In the second graph, not everyone gets sick in the outbreak. The curve appears to level out at a value of approximately . Extending t_range beyond can help for confirming this.  In the third graph, quite a few people avoid illness. Estimates for long-term values of and can confirm this.    There is much to say here. In general, increasing makes more people become sick, and makes infection happen more rapidly. Decreasing leads to more infections. The , , and graphs are all affected by these changes, and the answer to this prompt should include descriptions of these changes.      Both and use sign analysis . This usage of the signs ( , , or ) of a derivative can inform us about circumstances in which a population is increasing, decreasing, or remaining constant. Such knowledge about the relationship between signs and derivatives comes from calculus and is tremendously powerful for understanding epidemics through compartmental modeling.  Let us take a moment to emphasize an assumption we make about signs when writing compartmental models. In many applications of mathematics, variables and parameters can take on the values of any real number. However, in compartmental models, we specify that variables and parameters cannot be negative because negative values would not make biological sense. For instance, populations of people cannot be negative, and length of time sick with a disease cannot be negative. Therefore, what we see is what we get: if no negative sign ( ) is visible, then a term cannot be negative.  Here is a summary of some of the key outcomes in the SIR model from our sign analysis so far. Notice that all these observations arise from calculus concepts.    Sign analysis tells us that cannot increase: since , then can only decrease or remain constant.    Sign analysis tells us that cannot decrease: since , then can only increase or remain constant.    Sign analysis tells us that has the ability to increase, decrease, or remain constant because the formula for can take on values that are positive, negative, or zero.    When , the graph of has a slope of . In many simulations, there is a single value of at which and the graph of turns from increasing to decreasing.    Eventually, in this model, the value of will approach , and then the values of and will level out because and will approach .    You may have found yet other ways to connect derivative signs ( , , or ) with model outcomes.    In addition to looking at signs, we examined long-term outcomes in . This is a moment to wonder: what can mathematical approaches tell us about limiting the impact of an outbreak? We explore this question in depth in .    The Basic Reproduction Number  It turns out that the SIR model, and many other compartmental models, can be connected with an epidemiological concept called the basic reproduction number . The basic reproduction number is the average number of new infections caused by one infectious person in an otherwise entirely susceptible population . This number is given the symbol , which is pronounced as R zero or R nought .  A comment about the terms Infectious vs. infectious in this text: the capitalized term Infectious refers to the population in the Infectious compartment of a compartmental model. The more general, uncapitalized infectious refers to people at any stage of infection. We will see in this text that a compartmental model may have multiple compartments representing multiple phases of illness. When discussing the basic reproduction number , a person in any phase of illness can be called infectious .  In , we begin to link our SIR model with the concept of .    This activity examines the boundary between rising and falling numbers in the SIR model we have been studying. We will see that this boundary relates to important information about the basic reproduction number .    Begin by using the code below to try different values of and . Your goal is to find values for which the curve does not rise at first: instead, it stays level or falls. Keep the initial conditions the same, that is, , , and . If changing the range of values helps you see the outcome better, then change the end time to a smaller or larger value. However, keep the initial time .  Find more than one combination of and for which the curve does not rise.    Demonstrate your results by showing model output. To do this, you can modify the Python code provided as part of . If it would help you to change the end time of the model simulation so you can better see the full scope of the model's behavior, then in t_range in line 17, you can update the value to a different number.    Finally, consider the equation from the SIR model. Under what conditions must ? Think about these conditions biologically: what interpretations can you give the conditions?         This is open-ended. There are many combinations of and for which the curve falls from the start.    While this is also open-ended, it is important to extend the end time in t_range enough so that the , , and curves are essentially horizontal near the end of the model's time range. The population values for S, I, and R after the curves have leveled to horizontal indicate how many people never got sick (S), how many people got sick and then eventually moved to the Removed compartment (R), and how many people are still sick (I, which should be at 0 if the outbreak is complete).    Set the right-hand side of the equation equal to 0 and factor:   This results in two possibilities: either or . There are multiple biological interpretations of each possibility.      Both and should be leading you to the following conclusions.    Smaller values of lead to less growth of the curve and can help contribute to fewer total people ever becoming Infectious. Smaller corresponds to less infectivity.    Larger values of also lead to less growth of the curve and can help contribute to fewer total people ever becoming Infectious. Larger corresponds to a higher rate of people moving from compartment I to compartment R.    Another way to think of the previous bullet point: smaller values of lead to less growth of the curve and can help contribute to fewer total people ever becoming Infectious. Given the relationship in , we see that smaller corresponds to a shorter length of time that people are Infectious.    If and combine into a small enough value, the curve does not grow, even at the start of a model simulation.    We find that never grows if at the start of a simulation, that is, when . This means   Since , the only way to achieve is to have .    It would also be possible to have if , but once an outbreak begins, we no longer have .    As a reminder, we said that the basic reproduction number is the average number of new infections caused by one infectious person in an otherwise entirely susceptible population . We are nearly ready to present the formula for in the SIR model   However, we first emphasize that describes a phenomenon that occurs in an entirely susceptible population. When is described in the news or popular culture, as happened in many reports on COVID-19, the entirely susceptible population part of the definition is usually left out.  To incorporate the idea of an entirely susceptible population, we refer back to our definition of total population  , which appeared in . In that activity, we showed that remains constant in this SIR model. We can therefore write more simply as , since the value of does not change over time.  We now have all the pieces we need to assemble a formula for in the SIR model , , and :   It is possible to compute the formula for from the equations in a compartmental model. The most common way to do this is called the Next Generation Method. Because the Next Generation Method uses partial derivatives and techniques from linear algebra, it is described in the optional . In particular, teaches the process in a way that can be used by students who are new to matrix operations and partial derivatives: there are a few math techniques to learn, and Python does the rest. Readers who include will be able to solve for the formula for in their own models. As an alternative, the formulas for several commonly used compartmental models are provided directly throughout this text.  The numerical value of the formula relates closely to the trajectory of an outbreak. Investigate this in .    Here, we connect two ideas: the circumstances under which , according to our work in , and the formula for , as given in .  Start with the following result from : in order to have when , it must be that . Show how to rearrange the equation algebraically to get   Then answer the following questions.    When , is rising or falling?    When , is rising or falling?    In a typical outbreak, what change causes to transition among being less than , or equal to , or greater than ? What is the expected order of these cases, that is, in an outbreak where all three cases , , and happen at some time, which of these cases happens first, which happens second, and which happens third? Why is this the order?    After completing the above questions, next consider the formula from , which says that . Use the work you have already done in this activity, along with the definition of as being the average number of new infections caused by one infectious person in an otherwise entirely susceptible population , to describe what tells us about the behavior of early in an outbreak.    When , then , which means that the number of Infectious people is increasing. This typically happens early in an outbreak. As the outbreak continues, the value of becomes smaller, so that eventually (which means ), and then (which means and the number of Infectious people is decreasing).  With one infectious person in an otherwise entirely susceptible population , it is approximately true that , that is, that the Susceptible population is essentially the entire population. Therefore, is a way of indicating what happens to the population at the very start of an outbreak .    As we have seen in , the value of tells us what happens at the very start of an outbreak. This relates to the definition of , which considers a single infectious person in an otherwise entirely susceptible population.  To be more specific, when , the value of is initially positive, which means that the value of initially increases. Only later, when there are fewer susceptibles, does the graph of level off and begin to fall.  Alternatively, if , then the value of is initially negative. In this case, the graph of never rises: it only falls.  The value of , then, tells us whether to expect increasing numbers of Infectious individuals. The specific number is the boundary between rising and falling values of when a new infection is first introduced to a susceptible population. We will further see that larger values of correspond to diseases that are more apt to spread, for a variety of reasons. The concept of will be central to our study of outbreaks.    Do some mathematical analysis of this SI model: In particular,   Sum the differential equations and use your results to describe how the total population being modeled changes over time.    Perform a sign analysis on the equation, indicating mathematically feasible ways in which the population can change during the time of the outbreak.    Perform a sign analysis on the equation, indicating mathematically feasible ways in which the population can change during the time of the outbreak.    Investigate the role of in changing the outcomes of the model. Describe ways in which changing can change the outcomes, and describe what those changes are. Also describe ways in which the outcomes cannot be changed by changing .    Imagine a new outbreak occurs in a small town of 5000 people. Let us suppose it makes sense to model this outbreak with an SIR model, where the compartments are Susceptible (people who are not sick but can become sick), Infectious (people who are currently able to spread the disease), and Removed (people who are no longer able to spread the disease and are unable to become sick again). At the start of the outbreak, a single person is Infectious, and the rest of the people are Susceptible.   Suppose that, in the early days of the outbreak, researchers estimate and . Show how to compute the value of for this model, and state the value of you determine. Then, based on this value of , answer: what do you anticipate happening to the solution curve in the short term and in the long term of this outbreak?    Now suppose that the value of was instead approximated to be , yet it is still true that . Compute the value of in this case. With this value of , what do you anticipate happening to the solution curve for the short-term and long-term outcomes of the outbreak?    Now suppose this outbreak occurs in a town of 1000 people, with and . Compute the value of for the SIR model in this smaller town. Use this value of to describe what you think will happen to the solution curve in the short term and in the long term of this outbreak.    Adapt the Python code shown earlier in this chapter to produce graphs of the outcomes of the SIR models in parts (a), (b), and (c) above. Allow time to increase as needed, to show the full time span of the outbreak. Write a few sentences about how well your descriptions of short-term and long-term model outcomes are supported, or not supported, by the graphs.    Most diseases we know of have . This makes sense: without rising numbers of Infectious people, we do not experience an epidemic. However, in rare cases, a disease emerges for which . One example is MERS, which stands for Middle East Respiratory Syndrome. The first identified case of MERS was in 2012. There is still a lot to learn about MERS, but multiple estimates indicate that the value of for MERS is less than one. This activity is motivated by the existence of diseases with . Suppose we study a disease for which and , that is, people are typically contagious for about ten days. Suppose we choose to model this disease with an SIR model similar to the models we have been using in this chapter: S stands for Susceptible, meaning people who are not sick but can become sick; I stands for Infectious, meaning people who are currently able to spread the disease, that is, they are contagious, and R stands for Removed, meaning people who are no longer able to spread the disease and are unable to become sick again. In the case of a disease similar to MERS, the Removed compartment consists of both recoveries and deaths from the disease.   In an area with a population of 1000, rearrange to solve for the value of for this SIR model.    Suppose that at the start of the outbreak, 20 people are Infectious. Use the Python block below to visualize the outbreak over 200 days. Notice that the Python block includes three print commands. These print and label the last output values stored as sol , that is, the , , and values for the last value of time , namely .   Use caution: by default, the Python block does not contain the correct value for . Instead, replace the existing value with the value you computed in part (a).   Use the graphs to describe qualitatively what happens in this population that began with 20 Infectious people. Does the curve for the population begin falling from the very beginning? What happens to the curves for and ?    Incorporate the output from the print command, along with the visual output of the graphs. How many people, in total, were Infectious at some point during the time of this model? How does this compare with the initial 20 cases? How do you reconcile this result with the behavior of the curve and with the knowledge that in this model?     "
},
{
  "id": "intro-model-analysis-and-the-basic-reproduction-number-R0-1",
  "level": "2",
  "url": "ch-model-analysis-and-the-basic-reproduction-number-R0.html#intro-model-analysis-and-the-basic-reproduction-number-R0-1",
  "type": "Goals",
  "number": "",
  "title": "",
  "body": "   Develop the technique of sign analysis for analyzing outcomes of compartmental models    Investigate relationships between a compartmental disease model, the size of the total population being modeled, and each compartment's long-term population value    Introduce the basic reproduction number and its implication for outbreaks    "
},
{
  "id": "expl-rise-and-fall-of-an-epidemic",
  "level": "2",
  "url": "ch-model-analysis-and-the-basic-reproduction-number-R0.html#expl-rise-and-fall-of-an-epidemic",
  "type": "Exploration",
  "number": "5.1",
  "title": "Rise and Fall of an Epidemic.",
  "body": " Rise and Fall of an Epidemic   We first saw the SIR model in . The compartmental diagram appears in and the system of differential equations is the following:   Throughout this Exploration, continue to connect the model, graphs of its solution curves, and real-world meaning.    Look at the expressions on the right-hand sides of the differential equations for the SIR model.    Which terms are positive? Which terms are negative? What does this tell you about how each population can flow through the compartments?    For each differential equation, what signs ( , , or ) are possible on the right-hand side? What does this tell you about the solution curves for the model?      For the graph in , which curve goes with which compartment of the SIR model? Justify your reasoning in two ways:    Use your sign analysis , that is, the work you just did on describing solution curves based on the sign ( , , or ) of the right-hand side of that compartment's differential equation in the SIR model.    Describe what happens in the Zombie Game App when we run a simulation including zombie mortality, and confirm that these curves make sense in that context.     One set of solution curves for the SIR model   Solution curves for the SIR model, unlabeled, for an exercise asking students to identify which curve represents which compartment in the model     "
},
{
  "id": "activity-total-population",
  "level": "2",
  "url": "ch-model-analysis-and-the-basic-reproduction-number-R0.html#activity-total-population",
  "type": "Activity",
  "number": "5.2",
  "title": "",
  "body": "  Consider the SIR model:   and define to be the total population being modeled, at time .  Each equation in this model represents the change in a single compartment's population, over time. How can we use the equations in the model to represent the change in total population over time? That is, how can we use the equations to represent ?  Determine the value of the change in total population : you should be able to compute a number. What does this number tell us about the total population in our model?    Add together the three differential equations. What is the meaning of the left-hand side? What is the meaning of the right-hand side? And what value do we obtain on the right-hand side when summing the differential equations?    On the left-hand side:   Therefore, summing the three differential equations determines the change over time of the total population.  On the right-hand side:   Since the three differential equations sum to zero, the change in total population is . This tells us that the total population in our model does not change. In other words, the size of the total population remains constant.   "
},
{
  "id": "activity-three-sets-of-parameters",
  "level": "2",
  "url": "ch-model-analysis-and-the-basic-reproduction-number-R0.html#activity-three-sets-of-parameters",
  "type": "Activity",
  "number": "5.3",
  "title": "",
  "body": "  Use the code below to create three different graphs of solution curves to an SIR model in which , , , and . The first set of values for and appear in the code block; change the code to get the other two sets of values. It may help you to save screenshots of each of the three graphs, so you can more easily see all three at the same time.    In the first graph, let and .    In the second graph, let and .    In the third graph, let and .    Then respond to the prompts below the code block.     What observations can you make, overall, about the three graphs? Take time with this question, and think expansively, before moving on to the next questions.    Discuss the similarities and differences in the curves in each of your three graphs. Include observations using our sign analysis from : when is rising or falling, and what does this have to do with the sign ( , , or ) of ?    Compare the long-term outcomes for and across the three graphs. What do you notice about the total number of people who ever became sick in each case?    Explore the role that changes to make to the outcome in each graph. Similarly, think through how changes to contribute to graph outcomes. For each parameter, decide first how you think changing the parameter will change the solution curves. Then use the code block to make several changes to that parameter, and compare what you see with what you thought you would see.        This is open-ended.    In the first two graphs, rises, then falls. For a sign analysis, first write out the differential equation for . Then substitute in the values of and and the initial values and to see that . Yet decreases rapidly, until , and at this time the curve falls.  In the third graph, the graph has a negative slope from the very beginning. A sign analysis shows why this makes sense, based on the initial value of .    In the first graph, everyone eventually gets sick. One way to see this is that the long-term value of appears to be and the long-term value of appears to be , which is the total population.  In the second graph, not everyone gets sick in the outbreak. The curve appears to level out at a value of approximately . Extending t_range beyond can help for confirming this.  In the third graph, quite a few people avoid illness. Estimates for long-term values of and can confirm this.    There is much to say here. In general, increasing makes more people become sick, and makes infection happen more rapidly. Decreasing leads to more infections. The , , and graphs are all affected by these changes, and the answer to this prompt should include descriptions of these changes.     "
},
{
  "id": "sec-the-basic-reproduction-number-R0-2",
  "level": "2",
  "url": "ch-model-analysis-and-the-basic-reproduction-number-R0.html#sec-the-basic-reproduction-number-R0-2",
  "type": "Paragraph (with a defined term)",
  "number": "",
  "title": "",
  "body": "basic reproduction number "
},
{
  "id": "activity-formula-for-i-of-t-turning-around",
  "level": "2",
  "url": "ch-model-analysis-and-the-basic-reproduction-number-R0.html#activity-formula-for-i-of-t-turning-around",
  "type": "Activity",
  "number": "5.4",
  "title": "",
  "body": "  This activity examines the boundary between rising and falling numbers in the SIR model we have been studying. We will see that this boundary relates to important information about the basic reproduction number .    Begin by using the code below to try different values of and . Your goal is to find values for which the curve does not rise at first: instead, it stays level or falls. Keep the initial conditions the same, that is, , , and . If changing the range of values helps you see the outcome better, then change the end time to a smaller or larger value. However, keep the initial time .  Find more than one combination of and for which the curve does not rise.    Demonstrate your results by showing model output. To do this, you can modify the Python code provided as part of . If it would help you to change the end time of the model simulation so you can better see the full scope of the model's behavior, then in t_range in line 17, you can update the value to a different number.    Finally, consider the equation from the SIR model. Under what conditions must ? Think about these conditions biologically: what interpretations can you give the conditions?         This is open-ended. There are many combinations of and for which the curve falls from the start.    While this is also open-ended, it is important to extend the end time in t_range enough so that the , , and curves are essentially horizontal near the end of the model's time range. The population values for S, I, and R after the curves have leveled to horizontal indicate how many people never got sick (S), how many people got sick and then eventually moved to the Removed compartment (R), and how many people are still sick (I, which should be at 0 if the outbreak is complete).    Set the right-hand side of the equation equal to 0 and factor:   This results in two possibilities: either or . There are multiple biological interpretations of each possibility.     "
},
{
  "id": "activity-r0-less-than-1",
  "level": "2",
  "url": "ch-model-analysis-and-the-basic-reproduction-number-R0.html#activity-r0-less-than-1",
  "type": "Activity",
  "number": "5.5",
  "title": "",
  "body": "  Here, we connect two ideas: the circumstances under which , according to our work in , and the formula for , as given in .  Start with the following result from : in order to have when , it must be that . Show how to rearrange the equation algebraically to get   Then answer the following questions.    When , is rising or falling?    When , is rising or falling?    In a typical outbreak, what change causes to transition among being less than , or equal to , or greater than ? What is the expected order of these cases, that is, in an outbreak where all three cases , , and happen at some time, which of these cases happens first, which happens second, and which happens third? Why is this the order?    After completing the above questions, next consider the formula from , which says that . Use the work you have already done in this activity, along with the definition of as being the average number of new infections caused by one infectious person in an otherwise entirely susceptible population , to describe what tells us about the behavior of early in an outbreak.    When , then , which means that the number of Infectious people is increasing. This typically happens early in an outbreak. As the outbreak continues, the value of becomes smaller, so that eventually (which means ), and then (which means and the number of Infectious people is decreasing).  With one infectious person in an otherwise entirely susceptible population , it is approximately true that , that is, that the Susceptible population is essentially the entire population. Therefore, is a way of indicating what happens to the population at the very start of an outbreak .   "
},
{
  "id": "exercises-ch-populations-and-R0-1",
  "level": "2",
  "url": "ch-model-analysis-and-the-basic-reproduction-number-R0.html#exercises-ch-populations-and-R0-1",
  "type": "Exercise",
  "number": "5.3.1",
  "title": "",
  "body": "Do some mathematical analysis of this SI model: In particular,   Sum the differential equations and use your results to describe how the total population being modeled changes over time.    Perform a sign analysis on the equation, indicating mathematically feasible ways in which the population can change during the time of the outbreak.    Perform a sign analysis on the equation, indicating mathematically feasible ways in which the population can change during the time of the outbreak.    Investigate the role of in changing the outcomes of the model. Describe ways in which changing can change the outcomes, and describe what those changes are. Also describe ways in which the outcomes cannot be changed by changing .   "
},
{
  "id": "exercises-ch-populations-and-R0-2",
  "level": "2",
  "url": "ch-model-analysis-and-the-basic-reproduction-number-R0.html#exercises-ch-populations-and-R0-2",
  "type": "Exercise",
  "number": "5.3.2",
  "title": "",
  "body": "Imagine a new outbreak occurs in a small town of 5000 people. Let us suppose it makes sense to model this outbreak with an SIR model, where the compartments are Susceptible (people who are not sick but can become sick), Infectious (people who are currently able to spread the disease), and Removed (people who are no longer able to spread the disease and are unable to become sick again). At the start of the outbreak, a single person is Infectious, and the rest of the people are Susceptible.   Suppose that, in the early days of the outbreak, researchers estimate and . Show how to compute the value of for this model, and state the value of you determine. Then, based on this value of , answer: what do you anticipate happening to the solution curve in the short term and in the long term of this outbreak?    Now suppose that the value of was instead approximated to be , yet it is still true that . Compute the value of in this case. With this value of , what do you anticipate happening to the solution curve for the short-term and long-term outcomes of the outbreak?    Now suppose this outbreak occurs in a town of 1000 people, with and . Compute the value of for the SIR model in this smaller town. Use this value of to describe what you think will happen to the solution curve in the short term and in the long term of this outbreak.    Adapt the Python code shown earlier in this chapter to produce graphs of the outcomes of the SIR models in parts (a), (b), and (c) above. Allow time to increase as needed, to show the full time span of the outbreak. Write a few sentences about how well your descriptions of short-term and long-term model outcomes are supported, or not supported, by the graphs.   "
},
{
  "id": "exercises-ch-populations-and-R0-3",
  "level": "2",
  "url": "ch-model-analysis-and-the-basic-reproduction-number-R0.html#exercises-ch-populations-and-R0-3",
  "type": "Exercise",
  "number": "5.3.3",
  "title": "",
  "body": "Most diseases we know of have . This makes sense: without rising numbers of Infectious people, we do not experience an epidemic. However, in rare cases, a disease emerges for which . One example is MERS, which stands for Middle East Respiratory Syndrome. The first identified case of MERS was in 2012. There is still a lot to learn about MERS, but multiple estimates indicate that the value of for MERS is less than one. This activity is motivated by the existence of diseases with . Suppose we study a disease for which and , that is, people are typically contagious for about ten days. Suppose we choose to model this disease with an SIR model similar to the models we have been using in this chapter: S stands for Susceptible, meaning people who are not sick but can become sick; I stands for Infectious, meaning people who are currently able to spread the disease, that is, they are contagious, and R stands for Removed, meaning people who are no longer able to spread the disease and are unable to become sick again. In the case of a disease similar to MERS, the Removed compartment consists of both recoveries and deaths from the disease.   In an area with a population of 1000, rearrange to solve for the value of for this SIR model.    Suppose that at the start of the outbreak, 20 people are Infectious. Use the Python block below to visualize the outbreak over 200 days. Notice that the Python block includes three print commands. These print and label the last output values stored as sol , that is, the , , and values for the last value of time , namely .   Use caution: by default, the Python block does not contain the correct value for . Instead, replace the existing value with the value you computed in part (a).   Use the graphs to describe qualitatively what happens in this population that began with 20 Infectious people. Does the curve for the population begin falling from the very beginning? What happens to the curves for and ?    Incorporate the output from the print command, along with the visual output of the graphs. How many people, in total, were Infectious at some point during the time of this model? How does this compare with the initial 20 cases? How do you reconcile this result with the behavior of the curve and with the knowledge that in this model?   "
},
{
  "id": "ch-vaccines",
  "level": "1",
  "url": "ch-vaccines.html",
  "type": "Chapter",
  "number": "6",
  "title": "Vaccines",
  "body": " Vaccines      Explore the role of public health strategies in managing disease spread, using compartmental models    Strengthen understanding of the meaning of , which involves a single Infectious person in an otherwise entirely Susceptible population    Determine the threshold for what percentage of vaccine coverage reduces transmission enough so that the number of Infectious cases does not rise     In the first few chapters of this text, we have introduced the basic hows for compartmental modeling, as well as a few of the whys . Now, we explore the whys even further.  One of the most significant ways to use models is for trying and comparing possible public health strategies in simulations before actually carrying them out with real people. Professional-level models can be quite detailed and depend on large amounts of data, and compartmental models are just one of the many types of models implemented. In this chapter, we work with one commonly used strategy: vaccination. Vaccination is a widely used public health strategy. Yet the author of this text recognizes that reader thoughts on vaccines may vary for many reasons. As mentioned way back in the To Students preface, I will not tell you how to think. Instead, the goal of showing vaccines in models is to demonstrate some of the ways we can use models to try different scenarios. Readers can and should continue to think about their own ethics and experiences when interpreting and discussing models   Begin in by adjusting the initial number of Susceptibles in a model, with the goal of reducing the occurrence of new infections.   Reducing New Infections   This exploration seeks to reduce the number of new infections in the SIR model from by changing the initial numbers of people in the Susceptible and Removed compartments. For reference, here are the equations of the model:   This change to the model reflects a concept we have observed in multiple chapters so far, from the Zombie Game to the definition of as applying to a population that is nearly entirely Susceptible. In these contexts, we have seen that as the number of Susceptible people falls over the course of an outbreak, the outbreak can slow down and eventually stop. We therefore try starting our model simulation by using the terms and to split the initial population across the S and R compartments.  Work through the parts of this exploration to build understanding of and and to determine the possible numerical values for and .    Read the Python code below. In line 17, the initial conditions , , and set but use and to split up the rest of the population between the S and R compartments. We restrict the possible values of so that it must be true that .  After reading and evaluating the Python code, respond to the questions that follow.     Given the restriction that , what is the range of possible values for the term ?    Notice that we set and . Try letting and . In each case, compute how many Susceptible and Removed people we would have at the start of the simulation. For each of these values of , what is the value of ?      These questions help us see trends in the model's behavior when we change . Think logically and mathematically about your answers, and use the Python code freely to experiment with . To see the full scope of model behavior as you change in the SIR model, you may wish to change the time range, remove the # sign in lines 23 or 25 so you can see the graphs of the Susceptible or Removed populations, or make other changes to the code.    Compared with starting the model with and , what sorts of effects do you see when the value of is relatively small, that is, is just above ? In contrast, what sorts of effects do you see when the value of is relatively large, that is, is just below ?    What can you say about the boundary values of ? That is, what sorts of effects do you see on the SIR model when or when ?    As the value of increases from to , passing through several values in between, what observations can you make about the output of the SIR model?        Determining a Threshold Vaccine Level  The modeling in this section focuses on reducing transmission of a disease through the use of vaccines . We use the values and from , along with the concept of from , to demonstrate the effect of vaccines on the number of people who ever become Infectious in a disease outbreak.  As a reminder, the basic reproduction number  is the average number of new infections caused by one infectious person in an otherwise entirely susceptible population. This means that is not a number we can use to directly describe a population that has been vaccinated against a disease, since a vaccinated population is not entirely susceptible. Instead, we introduce an effective reproduction number  , which is the average number of new infections caused by one infectious person in a population that may not be entirely susceptible, such as a population that has had access to vaccination. One way to pronounce the symbol is R effective .  We cannot change the intrinsic value of , but with vaccination, we can work toward the goal of having . If in a model that includes vaccines or other public health interventions, then overall numbers of Infectious people do not rise over time. With a few lines of algebra, we can build a relationship between , , and .  First, we should state a definition for . We define to be the fraction of people vaccinated against a disease, noting that the values of are therefore restricted to , where means no one is vaccinated, and means of the population is vaccinated.  When the fraction of people are vaccinated, the remaining fraction are not vaccinated. Since refers to an entirely susceptible population, but only the fraction of the population is susceptible, we see that the average number of new infections caused by one infectious person in the vaccinated population is . In other words:   Our goal in the next few mathematical steps is to use to determine a value of for which . The goal of was set out in the 1983 paper Parasitic Infections as Regulators of Animal Populations by Robert M. May, published in American Scientist in the January-February issue. Additional details and explanation appear in the 1988 textbook Mathematical Models in Biology by Leah Edelstein-Keshet, published by McGraw-Hill. Such a value of corresponds to a vaccination rate high enough that a disease cannot become an outbreak because means that the overall numbers in the Infectious population are not expected to rise. Read carefully through the following mathematical steps to see how this value of is computed:   In the lines above, we started with our goal of causing to be less than one. We then made a substitution using and rearranged algebraically until we found a formula showing values of that satisfied our goal. Notice that to compute the next-to-last line, we divided by without changing the direction of the inequality, which assumed that . This assumption makes biological sense, and is important to point out mathematically, as biology and mathematics should support each other throughout the modeling process.  We now note a particular, special value of that is the threshold between two outcomes, which makes it a critical value . The two outcomes are having, or not having, an outbreak. We therefore name this critical value of to be :   Investigate the critical value , and the accompanying threshold between outbreak and no outbreak, in .    In this activity, we explore through the comparison of two historically widespread diseases: smallpox and measles.    We begin by examining smallpox. Estimates for the value of for smallpox range from 3.5 to 6. Estimates that come from the paper Transmission potential of smallpox in contemporary populations by Raymond Gani and Steve Leach, published in the journal Nature on 13 December 2001. Given this range of values, what is the range of values required in order to reduce the value of for smallpox so that ? What percentage of people would need to be vaccinated, using the values of you computed, to prevent a smallpox outbreak, that is, to cause ?    Next, we examine measles. Many estimates for the value of for measles range from 12 to 18. The paper The basic reproduction number (R0) of measles: a systematic review , by Fiona M Guerra, Shelly Bolotin, Gillian Lim, Jane Heffernan, Shelley L Deeks, Ye Li, and Natasha S Crowcroft, states that is often approximated as , while also stating that the actual range of for measles varies even more. This paper was published in The Lancet Infectious Diseases on 27 July 2017. Given this range of values, what is the range of values required in order to reduce the value of for measles so that ? What percentage of people would need to be vaccinated, using the values of you computed, to prevent a measles outbreak, that is, to cause ?    Smallpox has been eliminated: the last natural occurrence was in 1977, and in 1980, the World Health Organization stated that smallpox had been globally eradicated. Measles has not been eliminated: widespread vaccination has reduced cases drastically in many parts of the world, but measles continues to circulate. Given your results in parts 1 and 2 of this activity about the values of for smallpox and measles, write a few sentences about how the value of increases or decreases the feasibility of vaccinating enough people to eliminate a disease.        For smallpox, , meaning approximately of people need to be vaccinated to prevent an outbreak.    For measles, , meaning approximately of people need to be vaccinated to prevent an outbreak.    This is open-ended. A typical answer may state that higher values of mean we need higher levels of vaccination. Answers may also investigate the reasons why it becomes so much more difficult to achieve higher levels of vaccination, especially on a global scale.      The investigations of asked you to compute values of for specific diseases. Another aspect of is that achieving this critical vaccination level means only that the infection curve, that is, the curve, falls from the beginning rather than rising first. However, this does not mean that there are no new infections after the initial cases. Explore this further in .    How Vaccination Level Affects Long Term Outcomes   focuses on understanding long-term model outcomes, with an emphasis on , the critical vaccine coverage value defined in . Another emphasis is on adjusting our Python code in order to make sure its output truly demonstrates the answers to the questions we are asking.    Investigate different outcomes for the following SIR model when the number of initial Susceptible and initial Removed people varies according to the value , where :   In the default Python code shown below, , , , the initial population values are , , and , and time runs from to days. When the value of changes in line 16, then the initial values and change accordingly, with and .  When the code is run, most population values are rounded to the nearest whole number, but the long-term value for is not rounded. To stop rounding other population values, you can delete the word round at appropriate places in the code. Begin by running the code, and then work through the steps below to make specific changes to the model.     When , how many people get this illness at some point in time, according to this model with its default values? To answer this: notice that everyone who reaches the R compartment, but was not there at the start, must have been sick at some time. We therefore subtract the initial number of people in the R compartment from the long-term value of to reach our answer. Also notice that we need to make sure to run the model long enough that becomes very close to . Only then will long-term be evaluated at a large enough value of for us to know the total number of people who become ill.  (Notice that there is a difference in this question between the exact outcome of an outbreak ending with infectious people and the approximated outcome of running the model simulation long enough for to get very close to . Since the curve approaches as an asymptote, looking out to many decimal places, we see that remains slightly above for a long while.)    Compute the value for this model, showing your work. Then run the Python code above, replacing the value of in line 16 with the value you computed for , and determine how many people get the illness at some point in time, according to this model, when .  As part of your response, show how you determined the long-term value of by demonstrating at least three different estimates for at different values of . For each of these estimates, state the value of as well, to give a sense of how small is becoming as you estimate the long-term total number of people in the Removed compartment.    Now think about how many people from the S compartment get the illness, even though . To answer this, subtract the long-term value of from the initial value . Notice that your answer tells you that that even when , additional people can contract the illness being studied. However, the Infectious population curve does not rise: it instead appears as level or decreasing.    Be sure to check, and be able to demonstrate to others, that the Infectious curve is truly not rising when . The default graph in the Python code for this activity makes it challenging to see the details of the curve because is so large relative to . To see just the curve, then, we can comment out the lines of code that show the and curves. Do this: place the symbol # at the start of each of those lines. Then evaluate the code and display a graph showing just the curve.        The given Python model, with , says the long-term value of is , and we have set the initial value to equal . At , the value of is approximately , so it is a good idea to let the simulation run longer to see how much is still changing. We therefore increase the value 50.0 in line 18. Trying , we see that , which is a quite small value for . At this time, . We therefore estimate that total people get this illness.  It is worth mentioning that there may be different estimated values for the number of people who get an illness, due to using different lengths of time for running the model simulation. There is not a universal standard for the length of the simulation's time span, or for what value of is considered close enough to zero. It is therefore helpful and important to state the start and end times used, along with other information about how you, as a modeler, believe you have determined a solid estimate.    The value of is , using to compute and then to compute . One option is to approximate as . The initial value means 2009 people start in the Removed compartment, due to being vaccinated. Making the value of larger may lead to estimates larger than 2040 for the long-term value of . Using one such estimate: if there are 2045 people eventually in the R compartment, then people got the illness. (Your answer should include at least three values of and , which will help to show a trend of how changes as becomes larger.)    In a model simulation where , we see that . Carrying out this simulation long enough that the long-term value is , we see that the long-term value of is . This means that people began in the S compartment but did not stay there. In other words, 35 people acquired the illness.    The first and third lines after #Plotting commands are below should be commented out, that is, the symbol # should be placed at the start of lines 33 and 35. Then run the code block again to produce just the graph.      We now pause our modeling for a moment to provide some extra vocabulary and commentary on vaccines. When vaccines are studied and approved for use, researchers demonstrate their efficacy and effectiveness . Both terms consider how many people within a population of vaccinated individuals get a disease, compared with how many people within a comparable population of unvaccinated individuals get the same disease. If, for instance, fewer people in the vaccinated population get the disease, then we say the vaccine has an efficacy or effectiveness of . (Notice what the does NOT mean: it does NOT mean that only of people are protected by the vaccine, or that the vaccine only works  of the time.) The word efficacy specifies that the comparison of vaccinated and unvaccinated populations happens within a clinical trial. The word effectiveness indicates that the vaccine is being studied for populations in the real world. While clinical trials do include a range of different people, effectiveness often differs from efficacy.  Nice explanations of the meanings of efficacy and effectiveness can be found at the Vaccine efficacy, effectiveness and protection page from the World Health Organization.  Vaccine outcomes extend beyond affecting how many people get an illness. One common outcome is reducing the intensity of illness in individuals who have been vaccinated, yet who still become sick. This and other outcomes can be included in models, however such models tend to be more detailed than those we are studying right now.  Much of this section has focused on vaccines, which are a valuable element of compartmental models. Another important aspect of disease spread is the incubation period of an illness. The SEIR model, described in , incorporates this incubation period.    A vaccine for measles was first licensed in the United States in 1963. Before that, nearly all U.S. children got measles by the time they were 15 years old. Due to the vaccine, by the year 2000, the U.S. eliminated measles as a disease that could spread continuously. Since then, measles in the U.S. occurs only occasionally, typically when a person travels elsewhere, gets measles, and returns to the U.S. with the ability to infect others. These facts are from the Centers for Disease Control and Prevention (CDC) page on History of Measles .  Measles lends itself to especially demonstrative mathematical models for two reasons: (1) measles is exceptionally contagious, and (2) the vaccine for measles has very high efficacy and effectiveness, with immunity that lasts a lifetime.    As described in , the value of for measles is approximately 12 to 18. Let's suppose a specific outbreak of measles has . The CDC says that measles is contagious from four days before symptoms appear until four days after, meaning about 8 total days. These numbers come from the Centers for Disease Control and Prevention (CDC) page on How Measles Spreads . For this reason, set . Let us suppose this outbreak occurs in a small, close-knit community of 500 people, where some percentage of people have been vaccinated and one person initially has the measles. Therefore , , . Set up an SIR model, as shown below, for this outbreak:   Compute all parameter values for the model, using the information provided in this exercise, along with equation , to compute the value of for this model.      Use your model to test the edge cases of vaccination: what happens to the population if there is no vaccination at all ( ), and what happens if everyone in the community is vaccinated ( )? Determine how many people ultimately get measles in each modeling scenario. Indicate, also, how much time the model needs to run in order to determine how many people get measles in each scenario. The model may need to run for different lengths of time at different vaccination levels.  Notice that there is not a unique answer to how long to run the model. Different people may use different final times. The key here is to demonstrate your process for determining a final time. Your process should include supporting the values you compute as long-term outcomes by showing evidence that the simulation values are not changing dramatically after the amount of time you have run the simulation.    Now investigate varying levels of vaccination. What happens if , , , or ? Determine long-term outcomes in each case, that is, determine how many people ultimately get measles in each modeling scenario. Indicate, also, how much time the model needs to run in order to determine how many people get measles in each scenario. The model may need to run longer when a greater percentage of the population is vaccinated.    Explore further the measles model from For Further Thought, Exercise 1, in this chapter. Use the same values for , , and as you computed in Exercise 1. Use the same system of differential equations as well, and continue to set , , .   In many communities in the U.S., the percentage of vaccinated people is around or . See the Centers for Disease Control and Prevention (CDC) page on Measles, Mumps, and Rubella . At each of these levels, how many people will get measles in the long run, according to your model?  Be sure, in each case, to run your model long enough that the number of Infectious people has dropped close to , so that the long-term number of people in the Removed compartment seems to remain constant.    Compute for this model of measles, showing your steps. Simulate the model using at least two values of above and at least two values of below . (Be sure that all values of are between and .) For each value of comment on the number of people who begin in the S compartment and remain in the S compartment after the number of Infectious people has dropped to zero (or very close to zero in a simulation).    At each value of for which you simulated the model in part (b), compute the fraction of the initial Susceptible population that acquires the illness. To do this, first determine how many of the initial Susceptible population eventually got the illness by subtracting the long-term number of Susceptibles from the initial number of Susceptibles, and then divide by the initial number of Susceptible people. Here is a formula to help you do this:     Write about your results when changing the vaccination rate. Describe how much the number of measles cases, or the fraction of people who get measles, can change in response to what may appear to be small changes in the vaccination rate, especially when the vaccination rate is close to the value of .     "
},
{
  "id": "intro-vaccines-1",
  "level": "2",
  "url": "ch-vaccines.html#intro-vaccines-1",
  "type": "Goals",
  "number": "",
  "title": "",
  "body": "   Explore the role of public health strategies in managing disease spread, using compartmental models    Strengthen understanding of the meaning of , which involves a single Infectious person in an otherwise entirely Susceptible population    Determine the threshold for what percentage of vaccine coverage reduces transmission enough so that the number of Infectious cases does not rise    "
},
{
  "id": "expl-activity-vaccines",
  "level": "2",
  "url": "ch-vaccines.html#expl-activity-vaccines",
  "type": "Exploration",
  "number": "6.1",
  "title": "Reducing New Infections.",
  "body": " Reducing New Infections   This exploration seeks to reduce the number of new infections in the SIR model from by changing the initial numbers of people in the Susceptible and Removed compartments. For reference, here are the equations of the model:   This change to the model reflects a concept we have observed in multiple chapters so far, from the Zombie Game to the definition of as applying to a population that is nearly entirely Susceptible. In these contexts, we have seen that as the number of Susceptible people falls over the course of an outbreak, the outbreak can slow down and eventually stop. We therefore try starting our model simulation by using the terms and to split the initial population across the S and R compartments.  Work through the parts of this exploration to build understanding of and and to determine the possible numerical values for and .    Read the Python code below. In line 17, the initial conditions , , and set but use and to split up the rest of the population between the S and R compartments. We restrict the possible values of so that it must be true that .  After reading and evaluating the Python code, respond to the questions that follow.     Given the restriction that , what is the range of possible values for the term ?    Notice that we set and . Try letting and . In each case, compute how many Susceptible and Removed people we would have at the start of the simulation. For each of these values of , what is the value of ?      These questions help us see trends in the model's behavior when we change . Think logically and mathematically about your answers, and use the Python code freely to experiment with . To see the full scope of model behavior as you change in the SIR model, you may wish to change the time range, remove the # sign in lines 23 or 25 so you can see the graphs of the Susceptible or Removed populations, or make other changes to the code.    Compared with starting the model with and , what sorts of effects do you see when the value of is relatively small, that is, is just above ? In contrast, what sorts of effects do you see when the value of is relatively large, that is, is just below ?    What can you say about the boundary values of ? That is, what sorts of effects do you see on the SIR model when or when ?    As the value of increases from to , passing through several values in between, what observations can you make about the output of the SIR model?     "
},
{
  "id": "sec-determining-a-threshold-vaccine-level-3",
  "level": "2",
  "url": "ch-vaccines.html#sec-determining-a-threshold-vaccine-level-3",
  "type": "Paragraph (with a defined term)",
  "number": "",
  "title": "",
  "body": "effective reproduction number "
},
{
  "id": "sec-determining-a-threshold-vaccine-level-10",
  "level": "2",
  "url": "ch-vaccines.html#sec-determining-a-threshold-vaccine-level-10",
  "type": "Paragraph (with a defined term)",
  "number": "",
  "title": "",
  "body": "critical value "
},
{
  "id": "activity-pcrit",
  "level": "2",
  "url": "ch-vaccines.html#activity-pcrit",
  "type": "Activity",
  "number": "6.2",
  "title": "",
  "body": "  In this activity, we explore through the comparison of two historically widespread diseases: smallpox and measles.    We begin by examining smallpox. Estimates for the value of for smallpox range from 3.5 to 6. Estimates that come from the paper Transmission potential of smallpox in contemporary populations by Raymond Gani and Steve Leach, published in the journal Nature on 13 December 2001. Given this range of values, what is the range of values required in order to reduce the value of for smallpox so that ? What percentage of people would need to be vaccinated, using the values of you computed, to prevent a smallpox outbreak, that is, to cause ?    Next, we examine measles. Many estimates for the value of for measles range from 12 to 18. The paper The basic reproduction number (R0) of measles: a systematic review , by Fiona M Guerra, Shelly Bolotin, Gillian Lim, Jane Heffernan, Shelley L Deeks, Ye Li, and Natasha S Crowcroft, states that is often approximated as , while also stating that the actual range of for measles varies even more. This paper was published in The Lancet Infectious Diseases on 27 July 2017. Given this range of values, what is the range of values required in order to reduce the value of for measles so that ? What percentage of people would need to be vaccinated, using the values of you computed, to prevent a measles outbreak, that is, to cause ?    Smallpox has been eliminated: the last natural occurrence was in 1977, and in 1980, the World Health Organization stated that smallpox had been globally eradicated. Measles has not been eliminated: widespread vaccination has reduced cases drastically in many parts of the world, but measles continues to circulate. Given your results in parts 1 and 2 of this activity about the values of for smallpox and measles, write a few sentences about how the value of increases or decreases the feasibility of vaccinating enough people to eliminate a disease.        For smallpox, , meaning approximately of people need to be vaccinated to prevent an outbreak.    For measles, , meaning approximately of people need to be vaccinated to prevent an outbreak.    This is open-ended. A typical answer may state that higher values of mean we need higher levels of vaccination. Answers may also investigate the reasons why it becomes so much more difficult to achieve higher levels of vaccination, especially on a global scale.     "
},
{
  "id": "activity-pcrit2",
  "level": "2",
  "url": "ch-vaccines.html#activity-pcrit2",
  "type": "Activity",
  "number": "6.3",
  "title": "",
  "body": "  Investigate different outcomes for the following SIR model when the number of initial Susceptible and initial Removed people varies according to the value , where :   In the default Python code shown below, , , , the initial population values are , , and , and time runs from to days. When the value of changes in line 16, then the initial values and change accordingly, with and .  When the code is run, most population values are rounded to the nearest whole number, but the long-term value for is not rounded. To stop rounding other population values, you can delete the word round at appropriate places in the code. Begin by running the code, and then work through the steps below to make specific changes to the model.     When , how many people get this illness at some point in time, according to this model with its default values? To answer this: notice that everyone who reaches the R compartment, but was not there at the start, must have been sick at some time. We therefore subtract the initial number of people in the R compartment from the long-term value of to reach our answer. Also notice that we need to make sure to run the model long enough that becomes very close to . Only then will long-term be evaluated at a large enough value of for us to know the total number of people who become ill.  (Notice that there is a difference in this question between the exact outcome of an outbreak ending with infectious people and the approximated outcome of running the model simulation long enough for to get very close to . Since the curve approaches as an asymptote, looking out to many decimal places, we see that remains slightly above for a long while.)    Compute the value for this model, showing your work. Then run the Python code above, replacing the value of in line 16 with the value you computed for , and determine how many people get the illness at some point in time, according to this model, when .  As part of your response, show how you determined the long-term value of by demonstrating at least three different estimates for at different values of . For each of these estimates, state the value of as well, to give a sense of how small is becoming as you estimate the long-term total number of people in the Removed compartment.    Now think about how many people from the S compartment get the illness, even though . To answer this, subtract the long-term value of from the initial value . Notice that your answer tells you that that even when , additional people can contract the illness being studied. However, the Infectious population curve does not rise: it instead appears as level or decreasing.    Be sure to check, and be able to demonstrate to others, that the Infectious curve is truly not rising when . The default graph in the Python code for this activity makes it challenging to see the details of the curve because is so large relative to . To see just the curve, then, we can comment out the lines of code that show the and curves. Do this: place the symbol # at the start of each of those lines. Then evaluate the code and display a graph showing just the curve.        The given Python model, with , says the long-term value of is , and we have set the initial value to equal . At , the value of is approximately , so it is a good idea to let the simulation run longer to see how much is still changing. We therefore increase the value 50.0 in line 18. Trying , we see that , which is a quite small value for . At this time, . We therefore estimate that total people get this illness.  It is worth mentioning that there may be different estimated values for the number of people who get an illness, due to using different lengths of time for running the model simulation. There is not a universal standard for the length of the simulation's time span, or for what value of is considered close enough to zero. It is therefore helpful and important to state the start and end times used, along with other information about how you, as a modeler, believe you have determined a solid estimate.    The value of is , using to compute and then to compute . One option is to approximate as . The initial value means 2009 people start in the Removed compartment, due to being vaccinated. Making the value of larger may lead to estimates larger than 2040 for the long-term value of . Using one such estimate: if there are 2045 people eventually in the R compartment, then people got the illness. (Your answer should include at least three values of and , which will help to show a trend of how changes as becomes larger.)    In a model simulation where , we see that . Carrying out this simulation long enough that the long-term value is , we see that the long-term value of is . This means that people began in the S compartment but did not stay there. In other words, 35 people acquired the illness.    The first and third lines after #Plotting commands are below should be commented out, that is, the symbol # should be placed at the start of lines 33 and 35. Then run the code block again to produce just the graph.     "
},
{
  "id": "sec-how-vaccination-level-affects-long-term-outcomes-4",
  "level": "2",
  "url": "ch-vaccines.html#sec-how-vaccination-level-affects-long-term-outcomes-4",
  "type": "Paragraph (with a defined term)",
  "number": "",
  "title": "",
  "body": "efficacy effectiveness "
},
{
  "id": "exercises-ch-vaccines-1",
  "level": "2",
  "url": "ch-vaccines.html#exercises-ch-vaccines-1",
  "type": "Exercise",
  "number": "6.3.1",
  "title": "",
  "body": "A vaccine for measles was first licensed in the United States in 1963. Before that, nearly all U.S. children got measles by the time they were 15 years old. Due to the vaccine, by the year 2000, the U.S. eliminated measles as a disease that could spread continuously. Since then, measles in the U.S. occurs only occasionally, typically when a person travels elsewhere, gets measles, and returns to the U.S. with the ability to infect others. These facts are from the Centers for Disease Control and Prevention (CDC) page on History of Measles .  Measles lends itself to especially demonstrative mathematical models for two reasons: (1) measles is exceptionally contagious, and (2) the vaccine for measles has very high efficacy and effectiveness, with immunity that lasts a lifetime.    As described in , the value of for measles is approximately 12 to 18. Let's suppose a specific outbreak of measles has . The CDC says that measles is contagious from four days before symptoms appear until four days after, meaning about 8 total days. These numbers come from the Centers for Disease Control and Prevention (CDC) page on How Measles Spreads . For this reason, set . Let us suppose this outbreak occurs in a small, close-knit community of 500 people, where some percentage of people have been vaccinated and one person initially has the measles. Therefore , , . Set up an SIR model, as shown below, for this outbreak:   Compute all parameter values for the model, using the information provided in this exercise, along with equation , to compute the value of for this model.      Use your model to test the edge cases of vaccination: what happens to the population if there is no vaccination at all ( ), and what happens if everyone in the community is vaccinated ( )? Determine how many people ultimately get measles in each modeling scenario. Indicate, also, how much time the model needs to run in order to determine how many people get measles in each scenario. The model may need to run for different lengths of time at different vaccination levels.  Notice that there is not a unique answer to how long to run the model. Different people may use different final times. The key here is to demonstrate your process for determining a final time. Your process should include supporting the values you compute as long-term outcomes by showing evidence that the simulation values are not changing dramatically after the amount of time you have run the simulation.    Now investigate varying levels of vaccination. What happens if , , , or ? Determine long-term outcomes in each case, that is, determine how many people ultimately get measles in each modeling scenario. Indicate, also, how much time the model needs to run in order to determine how many people get measles in each scenario. The model may need to run longer when a greater percentage of the population is vaccinated.   "
},
{
  "id": "exercises-ch-vaccines-2",
  "level": "2",
  "url": "ch-vaccines.html#exercises-ch-vaccines-2",
  "type": "Exercise",
  "number": "6.3.2",
  "title": "",
  "body": "Explore further the measles model from For Further Thought, Exercise 1, in this chapter. Use the same values for , , and as you computed in Exercise 1. Use the same system of differential equations as well, and continue to set , , .   In many communities in the U.S., the percentage of vaccinated people is around or . See the Centers for Disease Control and Prevention (CDC) page on Measles, Mumps, and Rubella . At each of these levels, how many people will get measles in the long run, according to your model?  Be sure, in each case, to run your model long enough that the number of Infectious people has dropped close to , so that the long-term number of people in the Removed compartment seems to remain constant.    Compute for this model of measles, showing your steps. Simulate the model using at least two values of above and at least two values of below . (Be sure that all values of are between and .) For each value of comment on the number of people who begin in the S compartment and remain in the S compartment after the number of Infectious people has dropped to zero (or very close to zero in a simulation).    At each value of for which you simulated the model in part (b), compute the fraction of the initial Susceptible population that acquires the illness. To do this, first determine how many of the initial Susceptible population eventually got the illness by subtracting the long-term number of Susceptibles from the initial number of Susceptibles, and then divide by the initial number of Susceptible people. Here is a formula to help you do this:     Write about your results when changing the vaccination rate. Describe how much the number of measles cases, or the fraction of people who get measles, can change in response to what may appear to be small changes in the vaccination rate, especially when the vaccination rate is close to the value of .   "
},
{
  "id": "ch-incubation-periods",
  "level": "1",
  "url": "ch-incubation-periods.html",
  "type": "Chapter",
  "number": "7",
  "title": "Incubation Periods",
  "body": " Incubation Periods      Introduce the SEIR model, where E stands for Exposed-and-incubating , meaning people in the E compartment have already contracted an illness but have not yet become contagious to others.    Learn to make the timelines of models more realistic by incorporating disease incubation periods.    Gain practice combining multiple variations, such as both vaccines and incubation periods, into a single model of disease spread.      As we continue to build modeling skills, two goals frequently motivate us. One goal is to improve a model's fit to data (within reason, as we discuss more in later chapters). A second goal is to be able to create models that incorporate the dynamics of how a disease spreads in a population. It turns out that including a disease's incubation period can help to address both these goals.  In this chapter, we experiment with the incubation period of a disease. Early on, we develop an understanding of how to build the incubation period into a model. Throughout, we devote attention to when and why we might want to include the incubation period in a model... or not include it.  To start, consider in an outbreak of mumps, which can have an incubation period of two weeks or more.   Considering an Incubation Period   The graph below shows data from a mumps outbreak at Bates College in the fall semester of 2016. Specifically, the data indicate numbers of students who have had mumps in this outbreak, counting them when they cease to be sick, to give values corresponding to the Removed compartment of a model. The curve displayed on the graph is the curve for the Removed compartment population in a typical SIR model that starts at the time when the first student would likely have first caught the mumps virus.   Data, and an SIR model solution, for the Removed students (those who have recovered from mumps) in a campus outbreak   Data points showing students recovering from mumps across time, and a curve showing the solution for the Removed compartment of an SIR model for mumps      Use to respond to the following questions.    In what ways does the SIR model's Removed curve do well at representing the values shown by the data points?    In what ways does the SIR model's Removed curve do less well at representing the values shown by the data points?      Now suppose we build a second model. In this model, we account for the lengthy incubation period of mumps, which can be two weeks or more. The solution curve for the Removed compartment of this model is shown in alongside the same mumps data set described earlier in this Exploration.   Data, and a model solution that includes an incubation period, for the Removed students (those who have recovered from mumps) in a campus outbreak   Data points showing students recovering from mumps across time, and a curve showing the solution for the Removed compartment of a mumps model that includes an incubation period      In what ways does the Removed curve do well at representing the values shown by the data points, in this model that includes an incubation period?    In what ways does the Removed curve do less well at representing the values shown by the data points, in this model that includes an incubation period?    Consider how this model with incubation period fits the data points, and consider how the SIR model at the start of this Exploration fits the data points. Compare your observations of the two models and how they fit the data points. You can describe advantages and disadvantages of each model without selecting either as your preferred model, or you can select one model as fitting better, explaining how you made your selection.        Including an Incubation Period: The SEIR Model  We introduce here the SEIR model . The new compartment, E, stands for Exposed-and-incubating . The population therefore represents people who have contracted an illness, but who have not yet entered the compartment, which in many models means that they are not yet contagious. As the name SEIR suggests, this model has four compartments.  Now that we have worked with the SI and SIR models, you may well have ideas in mind for how the SEIR model should look. Try these in .    How do you believe the SEIR model should appear? Demonstrate your ideas in the following ways:    Draw the SEIR model as a compartmental diagram. Carefully label each compartment and each arrow. Do not include vaccination in this model.    Write the differential equations of the SEIR model. Do not include vaccination.    Compare the compartmental diagram you drew with the differential equations you wrote. Are they compatible with each other? That is, do they describe the same model, with the same flow of people through compartments?        One possible compartmental diagram appears below.   Compartmental diagram of a model of HIV\/AIDS, using descriptions instead of formulas for each arrow   (Write this)     One key aspect of this diagram is that the term appears on the arrow from to . In the SIR model, the arrow from to involved exactly the compartments at its beginning and end, but with the SEIR model, there is a different pattern.  Notice the arrow labeled . The flow out of the E compartment depends only on the population and the amount of time typically spent as Exposed-and-incubating, similar to how the flow out of the I compartment in the SIR and SEIR models depends only on the population and the amount of time spent as Infectious. An important comment here is that this answer key uses the parameter for the rate governing the flow out of the E compartment, but there is no reason at all that you should have chosen the Greek letter for this rate! Whatever letter you chose, as long as it is not a letter already in use elsewhere in the model, is an excellent choice.    The following differential equations represent the SEIR model:   Your answer should look similar, but you may have selected a different parameter name instead of .    Your answers for the first two parts should definitely be compatible. If they are not, whether in this activity or ever in your mathematical modeling career, then that is a time to re-evaluate your work. This is one of many ways we can double-check our modeling work: when we describe a model in different formats, such as in a diagram and by means of equations, the different formats should agree with each other.      Now that you have built an SEIR model in , you can explore its compartmental diagram and differential equations. To start, notice that we can estimate the value of similarly to how we estimated the value of in and , using the average incubation time for a disease:   or:   You may notice with the SEIR model that including the E compartment can change the way we interpret compartment S. So far, people have moved out of the S compartment when they become contagious. At this time, these people have transitioned to compartment I, meaning they are Infectious and can spread illness to others. However, we have not addressed that some of the people in the S compartment may have already contracted an illness but not yet become contagious. If this is only a small number of people at a time, perhaps because the incubation period for a illness is short, then the SIR model may provide a good approximation of real-life events. However, when a larger fraction of the S population is affected simultaneously, most commonly because of a long incubation period for the illness, then including compartment E helps to better represent the timeline of real-life events.  Next, it is helpful with the newly introduced SEIR model to envision how solutions should look, understand how the value of the new parameter affects solutions, and simply play around with the equations and different parameter values so that you can build your intuition for this model. Begin these investigations in .    This activity provides a venue for you to play with the SEIR model. Begin by thinking through how you expect SEIR solution curves to appear, and then use Python code to create these solutions and see how they respond to changing parameters.    Do a sign analysis of the SEIR model. Is it possible for the , , or curves in the SEIR model to behave in any ways that are fundamentally different than how these curves behave in the SIR model? In particular: within we discussed the ways these three curves in the SIR model could fall, or rise and fall, or rise. Can the , , or curves behave any differently in the SEIR model? And what does sign analysis tell you about how the model can possibly behave?    Run the Python code below, and observe the curve . Does it behave the way you predicted in the first part of this Activity? (It should.)  Next, make a note of the long-term number of people who become sick in this model. Then make larger and note the newly computed long-term number of people who become sick in the model. Try this for multiple values of . What pattern(s) do you observe?    Continue the Python investigation of different values of . Start with , then run the model with , , and so on, up to . Describe how the curve changes as goes through these changes. Notice that you can focus in on the curve by commenting out the other three solution curves, similarly to how we did in .         As in the SIR model: the curve can only fall or remain level. The curve can both rise and fall, and can remain level. The curve can only rise or remain level.  Sign analysis of the SEIR model shows that the curve has the possibilities of both rising and falling, as well as remaining level.    You should observe that regardless of the value of , the long-term value of is 1960, given the other default values in the Python code. There are many additional observations you can make about the dynamics of how the population reaches its long-term values, and the next part of this Activity addresses several such observations.    As increases, the curve tends to reach lower and lower peak values, and these peak values occur at earlier times . Sample curves, with their values, appear in the graph below.   Possible curves for the SEIR model, with varying   Solution curves for the E compartment in the SEIR model, each with a different value of kappa, ranging from kappa = 0.1 to kappa = 1.0. As kappa increases, the curves have lower peaks, and the peaks occur at earlier times        For readers including on computing , be sure to independently work through the steps for computing in the SEIR model. The answer appears below, yet completing the steps and confirming your results lets you gain practice. This practice will help you be sure you understand the steps used to compute , before trying to compute on a future model where no answer is given.  The resulting formula is:   The formula in can be rearranged in order to use information about , , and to compute a reasonable range of values in a model. We have seen how to estimate and in , , , and . We therefore have the ability to determine the parameter values for an SEIR model of a specific outbreak. Try this in .    Practice with an Incubation Model  You have been increasing your ability to represent incubation and your ability to build a model using real data about a specific disease. guides you in setting up such a model.    We are now ready to set up a compartmental model for whooping cough, also called pertussis, in a fictional town having 10,000 residents, using information from the New York State Pertussis or Whooping Cough Fact Sheet . The fact sheet says that the first stage of pertussis, in which symptoms are similar to those of a cold, lasts one to two weeks. Stage two, which includes the severe cough that gave pertussis the name whooping cough , lasts one to two months. The fact sheet also says that pertussis is contagious from the time cold symptoms appear until about three weeks after severe cough starts. The incubation period for pertussis is most often seven to ten days: the incubation period can sometimes be longer, but we focus on the most common lengths of time. We will not include the use of antibiotics in this model.    Use the SEIR model below. Determine as many parameter values as you can, using the information described from the fact sheet. In this model, assume that time is measured in days. It is appropriate for some parameter values to be a range of numbers, rather than a single number, since the fact sheet information includes ranges of time:     You should now have determined the range of values for all parameters except . Here is extra information: the value of for pertussis has been estimated at anywhere from 5.5 to 17, depending on the outbreak in which was measured. A nice summary of studies of for pertussis appears in Pertussis: Microbiology, Disease, Treatment, and Prevention by Paul E. Kilgore, Abdulbaset M. Salim, Marcus J. Zervos, Heinz-Josef Schmitt, published in Clinical Microbiology Reviews in on March 30, 2016. Use this range of values of , along with the parameters you already determined and the formula in for , to solve for .    Run the Python code below, making sure to first enter the values from the parameter ranges you have computed for , , and . (These parameter values are set to 0 in the code, so visualizing the model requires you to enter the values you determine.) Notice that the code will compute the appropriate value of , using the total population of 10,000 and the values you assign to and . Make observations about the outcomes of the model. Be sure to adjust the length of time the model runs, or to show just one or two solution curves at a time, or to otherwise alter the code so that you can best see and comment on the results of the model.         The incubation period is usually 7 to 10 days, so is in the range . (The incubation period can be shorter or longer, and if you included this information, you will have a wider range of values for . This is also valid.)  Pertussis begins to be contagious when cold symptoms appear, and the phase for cold symptoms is one to two weeks. Pertussis is most contagious for up to three weeks after the intense coughing phase begins. Adding these phases together, pertussis is contagious, or most contagious, for four to five weeks, meaning 28 to 35 days. So is in the range . (Saying up to three weeks suggests people may not be contagious the full three weeks. And pertussis may be contagious, at a lower level, more than three weeks after severe cough begins. You may have built either of these facts into your answer, which may lead to a different answer.)    Rearranging leads to . Using the range of values and , along with , gives the range of values . Your range of values should be based on the parameter values you determined.    This is open-ended. Make as many observations as you can.         Redo , but convert the time unit to weeks instead of days . To make this change, do the following.   Compute the number of weeks for the incubation period of pertussis. This should be . Then compute for the model in which the time unit is weeks. This result should be the value of you obtained in , multiplied by .    Similarly, compute the value of used to model the outbreak from in terms of weeks. Your result should equal the value of you obtained in , multiplied by .    For the graphs to appear the same, whether the time unit is days or weeks, the horizontal axis should be adjusted to the correct time unit. To be precise, when the time unit is weeks, the length of the time axis should equal the length of the time axis in . Or, to have a similar but not identical time axis, allow the length of the time axis to equal the nearest number of weeks. For instance, the default time length in is 365 days, which is one year. One year has approximately, but not exactly, 52 weeks. Using 52 weeks in this exercise will give a very similar graph to the 365-day graph from .  With this approach in mind: use parameters you have computed to produce two graphs, one in terms of days, and one in terms of weeks, for the the outbreak in . For clarity: update the label for the time axis in each graph to say days or weeks instead of time , to make clear which time unit is being used in the graph.    Explain mathematically why the unit conversions described in parts (a.), (b.), and (c.) are the correct conversions for converting the model's time scale from days to weeks.    Update to include vaccine. Include the multiplier where appropriate, adapting our work from and to the SEIR model. In this exercise, we do not address vaccine efficacy or effectiveness, assuming instead a effective vaccine. In the following exercise, number 3 in this section, we include the actual effectiveness of pertussis vaccines.   Compute for pertussis, using the information that for pertussis can be between 5.5 and 17, depending on the outbreak. Your results for will be a range of values.    Adapt the Python code from to run the model with a vaccine level at least as large as . To include vaccine, multiply each term involving by . Adjust the time scale, show just some of the solution curve graphs, or make any other changes needed, to best see the long-term outcome of the model. Write your observations of the outcomes of this model, and compare and contrast with the no-vaccine model.    Do some online research to determine the percentage of children in your area, or percentage of all people in your area, who are vaccinated against pertussis. Your area can refer to your city, state, province, country, or whatever other region you choose. Run the Python code again, using this percentage for vaccination, and citing the resources in which you found the percentage. Adjust the code as needed so you can best see the results, and describe your findings.    We make one more update to the pertussis model in and exercise 2 in this section, addressing vaccine effectiveness. Our inclusion of the multiplier assumed that vaccination had efficacy or effectiveness. However, research into pertussis vaccines shows that the level of vaccine efficacy or effectiveness can be significantly less. There is a wide range of values, depending on the specific vaccine used, the location in the world, and the years of study. For this exercise, we use a range of vaccine effectiveness. This range of vaccine effectiveness level comes from the Centers for Disease Control and Prevention . The range is specific to the DTaP vaccine, in Europe and the Americas, in studies in or after 1991.    Rewrite your model as below, where remains the percentage of people vaccinated, and is the vaccine effectiveness percentage. Notice that we require and :   Compute the value of for this model when . What percentage of people must be vaccinated in order to achieve when vaccine is effective? What can you say about the percentage of vaccinated people needed in order to achieve when vaccine is effective?    In approximately 2019, researchers found that the whooping cough vaccine had become less effective over time, for a variety of reasons. They investigated the reasons and made changes. Read about these events from at least three sources, including general news sources as well as government-led websites, and report on your findings. Cite your sources. In your report, describe the role of of vaccine effectiveness as well as the role of the percentage of people vaccinated in a population.     "
},
{
  "id": "intro-incubation-periods-1",
  "level": "2",
  "url": "ch-incubation-periods.html#intro-incubation-periods-1",
  "type": "Goals",
  "number": "",
  "title": "",
  "body": "   Introduce the SEIR model, where E stands for Exposed-and-incubating , meaning people in the E compartment have already contracted an illness but have not yet become contagious to others.    Learn to make the timelines of models more realistic by incorporating disease incubation periods.    Gain practice combining multiple variations, such as both vaccines and incubation periods, into a single model of disease spread.     "
},
{
  "id": "expl-activity-incubation",
  "level": "2",
  "url": "ch-incubation-periods.html#expl-activity-incubation",
  "type": "Exploration",
  "number": "7.1",
  "title": "Considering an Incubation Period.",
  "body": " Considering an Incubation Period   The graph below shows data from a mumps outbreak at Bates College in the fall semester of 2016. Specifically, the data indicate numbers of students who have had mumps in this outbreak, counting them when they cease to be sick, to give values corresponding to the Removed compartment of a model. The curve displayed on the graph is the curve for the Removed compartment population in a typical SIR model that starts at the time when the first student would likely have first caught the mumps virus.   Data, and an SIR model solution, for the Removed students (those who have recovered from mumps) in a campus outbreak   Data points showing students recovering from mumps across time, and a curve showing the solution for the Removed compartment of an SIR model for mumps      Use to respond to the following questions.    In what ways does the SIR model's Removed curve do well at representing the values shown by the data points?    In what ways does the SIR model's Removed curve do less well at representing the values shown by the data points?      Now suppose we build a second model. In this model, we account for the lengthy incubation period of mumps, which can be two weeks or more. The solution curve for the Removed compartment of this model is shown in alongside the same mumps data set described earlier in this Exploration.   Data, and a model solution that includes an incubation period, for the Removed students (those who have recovered from mumps) in a campus outbreak   Data points showing students recovering from mumps across time, and a curve showing the solution for the Removed compartment of a mumps model that includes an incubation period      In what ways does the Removed curve do well at representing the values shown by the data points, in this model that includes an incubation period?    In what ways does the Removed curve do less well at representing the values shown by the data points, in this model that includes an incubation period?    Consider how this model with incubation period fits the data points, and consider how the SIR model at the start of this Exploration fits the data points. Compare your observations of the two models and how they fit the data points. You can describe advantages and disadvantages of each model without selecting either as your preferred model, or you can select one model as fitting better, explaining how you made your selection.     "
},
{
  "id": "sec-including-an-incubation-period-the-seir-model-2",
  "level": "2",
  "url": "ch-incubation-periods.html#sec-including-an-incubation-period-the-seir-model-2",
  "type": "Paragraph (with a defined term)",
  "number": "",
  "title": "",
  "body": "SEIR model "
},
{
  "id": "activity-seir-model-intro",
  "level": "2",
  "url": "ch-incubation-periods.html#activity-seir-model-intro",
  "type": "Activity",
  "number": "7.2",
  "title": "",
  "body": "  How do you believe the SEIR model should appear? Demonstrate your ideas in the following ways:    Draw the SEIR model as a compartmental diagram. Carefully label each compartment and each arrow. Do not include vaccination in this model.    Write the differential equations of the SEIR model. Do not include vaccination.    Compare the compartmental diagram you drew with the differential equations you wrote. Are they compatible with each other? That is, do they describe the same model, with the same flow of people through compartments?        One possible compartmental diagram appears below.   Compartmental diagram of a model of HIV\/AIDS, using descriptions instead of formulas for each arrow   (Write this)     One key aspect of this diagram is that the term appears on the arrow from to . In the SIR model, the arrow from to involved exactly the compartments at its beginning and end, but with the SEIR model, there is a different pattern.  Notice the arrow labeled . The flow out of the E compartment depends only on the population and the amount of time typically spent as Exposed-and-incubating, similar to how the flow out of the I compartment in the SIR and SEIR models depends only on the population and the amount of time spent as Infectious. An important comment here is that this answer key uses the parameter for the rate governing the flow out of the E compartment, but there is no reason at all that you should have chosen the Greek letter for this rate! Whatever letter you chose, as long as it is not a letter already in use elsewhere in the model, is an excellent choice.    The following differential equations represent the SEIR model:   Your answer should look similar, but you may have selected a different parameter name instead of .    Your answers for the first two parts should definitely be compatible. If they are not, whether in this activity or ever in your mathematical modeling career, then that is a time to re-evaluate your work. This is one of many ways we can double-check our modeling work: when we describe a model in different formats, such as in a diagram and by means of equations, the different formats should agree with each other.     "
},
{
  "id": "activity-seir-model-play-with-kappa",
  "level": "2",
  "url": "ch-incubation-periods.html#activity-seir-model-play-with-kappa",
  "type": "Activity",
  "number": "7.3",
  "title": "",
  "body": "  This activity provides a venue for you to play with the SEIR model. Begin by thinking through how you expect SEIR solution curves to appear, and then use Python code to create these solutions and see how they respond to changing parameters.    Do a sign analysis of the SEIR model. Is it possible for the , , or curves in the SEIR model to behave in any ways that are fundamentally different than how these curves behave in the SIR model? In particular: within we discussed the ways these three curves in the SIR model could fall, or rise and fall, or rise. Can the , , or curves behave any differently in the SEIR model? And what does sign analysis tell you about how the model can possibly behave?    Run the Python code below, and observe the curve . Does it behave the way you predicted in the first part of this Activity? (It should.)  Next, make a note of the long-term number of people who become sick in this model. Then make larger and note the newly computed long-term number of people who become sick in the model. Try this for multiple values of . What pattern(s) do you observe?    Continue the Python investigation of different values of . Start with , then run the model with , , and so on, up to . Describe how the curve changes as goes through these changes. Notice that you can focus in on the curve by commenting out the other three solution curves, similarly to how we did in .         As in the SIR model: the curve can only fall or remain level. The curve can both rise and fall, and can remain level. The curve can only rise or remain level.  Sign analysis of the SEIR model shows that the curve has the possibilities of both rising and falling, as well as remaining level.    You should observe that regardless of the value of , the long-term value of is 1960, given the other default values in the Python code. There are many additional observations you can make about the dynamics of how the population reaches its long-term values, and the next part of this Activity addresses several such observations.    As increases, the curve tends to reach lower and lower peak values, and these peak values occur at earlier times . Sample curves, with their values, appear in the graph below.   Possible curves for the SEIR model, with varying   Solution curves for the E compartment in the SEIR model, each with a different value of kappa, ranging from kappa = 0.1 to kappa = 1.0. As kappa increases, the curves have lower peaks, and the peaks occur at earlier times       "
},
{
  "id": "activity-seir-model-pertussis-setup",
  "level": "2",
  "url": "ch-incubation-periods.html#activity-seir-model-pertussis-setup",
  "type": "Activity",
  "number": "7.4",
  "title": "",
  "body": "  We are now ready to set up a compartmental model for whooping cough, also called pertussis, in a fictional town having 10,000 residents, using information from the New York State Pertussis or Whooping Cough Fact Sheet . The fact sheet says that the first stage of pertussis, in which symptoms are similar to those of a cold, lasts one to two weeks. Stage two, which includes the severe cough that gave pertussis the name whooping cough , lasts one to two months. The fact sheet also says that pertussis is contagious from the time cold symptoms appear until about three weeks after severe cough starts. The incubation period for pertussis is most often seven to ten days: the incubation period can sometimes be longer, but we focus on the most common lengths of time. We will not include the use of antibiotics in this model.    Use the SEIR model below. Determine as many parameter values as you can, using the information described from the fact sheet. In this model, assume that time is measured in days. It is appropriate for some parameter values to be a range of numbers, rather than a single number, since the fact sheet information includes ranges of time:     You should now have determined the range of values for all parameters except . Here is extra information: the value of for pertussis has been estimated at anywhere from 5.5 to 17, depending on the outbreak in which was measured. A nice summary of studies of for pertussis appears in Pertussis: Microbiology, Disease, Treatment, and Prevention by Paul E. Kilgore, Abdulbaset M. Salim, Marcus J. Zervos, Heinz-Josef Schmitt, published in Clinical Microbiology Reviews in on March 30, 2016. Use this range of values of , along with the parameters you already determined and the formula in for , to solve for .    Run the Python code below, making sure to first enter the values from the parameter ranges you have computed for , , and . (These parameter values are set to 0 in the code, so visualizing the model requires you to enter the values you determine.) Notice that the code will compute the appropriate value of , using the total population of 10,000 and the values you assign to and . Make observations about the outcomes of the model. Be sure to adjust the length of time the model runs, or to show just one or two solution curves at a time, or to otherwise alter the code so that you can best see and comment on the results of the model.         The incubation period is usually 7 to 10 days, so is in the range . (The incubation period can be shorter or longer, and if you included this information, you will have a wider range of values for . This is also valid.)  Pertussis begins to be contagious when cold symptoms appear, and the phase for cold symptoms is one to two weeks. Pertussis is most contagious for up to three weeks after the intense coughing phase begins. Adding these phases together, pertussis is contagious, or most contagious, for four to five weeks, meaning 28 to 35 days. So is in the range . (Saying up to three weeks suggests people may not be contagious the full three weeks. And pertussis may be contagious, at a lower level, more than three weeks after severe cough begins. You may have built either of these facts into your answer, which may lead to a different answer.)    Rearranging leads to . Using the range of values and , along with , gives the range of values . Your range of values should be based on the parameter values you determined.    This is open-ended. Make as many observations as you can.     "
},
{
  "id": "exercises-ch-incubation-period-1",
  "level": "2",
  "url": "ch-incubation-periods.html#exercises-ch-incubation-period-1",
  "type": "Exercise",
  "number": "7.3.1",
  "title": "",
  "body": "Redo , but convert the time unit to weeks instead of days . To make this change, do the following.   Compute the number of weeks for the incubation period of pertussis. This should be . Then compute for the model in which the time unit is weeks. This result should be the value of you obtained in , multiplied by .    Similarly, compute the value of used to model the outbreak from in terms of weeks. Your result should equal the value of you obtained in , multiplied by .    For the graphs to appear the same, whether the time unit is days or weeks, the horizontal axis should be adjusted to the correct time unit. To be precise, when the time unit is weeks, the length of the time axis should equal the length of the time axis in . Or, to have a similar but not identical time axis, allow the length of the time axis to equal the nearest number of weeks. For instance, the default time length in is 365 days, which is one year. One year has approximately, but not exactly, 52 weeks. Using 52 weeks in this exercise will give a very similar graph to the 365-day graph from .  With this approach in mind: use parameters you have computed to produce two graphs, one in terms of days, and one in terms of weeks, for the the outbreak in . For clarity: update the label for the time axis in each graph to say days or weeks instead of time , to make clear which time unit is being used in the graph.    Explain mathematically why the unit conversions described in parts (a.), (b.), and (c.) are the correct conversions for converting the model's time scale from days to weeks.   "
},
{
  "id": "exercises-ch-incubation-period-2",
  "level": "2",
  "url": "ch-incubation-periods.html#exercises-ch-incubation-period-2",
  "type": "Exercise",
  "number": "7.3.2",
  "title": "",
  "body": "Update to include vaccine. Include the multiplier where appropriate, adapting our work from and to the SEIR model. In this exercise, we do not address vaccine efficacy or effectiveness, assuming instead a effective vaccine. In the following exercise, number 3 in this section, we include the actual effectiveness of pertussis vaccines.   Compute for pertussis, using the information that for pertussis can be between 5.5 and 17, depending on the outbreak. Your results for will be a range of values.    Adapt the Python code from to run the model with a vaccine level at least as large as . To include vaccine, multiply each term involving by . Adjust the time scale, show just some of the solution curve graphs, or make any other changes needed, to best see the long-term outcome of the model. Write your observations of the outcomes of this model, and compare and contrast with the no-vaccine model.    Do some online research to determine the percentage of children in your area, or percentage of all people in your area, who are vaccinated against pertussis. Your area can refer to your city, state, province, country, or whatever other region you choose. Run the Python code again, using this percentage for vaccination, and citing the resources in which you found the percentage. Adjust the code as needed so you can best see the results, and describe your findings.   "
},
{
  "id": "exercises-ch-incubation-period-3",
  "level": "2",
  "url": "ch-incubation-periods.html#exercises-ch-incubation-period-3",
  "type": "Exercise",
  "number": "7.3.3",
  "title": "",
  "body": "We make one more update to the pertussis model in and exercise 2 in this section, addressing vaccine effectiveness. Our inclusion of the multiplier assumed that vaccination had efficacy or effectiveness. However, research into pertussis vaccines shows that the level of vaccine efficacy or effectiveness can be significantly less. There is a wide range of values, depending on the specific vaccine used, the location in the world, and the years of study. For this exercise, we use a range of vaccine effectiveness. This range of vaccine effectiveness level comes from the Centers for Disease Control and Prevention . The range is specific to the DTaP vaccine, in Europe and the Americas, in studies in or after 1991.    Rewrite your model as below, where remains the percentage of people vaccinated, and is the vaccine effectiveness percentage. Notice that we require and :   Compute the value of for this model when . What percentage of people must be vaccinated in order to achieve when vaccine is effective? What can you say about the percentage of vaccinated people needed in order to achieve when vaccine is effective?    In approximately 2019, researchers found that the whooping cough vaccine had become less effective over time, for a variety of reasons. They investigated the reasons and made changes. Read about these events from at least three sources, including general news sources as well as government-led websites, and report on your findings. Cite your sources. In your report, describe the role of of vaccine effectiveness as well as the role of the percentage of people vaccinated in a population.   "
},
{
  "id": "ch-isolation",
  "level": "1",
  "url": "ch-isolation.html",
  "type": "Chapter",
  "number": "8",
  "title": "Isolation",
  "body": " Isolation      Learn strategies for modeling isolation , that is, the separation of Infectious people from the rest of the population, in order to prevent them from spreading the disease to others    Revisit how to use a model's parameter-based formula for when computing biologically-feasible values for the transmission parameter , as this computation requires additional thought when isolation is part of the model    Consider that isolation may be complete or incomplete, and develop modeling methods for each scenario     This chapter functions, along with and , as a sort of trilogy of methods for making models more realistic and for building public health interventions into models. As with vaccines, isolation of the infected is a public health approach used widely for the reduction of disease spread. As with incubation periods, isolation in a model can help that model to better fit data because the model more fully replicates what is happening in the world.  As we proceed through this chapter, we will consider complete isolation, when Infectious people have no contact at all with Susceptibles. We will also consider incomplete isolation, when Infectious people significantly reduce their contact with the general population but still have some chance of infecting Susceptibles. An example of incomplete isolation is staying home when sick, yet still interacting somewhat with roommates, family members, or others who share living space or deliver food. We will additionally spend time on thinking about how to use our parameter-based formula for in isolation models, and we will distinguish between the outbreak interventions of isolation and quarantine.   What if People Choose to Isolate?   In this activity, use the knowledge you have been building about mathematical modeling to develop two possible mathematical models, one for complete isolation and one for incomplete isolation. We set these models in fictional small, remote towns, where there are not a lot of visitors to town or travel of town residents elsewhere. We therefore focus the model just on the town's residents. We also focus this model on an outbreak of a fictional Disease X , for which and the Infectious period is approximately 8 days.    First, consider Town A , which has 6,000 residents, and imagine a scenario of complete isolation. That is, suppose that as soon as people know they are sick with Disease X, they isolate completely, having no contact with anyone else. Fortunately, Town A has found a way to deliver food and supplies, and to otherwise care for, people who are sick. Unfortunately, people are contagious with Disease X two days before they know they are sick, so they cannot isolate yet during those two days.    Write an SIR model for this outbreak, without (yet) including isolation. (Do not include vaccine or incubation period in your model.) Determine all parameter values for your model.    Adjust your SIR model to incorporate isolation, which in Town A is complete as soon as Infectious individuals know they are sick. Show both the differential equations and compartmental diagram for your adjusted model. Determine all parameter values for this adjusted model.      Next, consider Town B , which has 8,000 residents, and think of ways to model incomplete isolation. Suppose that Disease X appears in Town B, but Town B's people do not have a way to care for or deliver supplies to people who are sick. This means that friends, family members, care workers, or others interact somewhat with the Infectious who know they are sick. Therefore, isolation is not complete, though individuals do reduce their interactions with others as soon as they know they are sick, that is, typically two days after first becoming contagious.    Adjust your original SIR model, which did not have isolation, to incorporate the incomplete isolation described for Town B. (Do not include vaccine or incubation period in your model.) Show both the differential equations and a compartmental diagram for your adjusted model. Determine all parameter values for this adjusted model.    Discuss the differences between your models for complete and incomplete isolation, and discuss the reasons for your modeling choices.        Complete Isolation: Models and Parameter Estimation  Part (a) of seeks a possible model of complete isolation, in which people truly and completely isolate for some portion of their contagious period. There are multiple ways to model this. describes two possible approaches for you to consider.    Examine the two models described in the images and captions of and . Each model is a possible way to adapt an SIR model, as first described in , to represent the concept of complete isolation. Pay attention to the compartments, arrows, and parameter value descriptions.   A compartmental diagram showing one possible approach to modeling complete isolation. Infectious people move to a new compartment, labeled J for Isolation, since I is already used for Infectious. Parameters and have values determined by how long people typically remain in each of the compartments I and J, respectively.   A compartmental diagram showing one possible approach to modeling complete isolation. The compartments are S, I, J, and R. Infectious people move to a new compartment, labeled J for Isolation, since I is already used for Infectious. The parameters epsilon and eta replace gamma, and the times associated with the values of epsilon and eta represent how long people typically remain in each of the compartments I and J, respectively.      A compartmental diagram showing a second possible approach to modeling complete isolation. Here, people move directly to compartment R when they isolate, since they can no longer spread disease due to complete isolation. The value of is adjusted compared to an SIR model with no isolation, and is labeled , to indicate that the transition time from compartment I to compartment R is likely different than the time indicated by parameter in an SIR model with no isolation.   A compartmental diagram showing a second possible approach to modeling complete isolation. The compartments are S, I, and R. Here, people move directly to compartment R when they isolate, since they can no longer spread disease due to complete isolation. The value of gamma is adjusted compared to an SIR model with no isolation, and is relabeled as gamma with a tilde over it, to indicate a more rapid transition from compartment I to compartment R.     Use these two models to respond to the prompts below.    Compare and contrast the two models. Identify and describe any advantages or disadvantages you perceive for either model.    Write the system of differential equations for each model.    Suppose that an outbreak without isolation would use a standard SIR model having parameter values and . Further suppose that for that same outbreak, with isolation, people isolate three days after becoming Infectious. What would be the values of , , and for the model in ? And what would be the values of and in ?        This is an open-ended question. Possible answers may include preferring the simplicity of the second model, or preferring the detail in the first model of tracking how many people are isolating rather than removed. Responses may also refer to preferences for computing and separately, or for computing only . There are many additional possible responses.    For the model in , here is the system of differential equations:   For the model in , here is the system of differential equations:     For both models, the value of should not change.  For the model in , we notice that indicates a ten-day contagious period for the disease. We split up this time into the Infectious and Isolated compartments. Since people stay in the Infectious compartment for three days, we set , using the ideas from , , , and . This leaves seven days for people to stay in the Isolated compartment, to add up to their total of ten days, and so we set .  For the model in , set , for a similar reason to setting for the model in . This reduces the length of time people spend in the Infectious compartment, and we consider these people to be Removed for the rest of the time they are contagious.      The models in are two common ways to represent complete isolation. In both models, everyone isolates, and people in isolation do not spread disease at all.  Let us take a moment to discuss the parameter values computed for the models in and . As with in and in , the values for parameters , , and are determined by the length of time spent in a compartment. Specifically, each of these parameters has a value that is the reciprocal of the time spent in that compartment, and we make sure the units of time match. For example, if we are using the model in and expect the typical person to isolate for seven days, and if our unit of time in the model is days, then . However, if we have a different unit of time, then we adjust, in a way similar to that shown in the first exercise in .  We also address the expectation that real-life biological information about a disease outbreak should correspond with the parameter-based formula for that we first studied in . Historical values of take into account that people may have interacted less with others while sick, but do not include widespread intervention, such as coordinated isolation campaigns. Here are steps you can take when determining all parameter values in a model with such intervention, with help from the formula.    When using the parameter-based formula for to compute the value of parameter for an outbreak, start with a model that does not include intervention by large numbers of individuals or by an entire community. For instance, to model an outbreak using either of the strategies in , start with a standard SIR model, shown in , , and , for computing . The parameter-based formula corresponding to this model is .    The reason for starting with a model without intervention is this: is, as we learned, the average number of new infections caused by one infectious person in an otherwise entirely susceptible population . Interventions, such as vaccines or widespread isolation, change the ability of a disease to infect large numbers of people. Historical values of computed from past outbreaks do not include such interventions.    Once you have computed a biologically sound value or range of values for using an intervention-free version of your model, along with that model's parameter-based formula for , you can then incorporate isolation in your model. Possible models include those shown in and . Do not change the value of you have already computed, but do incorporate appropriate values of or and . Computing parameter values in this way will allow your models to show the effects of isolation as intervention.    In , we will show other ways to model isolation. In those models too, estimate first, in an appropriate corresponding model without intervention. Then adjust that model to include intervention, but do not change .      Incomplete Isolation, and Quarantine vs. Isolation  Incomplete isolation can take multiple forms. One possibility is that everyone tries to isolate when they know they are sick, but they cannot completely isolate, for many possible reasons: they may share living space with people who are not sick; they may require care from someone who is not sick; they may not have any way to get food without at least some interaction with people who are not sick; and there could be yet other reasons. Another possibility is that some people are contagious but do not isolate. They may know they are sick and choose not to isolate, or with some illnesses, people can have no symptoms yet still be contagious. Think through these possibilities in the following activity.     and represent two possible models of incomplete isolation. Each expands on the SIR model first shown in . Think carefully through the two models, considering when one model or the other might be a good choice for modeling isolation.   A compartmental diagram showing one possible approach to modeling incomplete isolation. In this model, all Infectious people pass through an Isolation compartment, labeled J, before moving to the Removed compartment. Notice that the arrow from compartment S to compartment I, representing transmission of the illness, depends on both I and J, in contrast to the transmission terms shown in .   A compartmental diagram showing one possible approach to modeling incomplete isolation. In this model, all Infectious people pass through an Isolation compartment, labeled J, before moving to the Removed compartment. Notice that the arrow from compartment S to compartment I, representing transmission of the illness, depends on both I and J, in contrast to the transmission terms shown in . The arrow from compartment S to compartment I is labeled with the formula . The arrow from compartment I to compartment J is labeled epsilon I. The arrow from compartment J to compartment R is labeled eta J.      A compartmental diagram showing a second possible approach to modeling incomplete isolation. This model allows Infectious people to move either directly to the Removed compartment or first to an Isolation compartment, labeled J, and then to the Removed compartment. As in the first approach shown in this activity, transmission depends on both I and J.   A compartmental diagram showing a second possible approach to modeling incomplete isolation. This model allows Infectious people to move either directly to the Removed compartment or first to an Isolation compartment, labeled J, and then to the Removed compartment. As in the first approach shown in this activity, transmission depends on both I and J. The arrow from compartment S to compartment I is labeled with the formula . The arrow from compartment I to compartment R is labeled gamma I. The arrow from compartment I to compartment J is labeled epsilon I. The arrow from compartment J to compartment R is labeled eta J.     Use the questions below to explain your thoughts about the models in and .    Imagine an illness primarily affects children, who require hands-on care and may be near siblings or other people despite being sick. Suppose that everyone who gets this illness experiences symptoms, and the symptoms are distinctive in a way that makes it clear the person has this illness. (Measles is an example of this kind of illness.) In this example, suppose everyone tries to isolate when their symptoms appear, but given the nature of the illness, there are still interactions with some relatives or other caregivers. Which of the models in and might you prefer for representing this situation? Why is this your choice?    Suppose a residential campus experiences an outbreak of influenza. Some students experience high fevers, severe achiness, and other relatively extreme symptoms. These students rest and mostly isolate, but may have roommates or may need to interact with others while acquiring food or medicine. Other students have only a low fever and mild symptoms. These students continue with their daily routines, not resting much more than usual and not isolating. Which of the models in and might you prefer for representing this situation? Why is this your choice?    Discuss the transmission term . Explain why both and appear in this term. Then decide what values for make the most sense. The role of is to scale the effect of , since people in the Isolated compartment typically have less chance to transmit illness than people in the Infectious compartment. This information should help you identify possible values for .        First and most importantly: there is not a single right answer to this question. Any answer that is well-reasoned works.  The author of this text would consider using a model like the one shown in in this situation. The reason is that all or nearly all people with such an illness would isolate, so we do not have anyone moving from I to R without passing through compartment J. Since families or other caregivers are likely to interact with sick children, there is a nonzero chance of disease spread, and historically, such illnesses have definitely spread in this way.  An isolation model may or may not be needed here. Using a model such as that in may be most useful when isolation is implemented in a notably expansive or thorough way. A modeler should think about how much isolation is happening, what the modeling goals are, and whether a simpler model, such as SIR, might provide enough information.    Again: there is not a single right answer to this question. Reasoning and justification are crucial to any response.  One suggested answer is a model like that shown in . This model provides a J compartment to represent the students who do their best to isolate. However, these students may interact with roommates or may receive food deliveries or briefly emerge from isolation to go get food or medicine. Such interactions give a small but nonzero chance for influenza transmission, and the in the transmission term, multiplied by , represents this chance. The model in also shows that some students do not isolate at all. These students stay in compartment I while they are contagious, and they move to compartment R only after their Infectious time period ends.    The transmission term can also be written . (Check the algebra to confirm this yourself.) The portion is the same transmission term from our underlying SIR model. The other term has a similar form, , indicating transmission from the J compartment to the S compartment, but it is multiplied by a scaling factor . The value of is typically between and . A value of would indicate no transmission from J to S, which was the case in our complete isolation model shown in . A value of would indicate that transmission from the Isolation compartment is as likely as from the Infectious compartment, in which case we may have no reason to include an Isolation compartment. For values of between and , the larger the value of , the more likely it is for people in isolation to transmit the disease, yet it is still less likely than if they were not isolating at all. (In theory, could be larger than , meaning people in compartment J would be more likely to transmit disease. While this seems unlikely when J means isolation, there could perhaps be a different outbreak and a different model in which some group of people is more contagious than those in the regular Infectious compartment, or there could be a behavior-based reason why one group is more more likely to transmit an illness than others.)      Notice that both models shown in could be described as SIJR models, but they are distinct models with different uses and different pathways that people can take when moving through compartments. Thinking further about comparing models: the interpretation of the Isolation compartment J is notably different in the models of , compared with the models of . These are all reasons why we should be careful, whenever building a model, to describe the meaning of each compartment, and to define precisely each population variable and each parameter.  You have now worked with two different models for complete isolation, in , and two different models for incomplete isolation, in . As you have been seeing in on vaccines, on incubation periods, and this chapter on isolation, there are a variety of ways to expand on an SIR model to address different aspects of an outbreak. As you move forward from here, more exercises and activities will give you freedom to choose how to build your models.  Before we move on to such an activity, let us take a moment to address a vocabulary topic that commonly occurs when studying isolation, namely the difference between isolation and quarantine. According to the U.S. Department of Health and Human Services , isolation  separates sick people with a contagious disease from people who are not sick . By contrast, quarantine  separates and restricts the movement of people who were exposed to a contagious disease to see if they become sick. These people may have been exposed to a disease and do not know it, or they may have the disease but do not show symptoms. It can be more challenging to enact quarantine, and to model quarantine, because we often have less information about which people have been exposed to a disease, in comparison to the information we have about who is actually sick. Seeing symptoms makes it easier to determine when people are sick. For this reason, we emphasize isolation models. However, it is possible to include quarantine in models. One way to include quarantine, without requiring a new compartment, is to scale the transmission term by a factor that is between and . This is similar to multiplying by to show the effect of vaccine, or multiplying by to show the lower transmission level for incomplete isolation.  As an additional note: the previous paragraph used the word exposed as it often appears in articles and websites about epidemiology. In the E compartment we introduced in , E stands for Exposed-and-incubating , which has a different meaning than just exposed . The term exposed means a person has been near someone who was contagious with an illness: such a person may or may not then get that illness themself. Our modeling term Exposed-and-incubating indicates that a person has indeed contracted the illness, but is not yet contagious themself, so has not moved into the Infectious compartment. It is important to keep reminding ourselves of this difference in meaning. (Beware: if you read published articles about mathematical epidemiology, authors often use the word exposed when they mean what we are calling exposed-and-incubating . This is common in the literature of mathematical epidemiology, and it will help you as a reader to be aware of the context.)    Practice with an Isolation Model  We have now worked with both complete and incomplete isolation, as well as both SIR and SEIR models. In , continue to build isolation models while also considering when you might start with the SIR or SEIR model. After, in , continue to compare SIR and SEIR models, while also making choices about what kind of isolation to model.    Each academic year, many college campuses experience one or more outbreaks of influenza, also referred to as flu. According to the Centers for Disease Control and Prevention (CDC) , flu symptoms may include fever, chills, cough, aches, runny or stuffy nose, and more. Also according to the CDC, influenza spreads via tiny droplets when people sneeze or cough or talk, as well as when people touch surfaces that have the virus on them and then touch parts of their face such as the mouth, nose, and eyes.  To gather information about the incubation period of flu and about how long flu is contagious, visit this ``key facts'' page from the CDC . To locate the range of values for typical influenza outbreaks, visit this page from the Virginia Department of Health . For all of these values that help with modeling, you are welcome to search online for other sources: the links provided here are sufficient, but are not the only way to gather the information we seek.  Use the idea of a campus outbreak to think about (at least) two ways to model isolation, guided by the prompts below.    Choose either the SIR or SEIR model for the spread of flu. Use the online facts you have gathered to decide whether or not to include an incubation period in your model. Be sure to explain your reasoning. (There is not a right or wrong answer here: either choice can make sense, yet it is important to justify your decision using facts about the flu.) Provide the range of parameter values for each parameter in your model, and cite your sources.    In many cases, people with the flu know they are sick and have the opportunity to isolate. Let us suppose that every person in an outbreak isolates after they have been sick for one day, and that they isolate perfectly. (This is unlikely in reality, but we can model this to see the outcome.) Update your model accordingly, changing only the value of (which relates to the time spent in the population) so that people move more rapidly from compartment I to compartment R.    Try your model in Python, using either the Python code for an SIR model, as in , or the Python code for an SEIR model, as in . Suppose there are 2500 students on campus, and update all parameters and time ranges in the model as needed. Feel free to try just one initial Infectious case, or a few (perhaps 2-10) initial Infectious cases, as it is possible for multiple people to become Infectious simultaneously in an influenza outbreak, perhaps because they all encountered the same Infectious person off-campus, or perhaps because some event led to multiple initial infections within a very short time frame.  First try your baseline model for influenza without isolation, and then try your influenza model with its updated value to represent the complete isolation of Infectious people beginning one day after symptoms appear. Describe your results.        There truly is no right or wrong decision here. Influenza is often modeled using the SIR model because the incubation period can be relatively short: the linked CDC page says influenza is most contagious for three days. However, the incubation period is not zero, and may be important to include when modeling a real campus outbreak and trying to estimate the timeline of the outbreak's trajectory, and the CDC page also tells us that influenza can be contagious from one day before symptoms appear until five to seven days after symptoms appear, meaning a total of six to eight days. In summary: either model is a reasonable choice, and the decision rests on the modeler's goals and the questions being asked when modeling.  The contagion numbers listed above suggest that, without isolation, we may choose from a range of possible values for our model, with . The Virginia Department of Health tells us that . Putting these ranges of values and our population size of 2500 into our formula for tells us that . (Be sure to confirm these numbers, using the correct for the model you are using, and showing with and values used to compute the least and greatest values for .)    If everyone knows they are sick, and everyone isolates perfectly after one day of illness, then we should set or, more succinctly, , for a complete isolation model in which the time unit is days . The range of values is due to the possibility that flu can be contagious one day before symptoms begin, which would mean , or the possibility that contagion can begin close to when symptoms begin, which would mean .    This is open-ended. Explore in Python, and make as many observations as you can.        Revisit , starting with an SIR model and introducing incomplete isolation. Incomplete isolation can take multiple forms, some of which we described in .   Describe the kind of incomplete isolation you are including in your model. This requires partially rewriting the fictional outbreak in : perhaps people do not always know if they have the flu, or they do not isolate perfectly, or there may be other reasons for incomplete isolation. Construct the compartmental diagram and differential equations you will use to represent your described form of incomplete isolation.    Determine all parameter values or ranges for your model. Cite official sources wherever possible. (Since you are deciding the kind of incomplete isolation, and since this is a fictional outbreak, there may be one or more parameter values that are based on your decisions and not on official sources. Indicate this wherever it is relevant.)    Use Python to show results of your SIR model, with and without incomplete isolation. Describe at least three ways the model changes when incomplete isolation is included, in comparison to when incomplete isolation is not included.    Revisit , starting with an SEIR model and introducing incomplete isolation. Incomplete isolation can take multiple forms, some of which we described in . (If you are also completing exercise 1 in , use the same form of incomplete isolation.)   Describe the kind of incomplete isolation you are including in your model. This requires partially rewriting the fictional outbreak in : perhaps people do not always know if they have the flu, or they do not isolate perfectly, or there may be other reasons for incomplete isolation. Construct the compartmental diagram and differential equations you will use to represent your described form of incomplete isolation.    Determine all parameter values or ranges for your model. Cite official sources wherever possible. (Since you are deciding the kind of incomplete isolation, and since this is a fictional outbreak, there may be one or more parameter values that are based on your decisions and not on official sources. Indicate this wherever it is relevant.)    Use Python to show results of your SEIR model, with and without incomplete isolation. Describe at least three ways the model changes when incomplete isolation is included, in comparison to when incomplete isolation is not included.    If you also completed exercise 1 in , discuss the differences between using an SIR model with isolation and using an SEIR model with isolation. As part of your discussion, provide at least one advantage for using the SIR model, and at least one advantage for using the SEIR model.      "
},
{
  "id": "intro-isolation-1",
  "level": "2",
  "url": "ch-isolation.html#intro-isolation-1",
  "type": "Goals",
  "number": "",
  "title": "",
  "body": "   Learn strategies for modeling isolation , that is, the separation of Infectious people from the rest of the population, in order to prevent them from spreading the disease to others    Revisit how to use a model's parameter-based formula for when computing biologically-feasible values for the transmission parameter , as this computation requires additional thought when isolation is part of the model    Consider that isolation may be complete or incomplete, and develop modeling methods for each scenario    "
},
{
  "id": "expl-activity-isolation",
  "level": "2",
  "url": "ch-isolation.html#expl-activity-isolation",
  "type": "Exploration",
  "number": "8.1",
  "title": "What if People Choose to Isolate?",
  "body": " What if People Choose to Isolate?   In this activity, use the knowledge you have been building about mathematical modeling to develop two possible mathematical models, one for complete isolation and one for incomplete isolation. We set these models in fictional small, remote towns, where there are not a lot of visitors to town or travel of town residents elsewhere. We therefore focus the model just on the town's residents. We also focus this model on an outbreak of a fictional Disease X , for which and the Infectious period is approximately 8 days.    First, consider Town A , which has 6,000 residents, and imagine a scenario of complete isolation. That is, suppose that as soon as people know they are sick with Disease X, they isolate completely, having no contact with anyone else. Fortunately, Town A has found a way to deliver food and supplies, and to otherwise care for, people who are sick. Unfortunately, people are contagious with Disease X two days before they know they are sick, so they cannot isolate yet during those two days.    Write an SIR model for this outbreak, without (yet) including isolation. (Do not include vaccine or incubation period in your model.) Determine all parameter values for your model.    Adjust your SIR model to incorporate isolation, which in Town A is complete as soon as Infectious individuals know they are sick. Show both the differential equations and compartmental diagram for your adjusted model. Determine all parameter values for this adjusted model.      Next, consider Town B , which has 8,000 residents, and think of ways to model incomplete isolation. Suppose that Disease X appears in Town B, but Town B's people do not have a way to care for or deliver supplies to people who are sick. This means that friends, family members, care workers, or others interact somewhat with the Infectious who know they are sick. Therefore, isolation is not complete, though individuals do reduce their interactions with others as soon as they know they are sick, that is, typically two days after first becoming contagious.    Adjust your original SIR model, which did not have isolation, to incorporate the incomplete isolation described for Town B. (Do not include vaccine or incubation period in your model.) Show both the differential equations and a compartmental diagram for your adjusted model. Determine all parameter values for this adjusted model.    Discuss the differences between your models for complete and incomplete isolation, and discuss the reasons for your modeling choices.     "
},
{
  "id": "activity-two-complete-isolation-models",
  "level": "2",
  "url": "ch-isolation.html#activity-two-complete-isolation-models",
  "type": "Activity",
  "number": "8.2",
  "title": "",
  "body": "  Examine the two models described in the images and captions of and . Each model is a possible way to adapt an SIR model, as first described in , to represent the concept of complete isolation. Pay attention to the compartments, arrows, and parameter value descriptions.   A compartmental diagram showing one possible approach to modeling complete isolation. Infectious people move to a new compartment, labeled J for Isolation, since I is already used for Infectious. Parameters and have values determined by how long people typically remain in each of the compartments I and J, respectively.   A compartmental diagram showing one possible approach to modeling complete isolation. The compartments are S, I, J, and R. Infectious people move to a new compartment, labeled J for Isolation, since I is already used for Infectious. The parameters epsilon and eta replace gamma, and the times associated with the values of epsilon and eta represent how long people typically remain in each of the compartments I and J, respectively.      A compartmental diagram showing a second possible approach to modeling complete isolation. Here, people move directly to compartment R when they isolate, since they can no longer spread disease due to complete isolation. The value of is adjusted compared to an SIR model with no isolation, and is labeled , to indicate that the transition time from compartment I to compartment R is likely different than the time indicated by parameter in an SIR model with no isolation.   A compartmental diagram showing a second possible approach to modeling complete isolation. The compartments are S, I, and R. Here, people move directly to compartment R when they isolate, since they can no longer spread disease due to complete isolation. The value of gamma is adjusted compared to an SIR model with no isolation, and is relabeled as gamma with a tilde over it, to indicate a more rapid transition from compartment I to compartment R.     Use these two models to respond to the prompts below.    Compare and contrast the two models. Identify and describe any advantages or disadvantages you perceive for either model.    Write the system of differential equations for each model.    Suppose that an outbreak without isolation would use a standard SIR model having parameter values and . Further suppose that for that same outbreak, with isolation, people isolate three days after becoming Infectious. What would be the values of , , and for the model in ? And what would be the values of and in ?        This is an open-ended question. Possible answers may include preferring the simplicity of the second model, or preferring the detail in the first model of tracking how many people are isolating rather than removed. Responses may also refer to preferences for computing and separately, or for computing only . There are many additional possible responses.    For the model in , here is the system of differential equations:   For the model in , here is the system of differential equations:     For both models, the value of should not change.  For the model in , we notice that indicates a ten-day contagious period for the disease. We split up this time into the Infectious and Isolated compartments. Since people stay in the Infectious compartment for three days, we set , using the ideas from , , , and . This leaves seven days for people to stay in the Isolated compartment, to add up to their total of ten days, and so we set .  For the model in , set , for a similar reason to setting for the model in . This reduces the length of time people spend in the Infectious compartment, and we consider these people to be Removed for the rest of the time they are contagious.     "
},
{
  "id": "activity-two-incomplete-isolation-models",
  "level": "2",
  "url": "ch-isolation.html#activity-two-incomplete-isolation-models",
  "type": "Activity",
  "number": "8.3",
  "title": "",
  "body": "   and represent two possible models of incomplete isolation. Each expands on the SIR model first shown in . Think carefully through the two models, considering when one model or the other might be a good choice for modeling isolation.   A compartmental diagram showing one possible approach to modeling incomplete isolation. In this model, all Infectious people pass through an Isolation compartment, labeled J, before moving to the Removed compartment. Notice that the arrow from compartment S to compartment I, representing transmission of the illness, depends on both I and J, in contrast to the transmission terms shown in .   A compartmental diagram showing one possible approach to modeling incomplete isolation. In this model, all Infectious people pass through an Isolation compartment, labeled J, before moving to the Removed compartment. Notice that the arrow from compartment S to compartment I, representing transmission of the illness, depends on both I and J, in contrast to the transmission terms shown in . The arrow from compartment S to compartment I is labeled with the formula . The arrow from compartment I to compartment J is labeled epsilon I. The arrow from compartment J to compartment R is labeled eta J.      A compartmental diagram showing a second possible approach to modeling incomplete isolation. This model allows Infectious people to move either directly to the Removed compartment or first to an Isolation compartment, labeled J, and then to the Removed compartment. As in the first approach shown in this activity, transmission depends on both I and J.   A compartmental diagram showing a second possible approach to modeling incomplete isolation. This model allows Infectious people to move either directly to the Removed compartment or first to an Isolation compartment, labeled J, and then to the Removed compartment. As in the first approach shown in this activity, transmission depends on both I and J. The arrow from compartment S to compartment I is labeled with the formula . The arrow from compartment I to compartment R is labeled gamma I. The arrow from compartment I to compartment J is labeled epsilon I. The arrow from compartment J to compartment R is labeled eta J.     Use the questions below to explain your thoughts about the models in and .    Imagine an illness primarily affects children, who require hands-on care and may be near siblings or other people despite being sick. Suppose that everyone who gets this illness experiences symptoms, and the symptoms are distinctive in a way that makes it clear the person has this illness. (Measles is an example of this kind of illness.) In this example, suppose everyone tries to isolate when their symptoms appear, but given the nature of the illness, there are still interactions with some relatives or other caregivers. Which of the models in and might you prefer for representing this situation? Why is this your choice?    Suppose a residential campus experiences an outbreak of influenza. Some students experience high fevers, severe achiness, and other relatively extreme symptoms. These students rest and mostly isolate, but may have roommates or may need to interact with others while acquiring food or medicine. Other students have only a low fever and mild symptoms. These students continue with their daily routines, not resting much more than usual and not isolating. Which of the models in and might you prefer for representing this situation? Why is this your choice?    Discuss the transmission term . Explain why both and appear in this term. Then decide what values for make the most sense. The role of is to scale the effect of , since people in the Isolated compartment typically have less chance to transmit illness than people in the Infectious compartment. This information should help you identify possible values for .        First and most importantly: there is not a single right answer to this question. Any answer that is well-reasoned works.  The author of this text would consider using a model like the one shown in in this situation. The reason is that all or nearly all people with such an illness would isolate, so we do not have anyone moving from I to R without passing through compartment J. Since families or other caregivers are likely to interact with sick children, there is a nonzero chance of disease spread, and historically, such illnesses have definitely spread in this way.  An isolation model may or may not be needed here. Using a model such as that in may be most useful when isolation is implemented in a notably expansive or thorough way. A modeler should think about how much isolation is happening, what the modeling goals are, and whether a simpler model, such as SIR, might provide enough information.    Again: there is not a single right answer to this question. Reasoning and justification are crucial to any response.  One suggested answer is a model like that shown in . This model provides a J compartment to represent the students who do their best to isolate. However, these students may interact with roommates or may receive food deliveries or briefly emerge from isolation to go get food or medicine. Such interactions give a small but nonzero chance for influenza transmission, and the in the transmission term, multiplied by , represents this chance. The model in also shows that some students do not isolate at all. These students stay in compartment I while they are contagious, and they move to compartment R only after their Infectious time period ends.    The transmission term can also be written . (Check the algebra to confirm this yourself.) The portion is the same transmission term from our underlying SIR model. The other term has a similar form, , indicating transmission from the J compartment to the S compartment, but it is multiplied by a scaling factor . The value of is typically between and . A value of would indicate no transmission from J to S, which was the case in our complete isolation model shown in . A value of would indicate that transmission from the Isolation compartment is as likely as from the Infectious compartment, in which case we may have no reason to include an Isolation compartment. For values of between and , the larger the value of , the more likely it is for people in isolation to transmit the disease, yet it is still less likely than if they were not isolating at all. (In theory, could be larger than , meaning people in compartment J would be more likely to transmit disease. While this seems unlikely when J means isolation, there could perhaps be a different outbreak and a different model in which some group of people is more contagious than those in the regular Infectious compartment, or there could be a behavior-based reason why one group is more more likely to transmit an illness than others.)     "
},
{
  "id": "sec-incomplete-isolation-and-quarantine-vs-isolation-6",
  "level": "2",
  "url": "ch-isolation.html#sec-incomplete-isolation-and-quarantine-vs-isolation-6",
  "type": "Paragraph (with a defined term)",
  "number": "",
  "title": "",
  "body": "isolation quarantine "
},
{
  "id": "activity-sir-model-flu",
  "level": "2",
  "url": "ch-isolation.html#activity-sir-model-flu",
  "type": "Activity",
  "number": "8.4",
  "title": "",
  "body": "  Each academic year, many college campuses experience one or more outbreaks of influenza, also referred to as flu. According to the Centers for Disease Control and Prevention (CDC) , flu symptoms may include fever, chills, cough, aches, runny or stuffy nose, and more. Also according to the CDC, influenza spreads via tiny droplets when people sneeze or cough or talk, as well as when people touch surfaces that have the virus on them and then touch parts of their face such as the mouth, nose, and eyes.  To gather information about the incubation period of flu and about how long flu is contagious, visit this ``key facts'' page from the CDC . To locate the range of values for typical influenza outbreaks, visit this page from the Virginia Department of Health . For all of these values that help with modeling, you are welcome to search online for other sources: the links provided here are sufficient, but are not the only way to gather the information we seek.  Use the idea of a campus outbreak to think about (at least) two ways to model isolation, guided by the prompts below.    Choose either the SIR or SEIR model for the spread of flu. Use the online facts you have gathered to decide whether or not to include an incubation period in your model. Be sure to explain your reasoning. (There is not a right or wrong answer here: either choice can make sense, yet it is important to justify your decision using facts about the flu.) Provide the range of parameter values for each parameter in your model, and cite your sources.    In many cases, people with the flu know they are sick and have the opportunity to isolate. Let us suppose that every person in an outbreak isolates after they have been sick for one day, and that they isolate perfectly. (This is unlikely in reality, but we can model this to see the outcome.) Update your model accordingly, changing only the value of (which relates to the time spent in the population) so that people move more rapidly from compartment I to compartment R.    Try your model in Python, using either the Python code for an SIR model, as in , or the Python code for an SEIR model, as in . Suppose there are 2500 students on campus, and update all parameters and time ranges in the model as needed. Feel free to try just one initial Infectious case, or a few (perhaps 2-10) initial Infectious cases, as it is possible for multiple people to become Infectious simultaneously in an influenza outbreak, perhaps because they all encountered the same Infectious person off-campus, or perhaps because some event led to multiple initial infections within a very short time frame.  First try your baseline model for influenza without isolation, and then try your influenza model with its updated value to represent the complete isolation of Infectious people beginning one day after symptoms appear. Describe your results.        There truly is no right or wrong decision here. Influenza is often modeled using the SIR model because the incubation period can be relatively short: the linked CDC page says influenza is most contagious for three days. However, the incubation period is not zero, and may be important to include when modeling a real campus outbreak and trying to estimate the timeline of the outbreak's trajectory, and the CDC page also tells us that influenza can be contagious from one day before symptoms appear until five to seven days after symptoms appear, meaning a total of six to eight days. In summary: either model is a reasonable choice, and the decision rests on the modeler's goals and the questions being asked when modeling.  The contagion numbers listed above suggest that, without isolation, we may choose from a range of possible values for our model, with . The Virginia Department of Health tells us that . Putting these ranges of values and our population size of 2500 into our formula for tells us that . (Be sure to confirm these numbers, using the correct for the model you are using, and showing with and values used to compute the least and greatest values for .)    If everyone knows they are sick, and everyone isolates perfectly after one day of illness, then we should set or, more succinctly, , for a complete isolation model in which the time unit is days . The range of values is due to the possibility that flu can be contagious one day before symptoms begin, which would mean , or the possibility that contagion can begin close to when symptoms begin, which would mean .    This is open-ended. Explore in Python, and make as many observations as you can.     "
},
{
  "id": "exercises-ch-isolation-1",
  "level": "2",
  "url": "ch-isolation.html#exercises-ch-isolation-1",
  "type": "Exercise",
  "number": "8.4.1",
  "title": "",
  "body": "Revisit , starting with an SIR model and introducing incomplete isolation. Incomplete isolation can take multiple forms, some of which we described in .   Describe the kind of incomplete isolation you are including in your model. This requires partially rewriting the fictional outbreak in : perhaps people do not always know if they have the flu, or they do not isolate perfectly, or there may be other reasons for incomplete isolation. Construct the compartmental diagram and differential equations you will use to represent your described form of incomplete isolation.    Determine all parameter values or ranges for your model. Cite official sources wherever possible. (Since you are deciding the kind of incomplete isolation, and since this is a fictional outbreak, there may be one or more parameter values that are based on your decisions and not on official sources. Indicate this wherever it is relevant.)    Use Python to show results of your SIR model, with and without incomplete isolation. Describe at least three ways the model changes when incomplete isolation is included, in comparison to when incomplete isolation is not included.   "
},
{
  "id": "exercises-ch-isolation-2",
  "level": "2",
  "url": "ch-isolation.html#exercises-ch-isolation-2",
  "type": "Exercise",
  "number": "8.4.2",
  "title": "",
  "body": "Revisit , starting with an SEIR model and introducing incomplete isolation. Incomplete isolation can take multiple forms, some of which we described in . (If you are also completing exercise 1 in , use the same form of incomplete isolation.)   Describe the kind of incomplete isolation you are including in your model. This requires partially rewriting the fictional outbreak in : perhaps people do not always know if they have the flu, or they do not isolate perfectly, or there may be other reasons for incomplete isolation. Construct the compartmental diagram and differential equations you will use to represent your described form of incomplete isolation.    Determine all parameter values or ranges for your model. Cite official sources wherever possible. (Since you are deciding the kind of incomplete isolation, and since this is a fictional outbreak, there may be one or more parameter values that are based on your decisions and not on official sources. Indicate this wherever it is relevant.)    Use Python to show results of your SEIR model, with and without incomplete isolation. Describe at least three ways the model changes when incomplete isolation is included, in comparison to when incomplete isolation is not included.    If you also completed exercise 1 in , discuss the differences between using an SIR model with isolation and using an SEIR model with isolation. As part of your discussion, provide at least one advantage for using the SIR model, and at least one advantage for using the SEIR model.   "
},
{
  "id": "ch-preparing-influenza-data-to-compare-with-a-model",
  "level": "1",
  "url": "ch-preparing-influenza-data-to-compare-with-a-model.html",
  "type": "Chapter",
  "number": "9",
  "title": "Preparing Influenza Data to Compare With a Model",
  "body": " Preparing Influenza Data to Compare With a Model      Distinguish between the vocabulary terms incidence and prevalence when describing categories of infectious cases in an outbreak    Translate the numbers in a typical data set from an outbreak into a related set of numbers that we can compare with the output of a model    Build skills for working with numbers and formulas in a spreadsheet     At this point, we have studied compartmental models, mathematical analysis of models, and multiple variations to those models. You can now develop models for many different kinds of infectious disease outbreak and for a variety of public health interventions that can be used to stop, slow, or reduce the size of the outbreak.  Next, we begin a three-chapter foray into comparing models with data. In this chapter, we start with a typical data set that shows how many new cases occur per day (or per week, month, or other time period), and we restructure those numbers into a set of numbers that more meaningfully compares with the models we write. introduces Python code for fitting a model to a data set, adjusting parameters within the model to improve the fit. Then, in , we compare multiple models for the same outbreak.  Begin in by investigating data sets generated by the Zombie Game App. We will use different columns of data from this app to help us think about how typical real-world disease data sets can compare with the kinds of compartmental models we have been studying.   Comparing Data: New Zombies vs. All Current Zombies   We return to the Zombie Game App, using the Zombie Mortality feature in a similar way to what we first saw in . This time, our goal is to distinguish between the data for # Zombies and the data for New Infections .    The data table below comes from the Zombie Game App. This table results from a simulation in which zombies are designated as mortal, with a lifespan (if zombies can be said to have a lifespan) of two days. Once a zombie surpasses its lifespan, it moves to the Removed category, meaning it no longer appears on the hex grid and can no longer infect humans.   Table of sample data from a human zombie simulation in which zombies have a two-day lifespan   Sample data for a full simulation from the Zombie Game App, viewed as a table. In this simulation, zombies have a two-day lifespan.    On paper or in a spreadsheet: create a plot with Round # on the horizontal axis and # Zombies on the vertical axis. Separately, create a plot with Round # on the horizontal axis and New Infections on the vertical axis.  Make at least three observations, comparing and contrasting the two plots you have made.    Next, open the Zombie Game App to generate your own data. Within the app, check the box labeled Zombie Mortality , located under the heading Other Options . Once you do so, you can select the Zombie Lifespan (days) . Then run the game and make note of your resulting data table. Again, graph the data for # Zombies and for New Infections , as you did in part (a).  Which of your observations from part (a) remain true? If any change, which observations change, and in what ways do they change?    When running the Zombie Game App in part (b), you may also choose to change the default Human Start Count to make it more likely for Humans to win the game. Write out at least three different combinations of Zombie Lifespan (days) and Human Start Count that you used and found that Humans won the game.  Next, investigate the question: when keeping Zombie Lifespan (days) the same, does increasing or decreasing the Human Start Count make it more likely for Humans to win? Support your response using evidence you generate from the Zombie Game App.  What mathematical epidemiology quantity that we have studied provides insight into answering the question in the previous paragraph?      Incidence and Prevalence  When studying mathematical epidemiology, it helps to distinguish between the epidemiological terms incidence and prevalence . Incidence is a measure of new cases within a specified time unit, such as new cases per day or new cases per week. Prevalence is the total number of active cases at a given time, which means that prevalence includes both new cases and already-existing cases. provides practice with these terms, as they relate to data from the Zombie Game App and to solution curves from SIR models.    Below is a graph created from a data set generated by the Zombie Game App. This data set was created using the same app settings as the data in , that is, zombies are mortal and have a two-day lifespan . The specific data values here are different than those in .   Graph of New Infections vs. Round Number, and Number of Zombies vs. Round Number, created using data from a Zombie Game App simulation in which zombies have a two-day lifespan   Graph of New Infections vs. Round Number, and Number of Zombies vs. Round Number, created using data from a Zombie Game App simulation in which zombies have a two-day lifespan    Spend some time thinking about the graph in while also thinking about your work in . Then respond to the following prompts.    First, simply list observations you had while comparing with what you did in . List at least three observations.    Next, read carefully the descriptions for incidence and prevalence at the start of . Which of the curves in seems to you to better represent incidence? And which curve seems to better represent prevalence? Explain your reasoning.    Now compare with graphs you have seen for SIR models, when we plot solution curves for , , and . Which of the data plots in -- the New Infections plot, or the # Zombies plot -- seems better for comparing with the curve we would generate in an SIR model of an outbreak?        There can be many kinds of observations. Be thoughtful; be creative; think broadly.    The New Infections curve tells us the number of new cases per round, and this closely mirrors the wording in the definition of incidence. The # Zombies curve tells us the total number of active zombies per round, and this wording is very similar to wording in the definition of prevalence.    The curve often describes all active infections at a given time . This compares best with the data for # Zombies vs. time. (This is not a perfect comparison for every outbreak, as sometimes means a person is contagious but does not yet show symptoms. However, in the basic zombie game, where is a person is contagious exactly when they are a zombie, the curve is well matched with data for # Zombies.)      It turns out that outbreak data typically take a format similar to the numbers shown in the New Infections column of data in the Zombie Game App. These numbers may be shared as a table of values, or in a graphical format, such as a histogram. In order to compare the number of new cases in an outbreak with the curve in an SIR model (or other compartmental model), we need to use what we know about the outbreak to convert the numbers of new cases into the number of people in the I compartment at each time step of the outbreak. This is our goal in .    Translating a Typical Data Set Into Numbers We Can Compare With a Model  In the fall of 2009, Bates College experienced an outbreak of H1N1 influenza. The initiating event appeared to be Parents' and Families' Weekend, a time when relatives of students were invited to campus for a weekend of events together. Shortly thereafter, the first confirmed cases of H1N1 appeared on campus. There were multiple initial infections, due to several students independently becoming infected after visitors came to campus.  Before the fall 2009 semester, college officials at Bates and elsewhere had been preparing for the newly emerged H1N1 influenza virus. While the specific influenza viruses that circulate each year differ somewhat from those that circulated in previous years, the 2009 H1N1 virus had distinct genetic differences from any influenza viruses that had ever been studied in humans. The World Health Organization and the Centers for Disease Control and Prevention describe more about the differences on their websites. The novelty of the fall 2009 H1N1 virus led to heightened concern about large outbreaks and possible effects on people of all ages.  In we work with real data collected during the Bates outbreak. Starting with this data set, which is shown in , we think through how to convert data into numbers we can compare with an SIR model for the spread of H1N1 influenza in which the unit of time is days.    After the 2009 outbreak of H1N1 influenza virus on the Bates College campus, the Dean of Students and Student Health Services were kind enough to share their data on new infections among students. As is common with data sets for an outbreak: information that could identify specific individuals has been removed, and the data set takes the form of new case reports. The data set appears in .   Student case reports of H1N1 in fall 2009 at Bates College    Day of Week  Date  New Cases Reported    Tuesday  October 6  5    Wednesday  October 7  8    Thursday  October 8  2    Friday  October 9  6    Saturday  October 10  6    Sunday  October 11  15    Monday  October 12  28    Tuesday  October 13  53    Wednesday  October 14  44    Thursday  October 15  20    Friday  October 16  12    Saturday  October 17  9    Sunday  October 18  17    Monday  October 19  21    Tuesday  October 20  7     Influenza moves quickly. The incubation period is short, often just two days or even shorter, and people can become contagious before showing symptoms. Two articles to support this are 2009 H1N1 Influenza by Seth J. Sullivan, Robert M. Jacobson, Walter R. Dowdle, and Gregory A. Poland, published January 2010 in the Mayo Clinic Proceedings , and Outbreak of 2009 pandemic influenza A (H1N1) at a New York City school by Justin Lessler, Nicholas G. Reich, and Derek A. T. Cummings, published in 2009 in the New England Journal of Medicine. For this reason, we use an SIR model instead of an SEIR model. There are multiple estimates for how long people remain contagious, with five days as a commonly provided number, though for some people the contagious period may be a little shorter or a few days longer. The European Centre for Disease Prevention and Control includes the estimate of five days for adults and seven days for children on their web page Questions and answers on the pandemic (H1N1) 2009 , last accessed 16 September 2024, available at .   Given this information about the incubation period and contagious period of H1N1, follow the steps below to convert the incidence data in to prevalence numbers that can be compared with the I compartment of an SIR model in which the time unit is days.     Create your own editable table of data by opening this publicly shared spreadsheet and making your own copy. Alternatively, create your table by opening a blank spreadsheet and copying into it the data from .    Create a new column in your table and give this new column the title Prevalence . Compute the H1N1 prevalence for each day by supposing that people are contagious for five days. Measuring prevalence, the number of contagious people, and the number of people in the compartment are essentially the same for H1N1, as people become contagious very close to the time when they begin showing symptoms, and they stop being contagious approximately when they stop showing symptoms. This means, for instance, that the five initial cases from October 6 remain in the Prevalence column, and hence in , for October 6, 7, 8, 9, and 10. Then, on October 11, the five cases from October 6 should no longer be in the Prevalence column.    Extend the length of your Prevalence column so that it represents the full five days of contagion for all the New Cases Reported. To extend the length of the Prevalence column, add extra rows at the bottom of the table. The last row should have a Prevalence value of (and should be the first row in which Prevalence equals ).    Create a plot showing New Cases Reported on the vertical axis, with time on the horizontal axis. The horizontal axis in your chart should show the dates. On the same axes, create a plot showing Prevalence on the vertical axis, with time again on the horizontal axis.  To create this type of spreadsheet plot in Google Sheets, choose menu item Insert , then choose Chart , and then in the Chart Editor, select Line chart . The Chart Editor provides several ways to edit the chart.  Alternatively, in Microsoft Excel, choose menu item Insert , and then from the Chart menu, select one of the Scatter options.    Discuss with your group: how does each of the two plots compare (or not) with typical curves in outbreaks? Make three or more observations.    Bonus spreadsheet work, if time permits: go back to the Prevalence column you created. If you have not yet used spreadsheet formulas to determine the column entries, try to do so. Formulas let you refer to other cells in the spreadsheet, rather than re-typing their numbers every time you re-use the same numbers.       shows the H1N1 data along with the prevalence values, including extra rows to display prevalence for all cases of H1N1.   Student case reports of H1N1 in fall 2009 at Bates College    Day of Week  Date  New Cases Reported  Prevalence    Tuesday  October 6  5  5    Wednesday  October 7  8  13    Thursday  October 8  2  15    Friday  October 9  6  21    Saturday  October 10  6  27    Sunday  October 11  15  37    Monday  October 12  28  57    Tuesday  October 13  53  108    Wednesday  October 14  44  146    Thursday  October 15  20  160    Friday  October 16  12  157    Saturday  October 17  9  138    Sunday  October 18  17  102    Monday  October 19  21  79    Tuesday  October 20  7  66    Wednesday  October 21  0  54    Thursday  October 22  0  45    Friday  October 23  0  28    Saturday  October 24  0  7    Sunday  October 25  0  0     Here is one possible graph of the results.   A graph showing two plots of the H1N1 outbreak at Bates in 2009: (1) new cases vs. time, and (2) prevalence vs. time   This is a graph showing two plots of the H1N1 outbreak at Bates in 2009. The first is new cases vs. time. The second is prevalence vs. time.     Observations. Observations about the plots may be wide-ranging: this is open-ended. One possible observation is that the New Cases Reported plot has two mini-peaks, compared with the single, more-obvious, peak in the Prevalence plot. Another possible observation is to compare with a typical curve and notice that the Prevalence plot is more similar in appearance than the New Cases Reported plot. Another possible observation is that the Prevalence plot includes higher numbers of students than the New Cases Reported plot, which makes sense, since we count students across each day they are sick, rather than just once when they report that they are sick. These are a few common observations, but to emphasize: there are many more possible. Keep seeking more.   Spreadsheet Formulas. For the Prevalence column, rather than compute values ourself, we can let the spreadsheet do this for us. If you copied the shared spreadsheet, the data values begin in row 5, and Prevalence appears in column D.    To compute prevalence on October 6, rather than type in the number 5, you can type in =C5 to bring in the value 5 from cell C5.    In cell D6, for prevalence on October 7, rather than add 5 and 8 to obtain 13, you can type =C5+C6 .    Similarly, for cell D7, have the spreadsheet add the numbers for cells C5, C6, and C7. For cell D8, have the spreadsheet add the numbers for cells C5, C6, C7, and C8.    Here (along with the next step) is where we start to see how a spreadsheet can automate work for us. For cell D9, use the sum function. Type =sum(C5:C9) to have the spreadsheet add the numbers for all the cells from C5 to C9, that is: C5, C6, C7, C8, and C9.    Now we can stop typing so much. Copy what you typed in cell D9, and paste it into the rest of your prevalence cells in column D. To match the table in , this means pasting into cells D10 through D24. Notice that the spreadsheet does not always add the values in cells C5 through C9: instead, the spreadsheet adds the values in the five cells that are in similar locations, relative to the prevalence cell being computed . To see which cells are being added to obtain each prevalence value, click on that cell in the prevalence column and view the formula.    There is more than one way to compute the formulas for the Prevalence column. If you used spreadsheet formulas but found a different approach (such as starting with the prevalence value the day before, adding the new cases for that day, and subtracting the cases from five days earlier), and if your approach resulted in the same values, then well done!     is lengthy! There is a lot to work through. Mathematically, we are mostly adding numbers, but we must make sure to do so in a way that correctly represents real data from a real outbreak.  Completing is adequate for comparing influenza prevalence data with the compartment of a model. However, at times we may want to compare another compartment of a model to the appropriate data. In , continue your work from to convert the Bates 2009 H1N1 data set into values that can be compared with the and compartments.    Start over with the New Cases Reported data provided in . You may type in the data from , or download a copy of the data in this starter spreadsheet. Then follow the steps below to convert New Cases Reported data into data points that can be compared with an SIR model in which the time unit is days.    To the right of the New Cases Reported column, create columns for , , and .    In the column, enter the numbers or formulas you developed in to represent the prevalence values for this H1N1 outbreak. In other words: replicate your work from , this time placing those values in the column.    Similarly to what you did in , extend the number of rows in the spreadsheet so that the prevalence values, shown here as the column, continue until no one remains in the Infectious compartment.    Next, fill in the column, using the knowledge that there were a total of 1714 students on campus that semester. On October 6, then, there should be Susceptible people. For each day following that, determine that day's value by subtracting the New Cases Reported from the previous day's number of Susceptibles.    Then, fill in the column. To do this, fill in zeroes for the first few days. Continue to think of the contagious period, and the time in the Infectious compartment, as lasting five days. This means that the New Cases Reported on October 6 are in for the days October 6, 7, 8, 9, and 10, and then move into on October 11, so on October 11. On October 12, the New Cases Reported from October 7 move into , so on October 12. Continue similarly: on each day, update the column by adding the New Cases Reported from five days earlier.    Check your work: create one more column titled Check Total . For each row, add the three values in the , , and columns. The resulting numbers should be the same every day, since compartmental models require that every person be in exactly one compartment at each time step. This column is one way to check your work and find possible mistakes: if the numbers do not add up to 1714 on any day(s), there must be an error.    Bonus spreadsheet work: if you added and subtracted cases on your own and entered those numbers in the spreadsheet cells, go back and do all the steps from this activity using formulas.       shows the H1N1 data along with the , , and values for the full outbreak.   Student case reports of H1N1 in fall 2009 at Bates College    Day of Week  Date  New Cases Reported     Check Total    Tuesday  October 6  5  1709  5  0  1714    Wednesday  October 7  8  1701  13  0  1714    Thursday  October 8  2  1699  15  0  1714    Friday  October 9  6  1693  21  0  1714    Saturday  October 10  6  1687  27  0  1714    Sunday  October 11  15  1672  37  5  1714    Monday  October 12  28  1644  57  13  1714    Tuesday  October 13  53  1591  108  15  1714    Wednesday  October 14  44  1547  146  21  1714    Thursday  October 15  20  1527  160  27  1714    Friday  October 16  12  1515  157  42  1714    Saturday  October 17  9  1506  138  70  1714    Sunday  October 18  17  1489  102  123  1714    Monday  October 19  21  1468  79  167  1714    Tuesday  October 20  7  1461  66  187  1714    Wednesday  October 21  0  1461  54  199  1714    Thursday  October 22  0  1461  45  208  1714    Friday  October 23  0  1461  28  225  1714    Saturday  October 24  0  1461  7  246  1714    Sunday  October 25  0  1461  0  253  1714      Spreadsheet Formulas. If you copied the shared spreadsheet, the values begin in row 5, column D, and the values begin in row 5, column F.  First compute the values.    To compute on October 6, rather than type in the number 1709, you can type in =1714-C5 to start with the 1714 students on campus and subtract the five New Cases Reported shown in cell C5.    In cell D6, for on October 7, you can type =D5-C6 . This starts with the 1709 Susceptibles from cell D5 and subtracts the eight New Cases Reported in cell C6.    You can then copy the formula from cell D6 and paste the formula into the rest of column D. The spreadsheet formulas are relative rather than absolute . For our specific formulas, this means that each cell from D6 to D24 starts with the number in the cell directly above, and subtracts the number in the cell directly to the left. (If the formulas were absolute , we would always compute =D5-C6 , but this would not compute correct values for at each day of the outbreak.)    Next compute the values.    Enter for on October 6, 7, 8, 9, and 10, that is, in cells F5, F6, F7, F8, and F9.    In cell F10, for on October 11, you can type =F9+C5 . This starts with the Removed population of 0 in cell F9 and adds the New Cases Reported in cell C5. These New Cases Reported have just moved from the Infectious compartment to the Removed compartment.    You can then copy the formula from cell F10 and paste the formula into the rest of column F. As described for computing the column: the formulas in the cells are relative, meaning that each day's value is based on the previous day's value and the number of New Cases Reported from five days earlier.    Finally, compute the Check Total values.    In cell G5, type =sum(D5:F5) or type =D5+E5+F5 . Either of these formulas adds the , , and values for this row, and the result should be 1714.    You can then copy the formula from cell G5 and paste this formula into the rest of column G. Yet again: the formulas in the cells are relative, meaning that each day's Check Total value is the sum of that day's , , and values. Click on multiple cells in column G to confirm this. Then use this column to confirm that your result is 1714 in all of column G, from cell G5 down to cell G24. If any of your results do not equal 1714, this indicates an error somewhere in your spreadsheet. Take time to track down and fix any such errors.     There may be other ways to compute these formulas. If you used spreadsheet formulas but found a different approach, and if your approach resulted in the same values, then well done!      Use your completed work from to create plots of the , , and data that can be constructed from the Bates H1N1 New Cases Reported data set. Describe three observations about the three plots you create and how they compare with the kinds of curves you have seen in Python solutions for SIR models. (If you did not complete , transfer the results in to a spreadsheet so that you can create the , , and graphs.)  Recreate prevalence data for the data set in , but using different assumptions than in . Here, instead of assuming a 5-day Infectious period, create prevalence data with the assumption that there is a 4-day Infectious period. Separately, create prevalence data with the assumption that there is a 6-day Infectious period. On a single set of axes, plot the graphs of both 4-day prevalence and 6-day prevalence, that is, plot in the two cases when we think of influenza as contagious for four days and when we think of influenza as contagious for six days. Write at least three observations about these plots. At least two of your observations should directly compare the plots with each other.    "
},
{
  "id": "intro-influenza-data-1",
  "level": "2",
  "url": "ch-preparing-influenza-data-to-compare-with-a-model.html#intro-influenza-data-1",
  "type": "Goals",
  "number": "",
  "title": "",
  "body": "   Distinguish between the vocabulary terms incidence and prevalence when describing categories of infectious cases in an outbreak    Translate the numbers in a typical data set from an outbreak into a related set of numbers that we can compare with the output of a model    Build skills for working with numbers and formulas in a spreadsheet    "
},
{
  "id": "expl-activity-influenza-data",
  "level": "2",
  "url": "ch-preparing-influenza-data-to-compare-with-a-model.html#expl-activity-influenza-data",
  "type": "Exploration",
  "number": "9.1",
  "title": "Comparing Data: New Zombies vs. All Current Zombies.",
  "body": " Comparing Data: New Zombies vs. All Current Zombies   We return to the Zombie Game App, using the Zombie Mortality feature in a similar way to what we first saw in . This time, our goal is to distinguish between the data for # Zombies and the data for New Infections .    The data table below comes from the Zombie Game App. This table results from a simulation in which zombies are designated as mortal, with a lifespan (if zombies can be said to have a lifespan) of two days. Once a zombie surpasses its lifespan, it moves to the Removed category, meaning it no longer appears on the hex grid and can no longer infect humans.   Table of sample data from a human zombie simulation in which zombies have a two-day lifespan   Sample data for a full simulation from the Zombie Game App, viewed as a table. In this simulation, zombies have a two-day lifespan.    On paper or in a spreadsheet: create a plot with Round # on the horizontal axis and # Zombies on the vertical axis. Separately, create a plot with Round # on the horizontal axis and New Infections on the vertical axis.  Make at least three observations, comparing and contrasting the two plots you have made.    Next, open the Zombie Game App to generate your own data. Within the app, check the box labeled Zombie Mortality , located under the heading Other Options . Once you do so, you can select the Zombie Lifespan (days) . Then run the game and make note of your resulting data table. Again, graph the data for # Zombies and for New Infections , as you did in part (a).  Which of your observations from part (a) remain true? If any change, which observations change, and in what ways do they change?    When running the Zombie Game App in part (b), you may also choose to change the default Human Start Count to make it more likely for Humans to win the game. Write out at least three different combinations of Zombie Lifespan (days) and Human Start Count that you used and found that Humans won the game.  Next, investigate the question: when keeping Zombie Lifespan (days) the same, does increasing or decreasing the Human Start Count make it more likely for Humans to win? Support your response using evidence you generate from the Zombie Game App.  What mathematical epidemiology quantity that we have studied provides insight into answering the question in the previous paragraph?   "
},
{
  "id": "sec-incidence-and-prevalence-2",
  "level": "2",
  "url": "ch-preparing-influenza-data-to-compare-with-a-model.html#sec-incidence-and-prevalence-2",
  "type": "Paragraph (with a defined term)",
  "number": "",
  "title": "",
  "body": "Incidence Prevalence "
},
{
  "id": "activity-incidence-prevalence",
  "level": "2",
  "url": "ch-preparing-influenza-data-to-compare-with-a-model.html#activity-incidence-prevalence",
  "type": "Activity",
  "number": "9.2",
  "title": "",
  "body": "  Below is a graph created from a data set generated by the Zombie Game App. This data set was created using the same app settings as the data in , that is, zombies are mortal and have a two-day lifespan . The specific data values here are different than those in .   Graph of New Infections vs. Round Number, and Number of Zombies vs. Round Number, created using data from a Zombie Game App simulation in which zombies have a two-day lifespan   Graph of New Infections vs. Round Number, and Number of Zombies vs. Round Number, created using data from a Zombie Game App simulation in which zombies have a two-day lifespan    Spend some time thinking about the graph in while also thinking about your work in . Then respond to the following prompts.    First, simply list observations you had while comparing with what you did in . List at least three observations.    Next, read carefully the descriptions for incidence and prevalence at the start of . Which of the curves in seems to you to better represent incidence? And which curve seems to better represent prevalence? Explain your reasoning.    Now compare with graphs you have seen for SIR models, when we plot solution curves for , , and . Which of the data plots in -- the New Infections plot, or the # Zombies plot -- seems better for comparing with the curve we would generate in an SIR model of an outbreak?        There can be many kinds of observations. Be thoughtful; be creative; think broadly.    The New Infections curve tells us the number of new cases per round, and this closely mirrors the wording in the definition of incidence. The # Zombies curve tells us the total number of active zombies per round, and this wording is very similar to wording in the definition of prevalence.    The curve often describes all active infections at a given time . This compares best with the data for # Zombies vs. time. (This is not a perfect comparison for every outbreak, as sometimes means a person is contagious but does not yet show symptoms. However, in the basic zombie game, where is a person is contagious exactly when they are a zombie, the curve is well matched with data for # Zombies.)     "
},
{
  "id": "activity-h1n1-data-fall-2009",
  "level": "2",
  "url": "ch-preparing-influenza-data-to-compare-with-a-model.html#activity-h1n1-data-fall-2009",
  "type": "Activity",
  "number": "9.3",
  "title": "",
  "body": "  After the 2009 outbreak of H1N1 influenza virus on the Bates College campus, the Dean of Students and Student Health Services were kind enough to share their data on new infections among students. As is common with data sets for an outbreak: information that could identify specific individuals has been removed, and the data set takes the form of new case reports. The data set appears in .   Student case reports of H1N1 in fall 2009 at Bates College    Day of Week  Date  New Cases Reported    Tuesday  October 6  5    Wednesday  October 7  8    Thursday  October 8  2    Friday  October 9  6    Saturday  October 10  6    Sunday  October 11  15    Monday  October 12  28    Tuesday  October 13  53    Wednesday  October 14  44    Thursday  October 15  20    Friday  October 16  12    Saturday  October 17  9    Sunday  October 18  17    Monday  October 19  21    Tuesday  October 20  7     Influenza moves quickly. The incubation period is short, often just two days or even shorter, and people can become contagious before showing symptoms. Two articles to support this are 2009 H1N1 Influenza by Seth J. Sullivan, Robert M. Jacobson, Walter R. Dowdle, and Gregory A. Poland, published January 2010 in the Mayo Clinic Proceedings , and Outbreak of 2009 pandemic influenza A (H1N1) at a New York City school by Justin Lessler, Nicholas G. Reich, and Derek A. T. Cummings, published in 2009 in the New England Journal of Medicine. For this reason, we use an SIR model instead of an SEIR model. There are multiple estimates for how long people remain contagious, with five days as a commonly provided number, though for some people the contagious period may be a little shorter or a few days longer. The European Centre for Disease Prevention and Control includes the estimate of five days for adults and seven days for children on their web page Questions and answers on the pandemic (H1N1) 2009 , last accessed 16 September 2024, available at .   Given this information about the incubation period and contagious period of H1N1, follow the steps below to convert the incidence data in to prevalence numbers that can be compared with the I compartment of an SIR model in which the time unit is days.     Create your own editable table of data by opening this publicly shared spreadsheet and making your own copy. Alternatively, create your table by opening a blank spreadsheet and copying into it the data from .    Create a new column in your table and give this new column the title Prevalence . Compute the H1N1 prevalence for each day by supposing that people are contagious for five days. Measuring prevalence, the number of contagious people, and the number of people in the compartment are essentially the same for H1N1, as people become contagious very close to the time when they begin showing symptoms, and they stop being contagious approximately when they stop showing symptoms. This means, for instance, that the five initial cases from October 6 remain in the Prevalence column, and hence in , for October 6, 7, 8, 9, and 10. Then, on October 11, the five cases from October 6 should no longer be in the Prevalence column.    Extend the length of your Prevalence column so that it represents the full five days of contagion for all the New Cases Reported. To extend the length of the Prevalence column, add extra rows at the bottom of the table. The last row should have a Prevalence value of (and should be the first row in which Prevalence equals ).    Create a plot showing New Cases Reported on the vertical axis, with time on the horizontal axis. The horizontal axis in your chart should show the dates. On the same axes, create a plot showing Prevalence on the vertical axis, with time again on the horizontal axis.  To create this type of spreadsheet plot in Google Sheets, choose menu item Insert , then choose Chart , and then in the Chart Editor, select Line chart . The Chart Editor provides several ways to edit the chart.  Alternatively, in Microsoft Excel, choose menu item Insert , and then from the Chart menu, select one of the Scatter options.    Discuss with your group: how does each of the two plots compare (or not) with typical curves in outbreaks? Make three or more observations.    Bonus spreadsheet work, if time permits: go back to the Prevalence column you created. If you have not yet used spreadsheet formulas to determine the column entries, try to do so. Formulas let you refer to other cells in the spreadsheet, rather than re-typing their numbers every time you re-use the same numbers.       shows the H1N1 data along with the prevalence values, including extra rows to display prevalence for all cases of H1N1.   Student case reports of H1N1 in fall 2009 at Bates College    Day of Week  Date  New Cases Reported  Prevalence    Tuesday  October 6  5  5    Wednesday  October 7  8  13    Thursday  October 8  2  15    Friday  October 9  6  21    Saturday  October 10  6  27    Sunday  October 11  15  37    Monday  October 12  28  57    Tuesday  October 13  53  108    Wednesday  October 14  44  146    Thursday  October 15  20  160    Friday  October 16  12  157    Saturday  October 17  9  138    Sunday  October 18  17  102    Monday  October 19  21  79    Tuesday  October 20  7  66    Wednesday  October 21  0  54    Thursday  October 22  0  45    Friday  October 23  0  28    Saturday  October 24  0  7    Sunday  October 25  0  0     Here is one possible graph of the results.   A graph showing two plots of the H1N1 outbreak at Bates in 2009: (1) new cases vs. time, and (2) prevalence vs. time   This is a graph showing two plots of the H1N1 outbreak at Bates in 2009. The first is new cases vs. time. The second is prevalence vs. time.     Observations. Observations about the plots may be wide-ranging: this is open-ended. One possible observation is that the New Cases Reported plot has two mini-peaks, compared with the single, more-obvious, peak in the Prevalence plot. Another possible observation is to compare with a typical curve and notice that the Prevalence plot is more similar in appearance than the New Cases Reported plot. Another possible observation is that the Prevalence plot includes higher numbers of students than the New Cases Reported plot, which makes sense, since we count students across each day they are sick, rather than just once when they report that they are sick. These are a few common observations, but to emphasize: there are many more possible. Keep seeking more.   Spreadsheet Formulas. For the Prevalence column, rather than compute values ourself, we can let the spreadsheet do this for us. If you copied the shared spreadsheet, the data values begin in row 5, and Prevalence appears in column D.    To compute prevalence on October 6, rather than type in the number 5, you can type in =C5 to bring in the value 5 from cell C5.    In cell D6, for prevalence on October 7, rather than add 5 and 8 to obtain 13, you can type =C5+C6 .    Similarly, for cell D7, have the spreadsheet add the numbers for cells C5, C6, and C7. For cell D8, have the spreadsheet add the numbers for cells C5, C6, C7, and C8.    Here (along with the next step) is where we start to see how a spreadsheet can automate work for us. For cell D9, use the sum function. Type =sum(C5:C9) to have the spreadsheet add the numbers for all the cells from C5 to C9, that is: C5, C6, C7, C8, and C9.    Now we can stop typing so much. Copy what you typed in cell D9, and paste it into the rest of your prevalence cells in column D. To match the table in , this means pasting into cells D10 through D24. Notice that the spreadsheet does not always add the values in cells C5 through C9: instead, the spreadsheet adds the values in the five cells that are in similar locations, relative to the prevalence cell being computed . To see which cells are being added to obtain each prevalence value, click on that cell in the prevalence column and view the formula.    There is more than one way to compute the formulas for the Prevalence column. If you used spreadsheet formulas but found a different approach (such as starting with the prevalence value the day before, adding the new cases for that day, and subtracting the cases from five days earlier), and if your approach resulted in the same values, then well done!   "
},
{
  "id": "activity-h1n1-data-fall-2009-S-I-R",
  "level": "2",
  "url": "ch-preparing-influenza-data-to-compare-with-a-model.html#activity-h1n1-data-fall-2009-S-I-R",
  "type": "Activity",
  "number": "9.4",
  "title": "",
  "body": "  Start over with the New Cases Reported data provided in . You may type in the data from , or download a copy of the data in this starter spreadsheet. Then follow the steps below to convert New Cases Reported data into data points that can be compared with an SIR model in which the time unit is days.    To the right of the New Cases Reported column, create columns for , , and .    In the column, enter the numbers or formulas you developed in to represent the prevalence values for this H1N1 outbreak. In other words: replicate your work from , this time placing those values in the column.    Similarly to what you did in , extend the number of rows in the spreadsheet so that the prevalence values, shown here as the column, continue until no one remains in the Infectious compartment.    Next, fill in the column, using the knowledge that there were a total of 1714 students on campus that semester. On October 6, then, there should be Susceptible people. For each day following that, determine that day's value by subtracting the New Cases Reported from the previous day's number of Susceptibles.    Then, fill in the column. To do this, fill in zeroes for the first few days. Continue to think of the contagious period, and the time in the Infectious compartment, as lasting five days. This means that the New Cases Reported on October 6 are in for the days October 6, 7, 8, 9, and 10, and then move into on October 11, so on October 11. On October 12, the New Cases Reported from October 7 move into , so on October 12. Continue similarly: on each day, update the column by adding the New Cases Reported from five days earlier.    Check your work: create one more column titled Check Total . For each row, add the three values in the , , and columns. The resulting numbers should be the same every day, since compartmental models require that every person be in exactly one compartment at each time step. This column is one way to check your work and find possible mistakes: if the numbers do not add up to 1714 on any day(s), there must be an error.    Bonus spreadsheet work: if you added and subtracted cases on your own and entered those numbers in the spreadsheet cells, go back and do all the steps from this activity using formulas.       shows the H1N1 data along with the , , and values for the full outbreak.   Student case reports of H1N1 in fall 2009 at Bates College    Day of Week  Date  New Cases Reported     Check Total    Tuesday  October 6  5  1709  5  0  1714    Wednesday  October 7  8  1701  13  0  1714    Thursday  October 8  2  1699  15  0  1714    Friday  October 9  6  1693  21  0  1714    Saturday  October 10  6  1687  27  0  1714    Sunday  October 11  15  1672  37  5  1714    Monday  October 12  28  1644  57  13  1714    Tuesday  October 13  53  1591  108  15  1714    Wednesday  October 14  44  1547  146  21  1714    Thursday  October 15  20  1527  160  27  1714    Friday  October 16  12  1515  157  42  1714    Saturday  October 17  9  1506  138  70  1714    Sunday  October 18  17  1489  102  123  1714    Monday  October 19  21  1468  79  167  1714    Tuesday  October 20  7  1461  66  187  1714    Wednesday  October 21  0  1461  54  199  1714    Thursday  October 22  0  1461  45  208  1714    Friday  October 23  0  1461  28  225  1714    Saturday  October 24  0  1461  7  246  1714    Sunday  October 25  0  1461  0  253  1714      Spreadsheet Formulas. If you copied the shared spreadsheet, the values begin in row 5, column D, and the values begin in row 5, column F.  First compute the values.    To compute on October 6, rather than type in the number 1709, you can type in =1714-C5 to start with the 1714 students on campus and subtract the five New Cases Reported shown in cell C5.    In cell D6, for on October 7, you can type =D5-C6 . This starts with the 1709 Susceptibles from cell D5 and subtracts the eight New Cases Reported in cell C6.    You can then copy the formula from cell D6 and paste the formula into the rest of column D. The spreadsheet formulas are relative rather than absolute . For our specific formulas, this means that each cell from D6 to D24 starts with the number in the cell directly above, and subtracts the number in the cell directly to the left. (If the formulas were absolute , we would always compute =D5-C6 , but this would not compute correct values for at each day of the outbreak.)    Next compute the values.    Enter for on October 6, 7, 8, 9, and 10, that is, in cells F5, F6, F7, F8, and F9.    In cell F10, for on October 11, you can type =F9+C5 . This starts with the Removed population of 0 in cell F9 and adds the New Cases Reported in cell C5. These New Cases Reported have just moved from the Infectious compartment to the Removed compartment.    You can then copy the formula from cell F10 and paste the formula into the rest of column F. As described for computing the column: the formulas in the cells are relative, meaning that each day's value is based on the previous day's value and the number of New Cases Reported from five days earlier.    Finally, compute the Check Total values.    In cell G5, type =sum(D5:F5) or type =D5+E5+F5 . Either of these formulas adds the , , and values for this row, and the result should be 1714.    You can then copy the formula from cell G5 and paste this formula into the rest of column G. Yet again: the formulas in the cells are relative, meaning that each day's Check Total value is the sum of that day's , , and values. Click on multiple cells in column G to confirm this. Then use this column to confirm that your result is 1714 in all of column G, from cell G5 down to cell G24. If any of your results do not equal 1714, this indicates an error somewhere in your spreadsheet. Take time to track down and fix any such errors.     There may be other ways to compute these formulas. If you used spreadsheet formulas but found a different approach, and if your approach resulted in the same values, then well done!   "
},
{
  "id": "exercises-ch-influenza-data-1",
  "level": "2",
  "url": "ch-preparing-influenza-data-to-compare-with-a-model.html#exercises-ch-influenza-data-1",
  "type": "Exercise",
  "number": "9.3.1",
  "title": "",
  "body": "Use your completed work from to create plots of the , , and data that can be constructed from the Bates H1N1 New Cases Reported data set. Describe three observations about the three plots you create and how they compare with the kinds of curves you have seen in Python solutions for SIR models. (If you did not complete , transfer the results in to a spreadsheet so that you can create the , , and graphs.) "
},
{
  "id": "exercises-ch-influenza-data-2",
  "level": "2",
  "url": "ch-preparing-influenza-data-to-compare-with-a-model.html#exercises-ch-influenza-data-2",
  "type": "Exercise",
  "number": "9.3.2",
  "title": "",
  "body": "Recreate prevalence data for the data set in , but using different assumptions than in . Here, instead of assuming a 5-day Infectious period, create prevalence data with the assumption that there is a 4-day Infectious period. Separately, create prevalence data with the assumption that there is a 6-day Infectious period. On a single set of axes, plot the graphs of both 4-day prevalence and 6-day prevalence, that is, plot in the two cases when we think of influenza as contagious for four days and when we think of influenza as contagious for six days. Write at least three observations about these plots. At least two of your observations should directly compare the plots with each other. "
},
{
  "id": "ch-residual-sum-of-squares-improving-a-models-fit-to-data",
  "level": "1",
  "url": "ch-residual-sum-of-squares-improving-a-models-fit-to-data.html",
  "type": "Chapter",
  "number": "10",
  "title": "* Residual Sum of Squares: Improving a Model’s Fit to Data",
  "body": " * Residual Sum of Squares: Improving a Model's Fit to Data   ***This chapter is under construction.***       Use data from case reports to implement a new method for estimating the value of the transmission parameter     Understand how a for loop in Python helps us test many possible values of with one click of the Evaluate button    Ensure that the results from our math-and-coding-based approach to estimating make biological sense     So far, we have estimated in two ways: (1) visually, making adjustments so that data and graphs are closer together, starting in , and (2) using a formula involving and parameters from our model, such as in and , to substitute in values we could find from epidemiological information and solve for , which is typically the only unknown value in the formula. In this chapter, we learn a new approach.  Begin in by examining data points as well as values determined by an SI model. In this exploration, think about mathematical approaches to improve the model's fit to data.   Visually Demonstrating Differences Between a Model and Data   This example focuses on an SI model, similar to what we worked with in and . Use the code shown, and its output, to answer the questions below.     Copy the graph from the Python output, either drawing it by hand or creating a screenshot.    For the values , , , , , , and that are printed out in the Python output above the graph, label on your copy of the graph where each value is shown.    Then write out in words what the values , , , , , , and represent: are these data points, or values generated by a mathematical model?      Next, read lines 9 and 10 in the Python code.    These values combine to form several points on the output graph. On your copy of the graph, label the points determined by lines 9 and 10.    Then write out in words what the values from lines 9 and 10 represent: are these data points, or values generated by a mathematical model?      We now put parts (a) and (b) together.    Use your labeled graph to compare the values in part (a) with the values in part (b). Can you draw a visual way of comparing these values at each of the times , , , , , , and ?    Starting with the visual comparison you just described: What would change visually if the values from the model, and the values at each data point, were closer together?    Turn your visual comparison ideas into some mathematical suggestions for identifying when the model and the data are closer together.         Residual Sum of Squares: An Introduction  One way to compare data with the output of a model is by computing the Residual Sum of Squares, often abbreviated to RSS. When we work with a single model to try to improve the fit of the model to a data set, RSS is a good option. shows the process of computing RSS for a model with one choice for a value of . Later, we show how to compare RSS for different values of used in the same model.    In we worked with both a data set, and model output, for times . The values appear in , with model values rounded to two decimal places.   SI Model: Data Values and Model Output    Time  Data Value  Model Output    0  1  1.0    1  2  4.19    2  4  14.54    3  10  32.38    4  22  44.58    5  40  48.68    6  50  49.70     RSS compares each Data Value from with the Model Output from the same time by subtracting one from the other and squaring the result.    Try at least two of these comparisons on your own: for times and , subtract the Model Output in from the corresponding Data Value and square the result. Later in this activity, we will compare these hand-computed values with the corresponding values computed via Python.    Next, read the code block below to identify where in the code, and how, we subtract each Model Output from its corresponding Data Value. Also identify where and how the code adds up all the squared differences to produce a total value for RSS.     Then run the code block. Compare its results with your results for and in part (1) of this Activity. Describe how the results are similar and how they are different, and provide an explanation for why they are not identical.  Then examine all the results from the code, including the total value for RSS for this model with this data set.    Once you understand how the code works, experiment with different values of . Your goal is to improve the fit between the model and the data set. While adjusting , consider including a plot of the graph showing both the solution curve of the model and the data points. (You can do this by copying plotting commands from the Python block in this chapter's Exploration and pasting them into the Python block in this activity.)        At time , compute to get the value . At time , compute to get the value .    In line 25, the code I_data[x] - sol[10*x, 1] starts with the data value given by I_data[x] and subtracts the model value given by sol[10*x, 1] .  The x in I_data[x] is determined by the range of x values shown in line 24: range(0,7) tells Python to allow x to equal 0, 1, 2, 3, 4, 5, and 6. Python ranges do not include the last number shown, so 7 is not included in range(0,7) .  When x equals 0, I_data[0] equals the initial value of the I_data list in line 8, that is, I_data[0] equals 1. Then I_data[1] equals 2, I_data[2] equals 4, and so on, continuing until I_data[6] equals 50.  The code sol[10*x, 1] examines Python's list of model solutions, which we have named sol . To see the full list sol , you can add a new line of code at the end of the Python block, and in that line, type print(sol) . Running the Python block with the print(sol) command shows that the list sol is arranged into rows and columns. Each row shows the value of both and at a specific time value. The initial column, which Python labels column 0 , shows the values of at all times we computed. The next column, which Python labels column 1 , shows the values of at all times we computed.  The times for which we compute solutions are determined by the command t_range = np.arange(0.0, 8.0, 0.1) in line 18. This command says to compute solutions starting at time 0.0, and ending at time 8.0, moving in time increments of 0.1. This means we compute solutions at times 0.0, 0.1, 0.2, and so on, with the last solutions computed at time 7.9. To see the values in t_range , you can add a new line of code: print(t_range) . Running the Python block with the command print(t_range) shows the list of all t_range values.    The code produces the value for the squared distance at time . Our hand-computed value from part (1) of this Activity was . We see that these values are very close to each other. The difference between them is due to our rounding the values in to two decimal points.  Similarly, the code produces the value for the squared distance at time , whereas our hand-computed value from part (1) of this Activity was . Again, the difference in values is due to rounding.  From here, make additional observations. This is open-ended. Observations may include noticing that the squared distances are notably larger when the data point is further from the value on the solution curve of the model, compared with when the data point is close to the value on the solution curve of the model. There may also be observations about the overall number computed for RSS. This overall RSS number is helpful when we reach part (4) and try to improve the fit of the model to data  Many other observations are possible.    This is open-ended. Values of that are closer to tend to produce a better fit of model to data, compared with the starting value of . You may wish to change additional decimal places of to improve the fit even further.  It is also appropriate to give visual (graph-based) and verbal (word-based) descriptions of changes in the graph of model and data, as the value of changes.        Residual Sum of Squares: Quickly Comparing Multiple Parameter Values  As we saw in , we can compare a model with data by trying different parameter values, such as by allowing to take on different values. In the Python code block within , for every value of we wanted to try, we had to change the value of within the code and run the code again. Next, we wrap another for loop around the RSS for loop, so that we can test multiple values of with one click of the Evaluate button.    This Activity focuses on coding, with the goal of comparing RSS values for multiple values of a parameter without having to run Python code separately for every value of that parameter. Instead, read the code in the Python block below, and use what you read to answer the questions that follow.     (Questions to appear)         Influenza Data and RSS   Now try computing RSS using the influenza prevalence data. The data are already written into the code block below. Time 0 is the same as October 6.      As described starting on page 356 of Mathematical Models in Population Biology and Epidemiology, second edition, by Fred Brauer and Carlos Castillo-Chavez, the village of Eyam, in England, was affected by bubonic plague in 1665-1666. There were two separate plague outbreaks, and shows data for the second of these outbreaks.  Plague Data from Eyam, 1666    Date (Day)  Susceptibles  Infectious    July 3\/4 (Day 0)  235  14.5    July 19 (Day 15.5)  201  22    August 3\/4 (Day 31)  153.5  29    August 19 (Day 46.5)  121  21    September 3\/4 (Day 62)  108  8    September 19 (Day 77.5)  97  8    October 4\/5 (Day 93)  Unknown  Unknown    October 20 (Day 108.5)  83  0      Use Python to plot these data.    Then, use the information that we start with a population of 250 people, the infectious period was 11 days, and has been estimated to be between 1.6 and 1.9, to construct an SIR model for this outbreak.    Then use an RSS approach, along with the data and your SIR model, to select a preferred value of for this SIR model. You may choose to compute separately for each day on which population values are available, or you can use a Python for loop for the six consecutive data points, and then add in for the October 20 data, in order to complete each total RSS value. Additionally, be sure that Python selects the correct value from its model output: this will require changing the 10 in the sol[10*x, 1] part of the code.  (NOTE for the Bates Mathematical Models in Biology course in Fall 2024: you may compute RSS for comparing the model with just the first six data points, rather than needing to include the last data point, and rather than needing to figure out how to skip over the \"Unknown\" data point. However, if you can find a way to include the last data point, go ahead and include it!)  In your homework, show your Python code, and show at least three different values of that you tried, along with the corresponding RSS value for each value of . Which value of leads to the smallest RSS value? Confirm that this value of makes biological sense, based on the numbers or ranges of numbers we know for , , and .     "
},
{
  "id": "ch-residual-sum-of-squares-improving-a-models-fit-to-data-2",
  "level": "2",
  "url": "ch-residual-sum-of-squares-improving-a-models-fit-to-data.html#ch-residual-sum-of-squares-improving-a-models-fit-to-data-2",
  "type": "Paragraph (with a defined term)",
  "number": "",
  "title": "",
  "body": "***This chapter is under construction.*** "
},
{
  "id": "intro-RSS-1",
  "level": "2",
  "url": "ch-residual-sum-of-squares-improving-a-models-fit-to-data.html#intro-RSS-1",
  "type": "Goals",
  "number": "",
  "title": "",
  "body": "   Use data from case reports to implement a new method for estimating the value of the transmission parameter     Understand how a for loop in Python helps us test many possible values of with one click of the Evaluate button    Ensure that the results from our math-and-coding-based approach to estimating make biological sense    "
},
{
  "id": "expl-RSS",
  "level": "2",
  "url": "ch-residual-sum-of-squares-improving-a-models-fit-to-data.html#expl-RSS",
  "type": "Exploration",
  "number": "10.1",
  "title": "Visually Demonstrating Differences Between a Model and Data.",
  "body": " Visually Demonstrating Differences Between a Model and Data   This example focuses on an SI model, similar to what we worked with in and . Use the code shown, and its output, to answer the questions below.     Copy the graph from the Python output, either drawing it by hand or creating a screenshot.    For the values , , , , , , and that are printed out in the Python output above the graph, label on your copy of the graph where each value is shown.    Then write out in words what the values , , , , , , and represent: are these data points, or values generated by a mathematical model?      Next, read lines 9 and 10 in the Python code.    These values combine to form several points on the output graph. On your copy of the graph, label the points determined by lines 9 and 10.    Then write out in words what the values from lines 9 and 10 represent: are these data points, or values generated by a mathematical model?      We now put parts (a) and (b) together.    Use your labeled graph to compare the values in part (a) with the values in part (b). Can you draw a visual way of comparing these values at each of the times , , , , , , and ?    Starting with the visual comparison you just described: What would change visually if the values from the model, and the values at each data point, were closer together?    Turn your visual comparison ideas into some mathematical suggestions for identifying when the model and the data are closer together.     "
},
{
  "id": "activity-rss-intro",
  "level": "2",
  "url": "ch-residual-sum-of-squares-improving-a-models-fit-to-data.html#activity-rss-intro",
  "type": "Activity",
  "number": "10.2",
  "title": "",
  "body": "  In we worked with both a data set, and model output, for times . The values appear in , with model values rounded to two decimal places.   SI Model: Data Values and Model Output    Time  Data Value  Model Output    0  1  1.0    1  2  4.19    2  4  14.54    3  10  32.38    4  22  44.58    5  40  48.68    6  50  49.70     RSS compares each Data Value from with the Model Output from the same time by subtracting one from the other and squaring the result.    Try at least two of these comparisons on your own: for times and , subtract the Model Output in from the corresponding Data Value and square the result. Later in this activity, we will compare these hand-computed values with the corresponding values computed via Python.    Next, read the code block below to identify where in the code, and how, we subtract each Model Output from its corresponding Data Value. Also identify where and how the code adds up all the squared differences to produce a total value for RSS.     Then run the code block. Compare its results with your results for and in part (1) of this Activity. Describe how the results are similar and how they are different, and provide an explanation for why they are not identical.  Then examine all the results from the code, including the total value for RSS for this model with this data set.    Once you understand how the code works, experiment with different values of . Your goal is to improve the fit between the model and the data set. While adjusting , consider including a plot of the graph showing both the solution curve of the model and the data points. (You can do this by copying plotting commands from the Python block in this chapter's Exploration and pasting them into the Python block in this activity.)        At time , compute to get the value . At time , compute to get the value .    In line 25, the code I_data[x] - sol[10*x, 1] starts with the data value given by I_data[x] and subtracts the model value given by sol[10*x, 1] .  The x in I_data[x] is determined by the range of x values shown in line 24: range(0,7) tells Python to allow x to equal 0, 1, 2, 3, 4, 5, and 6. Python ranges do not include the last number shown, so 7 is not included in range(0,7) .  When x equals 0, I_data[0] equals the initial value of the I_data list in line 8, that is, I_data[0] equals 1. Then I_data[1] equals 2, I_data[2] equals 4, and so on, continuing until I_data[6] equals 50.  The code sol[10*x, 1] examines Python's list of model solutions, which we have named sol . To see the full list sol , you can add a new line of code at the end of the Python block, and in that line, type print(sol) . Running the Python block with the print(sol) command shows that the list sol is arranged into rows and columns. Each row shows the value of both and at a specific time value. The initial column, which Python labels column 0 , shows the values of at all times we computed. The next column, which Python labels column 1 , shows the values of at all times we computed.  The times for which we compute solutions are determined by the command t_range = np.arange(0.0, 8.0, 0.1) in line 18. This command says to compute solutions starting at time 0.0, and ending at time 8.0, moving in time increments of 0.1. This means we compute solutions at times 0.0, 0.1, 0.2, and so on, with the last solutions computed at time 7.9. To see the values in t_range , you can add a new line of code: print(t_range) . Running the Python block with the command print(t_range) shows the list of all t_range values.    The code produces the value for the squared distance at time . Our hand-computed value from part (1) of this Activity was . We see that these values are very close to each other. The difference between them is due to our rounding the values in to two decimal points.  Similarly, the code produces the value for the squared distance at time , whereas our hand-computed value from part (1) of this Activity was . Again, the difference in values is due to rounding.  From here, make additional observations. This is open-ended. Observations may include noticing that the squared distances are notably larger when the data point is further from the value on the solution curve of the model, compared with when the data point is close to the value on the solution curve of the model. There may also be observations about the overall number computed for RSS. This overall RSS number is helpful when we reach part (4) and try to improve the fit of the model to data  Many other observations are possible.    This is open-ended. Values of that are closer to tend to produce a better fit of model to data, compared with the starting value of . You may wish to change additional decimal places of to improve the fit even further.  It is also appropriate to give visual (graph-based) and verbal (word-based) descriptions of changes in the graph of model and data, as the value of changes.     "
},
{
  "id": "activity-rss-beta-loop",
  "level": "2",
  "url": "ch-residual-sum-of-squares-improving-a-models-fit-to-data.html#activity-rss-beta-loop",
  "type": "Activity",
  "number": "10.3",
  "title": "",
  "body": "  This Activity focuses on coding, with the goal of comparing RSS values for multiple values of a parameter without having to run Python code separately for every value of that parameter. Instead, read the code in the Python block below, and use what you read to answer the questions that follow.     (Questions to appear)      "
},
{
  "id": "exercises-ch-rss-1",
  "level": "2",
  "url": "ch-residual-sum-of-squares-improving-a-models-fit-to-data.html#exercises-ch-rss-1",
  "type": "Exercise",
  "number": "10.4.1",
  "title": "",
  "body": "As described starting on page 356 of Mathematical Models in Population Biology and Epidemiology, second edition, by Fred Brauer and Carlos Castillo-Chavez, the village of Eyam, in England, was affected by bubonic plague in 1665-1666. There were two separate plague outbreaks, and shows data for the second of these outbreaks.  Plague Data from Eyam, 1666    Date (Day)  Susceptibles  Infectious    July 3\/4 (Day 0)  235  14.5    July 19 (Day 15.5)  201  22    August 3\/4 (Day 31)  153.5  29    August 19 (Day 46.5)  121  21    September 3\/4 (Day 62)  108  8    September 19 (Day 77.5)  97  8    October 4\/5 (Day 93)  Unknown  Unknown    October 20 (Day 108.5)  83  0      Use Python to plot these data.    Then, use the information that we start with a population of 250 people, the infectious period was 11 days, and has been estimated to be between 1.6 and 1.9, to construct an SIR model for this outbreak.    Then use an RSS approach, along with the data and your SIR model, to select a preferred value of for this SIR model. You may choose to compute separately for each day on which population values are available, or you can use a Python for loop for the six consecutive data points, and then add in for the October 20 data, in order to complete each total RSS value. Additionally, be sure that Python selects the correct value from its model output: this will require changing the 10 in the sol[10*x, 1] part of the code.  (NOTE for the Bates Mathematical Models in Biology course in Fall 2024: you may compute RSS for comparing the model with just the first six data points, rather than needing to include the last data point, and rather than needing to figure out how to skip over the \"Unknown\" data point. However, if you can find a way to include the last data point, go ahead and include it!)  In your homework, show your Python code, and show at least three different values of that you tried, along with the corresponding RSS value for each value of . Which value of leads to the smallest RSS value? Confirm that this value of makes biological sense, based on the numbers or ranges of numbers we know for , , and .   "
},
{
  "id": "ch-akaike-information-criterion-comparing-different-models",
  "level": "1",
  "url": "ch-akaike-information-criterion-comparing-different-models.html",
  "type": "Chapter",
  "number": "11",
  "title": "* Akaike Information Criterion: Comparing Different Models",
  "body": " * Akaike Information Criterion: Comparing Different Models   ***This chapter is under construction.***       "
},
{
  "id": "ch-akaike-information-criterion-comparing-different-models-2",
  "level": "2",
  "url": "ch-akaike-information-criterion-comparing-different-models.html#ch-akaike-information-criterion-comparing-different-models-2",
  "type": "Paragraph (with a defined term)",
  "number": "",
  "title": "",
  "body": "***This chapter is under construction.*** "
},
{
  "id": "ch-epidemic-vs-endemic-models",
  "level": "1",
  "url": "ch-epidemic-vs-endemic-models.html",
  "type": "Chapter",
  "number": "12",
  "title": "* Epidemic vs. Endemic Models",
  "body": " * Epidemic vs. Endemic Models   ***This chapter is under construction.***       "
},
{
  "id": "ch-epidemic-vs-endemic-models-2",
  "level": "2",
  "url": "ch-epidemic-vs-endemic-models.html#ch-epidemic-vs-endemic-models-2",
  "type": "Paragraph (with a defined term)",
  "number": "",
  "title": "",
  "body": "***This chapter is under construction.*** "
},
{
  "id": "ch-modeling-the-spread-of-a-rumor",
  "level": "1",
  "url": "ch-modeling-the-spread-of-a-rumor.html",
  "type": "Chapter",
  "number": "13",
  "title": "* Modeling the Spread of a Rumor",
  "body": " * Modeling the Spread of a Rumor   ***This chapter is under construction.***       "
},
{
  "id": "ch-modeling-the-spread-of-a-rumor-2",
  "level": "2",
  "url": "ch-modeling-the-spread-of-a-rumor.html#ch-modeling-the-spread-of-a-rumor-2",
  "type": "Paragraph (with a defined term)",
  "number": "",
  "title": "",
  "body": "***This chapter is under construction.*** "
},
{
  "id": "ch-the-next-generation-method",
  "level": "1",
  "url": "ch-the-next-generation-method.html",
  "type": "Chapter",
  "number": "14",
  "title": "The Next Generation Method",
  "body": " The Next Generation Method      Learn to complete all the steps in the Next Generation Method for relating the epidemiological quantity to parameters and other quantities used in a compartmental model    Build understanding of compartmental models as a way to map disease spread, or other kinds of spread, as a generation-to-generation phenomenon    Increase awareness of how eigenvalues show us specific information about the long-term behavior of a system of differential equations     This chapter uses many linear algebra concepts. Before beginning, we pause to review.   Linear Algebra Review   To do the work of this chapter, it will help to have certain linear algebra concepts freshly in mind. This Exploration prepares us for what comes next.    First review matrices. Use textbooks, online information, or other means to refresh your about matrices in general. Then respond to the following.    Create a matrix. Create another matrix, this time . These matrices are called square matrices. Why can we use the name square ? And what could a matrix look like if it is not a square matrix? To demonstrate, create at least two differently sized matrices that are not square, and explain how you know that these matrices are not square.    Create two different matrices and demonstrate how to multiply them.    Describe what an inverse matrix is. Then write the formula for computing the inverse of a matrix of the form:   For each of the two matrices you created in part (2) above, show how to compute the inverse of the matrix, using the matrix inverse formula you wrote. If it happens that either of your matrices has no inverse, explain how you know this. If neither of your matrices has an inverse, then create a new matrix that does have an inverse, and compute its inverse.      Next review eigenvalues.    How do we describe an eigenvalue mathematically? Your response should include at least one mathematical formula, along with a description of what the formula means.    Research eigenvalues to find ways that eigenvalues are used in applications of mathematics. Write descriptions of at least two examples of applications of eigenvalues.        Mathematical Background for the Next Generation Method  So far, to determine the value of in a compartmental model, we have done one of two things:    estimated visually by comparing the model's solution curves with data, or    used a formula for , such as , to substitute in values we know for , , and , rearrange, and solve for .    However, the formula for is not always . Systems of differential equations having different compartments, or systems in which the flow between compartments is different than what we have worked with before, can have different formulas for . These formulas are usually not obvious. However, a method exists that allows us to determine the formula. This is the Next Generation Method.   To use the Next Generation Method, we will need to be familiar with matrices, eigenvalues, equilibrium values for a system of differential equations, and partial derivatives. was a reminder about matrices and eigenvalues, and we will build more knowledge about these linear algebra concepts. But first, use and to learn about equilibrium values and partial derivatives.    This activity identifies equilibrium values for two systems of differential equations that we have worked with as compartmental models.    Consider the SI model below:   For a system of differential equations, being at equilibrium means that the dependent variables in the system are not changing as the independent variables change. For the SI model, this means that the populations and are not changing as time changes. Using knowledge from calculus: what can we say about each of the derivatives and when the system is at equilibrium?    Next: determine the possible values of and for which the SI model is at equilibrium.    Next consider the SEIR model below:   Can you determine possible values of , , , and for which the SEIR model is at equilibrium? In doing this, be sure the overall population is nonzero, that is, .        For the system to be at equilibrium, each of the derivatives must equal .    If , the SI model is at equilibrium. This corresponds to a situation where the entire population is in the compartment.  Alternatively, if , the SI model is at equilibrium. This corresponds to a situation where the entire population is in the compartment.    The SEIR model is at equilibrium when and . The rest of the population can be divided in any way between the and compartments.      You may have noticed in , part 3, that there are many ways to arrive at equilbrium. It is true that the and compartments should be empty, but the population can be distributed in any way across compartments and .  For the work we will do in this chapter, we decide the population distribution by seeking the disease-free equilibrium . This is the particular equilibrium value that occurs in a situation where disease has not yet appeared in a population. In the SEIR model, for instance, equilibrium requires , with the rest of the population split somehow across the and compartments. Disease-free equilibrium adds the extra requirement that the population all be in the compartment. This means , where represents the entire population, as first defined in . Then the other three populations, , , and , all equal .  One way to write the disease-free equilibrium is . The bar over each of the population letters , , , and represents an equilibrium value for that population.  For the models we have studied so far, disease-free equilibrium requires that the entire population start in the compartment, but there exist compartmental models where the initial population can be split across multiple compartments.  In addition to the concept of the disease-free equilibrium value, we also work with partial derivatives when applying the Next Generation Method. Gain practice with partial derivatives in .    This course requires mainly the calculus concepts from a Calculus I course. These concepts include working with derivatives, understanding that a derivative is a rate of change, knowing that the slope on a graph relates directly to the derivative of a function, and recognizing that positive slopes (or, equivalently, positive derivatives) correspond to increasing functions and, similarly, negative slopes (or, equivalently, negative derivatives) correspond to decreasing functions.  The Next Generation Method also requires us to compute partial derivatives . To see how this works, progress through the steps below.    Start by computing derivatives as you would during Calculus I.    For the function , compute its derivative . This can also be written .    Then, for the related function , compute its derivative. The values , , and are all constants. This derivative can also be written .      Next, we introduce partial derivatives . Whereas in part (1) we computed derivatives with respect to , we now allow ourselves to compute derivatives with respect to other variables in a formula.    Consider this differential equation from the SEIR model: . Compute the derivative of the right-hand side, with respect to . That is, compute . When computing the derivative with respect to : think of , , , and as constants. Think of as the only variable.  You may notice that we have switched from the notation to the notation . We use rather than when there are multiple choices for our variable of interest: we are focusing on , but we could have chosen any other variable in our system of equations. The idea of partial derivatives is that there are multiple variables involved, and as each of them changes, the entire system is affected, but we focus on one variable at a time, therefore looking at part of the change of the system rather than the total change of the system.  This emphasis on one variable at a time benefits our understanding by showing how change in each variable in our case, change in each compartment affects the outcome of the entire system.    Then compute these two derivatives: and . The first of these thinks of only as a variable. The second thinks of only as a variable.            The derivative is .    The derivative is .        The derivative is .    The derivative with respect to is and the derivative with respect to is .          The Next Generation Method: Steps to Follow  We now go through the steps of the Next Generation Method.      Begin with the SEIR model, shown below, and follow the steps described. While in many activities it is good to try all the steps before checking the answer, in this activity you may wish to compare your results after each step with the Answer link at the bottom of the activity. There will then be additional chances to practice the Next Generation Method, so that you will have the chance to try the Next Generation Method without checking answers at each step.     Decide which compartments of the SEIR model involve individuals experiencing some stage of infection. If a person has contracted an illness, they are in some stage of infection throughout the time they are incubating, whether contagious or not, and whether showing symptoms or not. They stop being in a stage of infection when they are completely done with the illness.    For the equation(s) selected in Step 1, write the equation(s) in matrix form. To do so, place the derivatives on the left-hand side into a vector. On the right-hand side, write the equations in a vector.    Separate the right-hand side into two vectors, and , so that all of the following are true:    the right-hand side can be written as ;    vector includes all new infection terms, that is, the terms within the model that indicate when individuals who were not at any stage of infection newly enter a compartment in which they are at some stage of infection; and    vector is the vector of all other movement between compartments .      Compute the disease-free equilibrium for your compartmental model.    Compute matrices and (notice these do not have hats : they are different from and ) by computing partial derivatives of each of the terms in and , with respect to each of the populations of compartments experiencing infection, following the pattern shown below in the case of the SEIR model, and then evaluating your results at the disease-free equilibrium:      Compute the Next Generation Matrix, which is the matrix   and determine the largest positive eigenvalue of .  To do this: first compute . Then compute . Then determine the eigenvalues of .  The largest possible eigenvalue of is the value of .        For the SEIR model, the E and I compartments are stages of infection. The S and R compartments are not stages of infection.        That is:   and     We did this for the SEIR model in . The disease-free equilibrium is , where is the total number of people in the entire population being studied.        Compute matrix Then compute matrix The eigenvalues of are and . Of these, the largest eigenvalue is , and therefore .        Now that we have shown all the steps for computing a formula for in the SEIR model, try again for the SIRS model, shown in .   The compartmental diagram for one possible SIRS model, where S stands for Susceptible , I stands for Infectious , and R stands for Recovered . In this model, individuals lose immunity some time after recovering. They then return to the S compartment.   (Write this)       Only one compartment of the SIR model involves individuals experiencing some stage of infection, namely, the I compartment. This means that when we write the equations in matrix form, we use a matrix. Then and Computing partial derivatives with respect to , and evaluating at the disease-free equilibrium , results in and Computing results in , and the one eigenvalue of tells us that .    We have now seen the steps of the Next Generation Method for both SEIR and SIR models. The final step of the Next Generation Method requires a significant amount of linear algebra, especially as models become more complicated. In , we introduce Python code to help with this.    Python Code for the Next Generation Method  For the most part, steps 1 through 4 of the Next Generation Method cannot be automated, as they require human judgment. In particular, Step 1 requires determining which compartments involve some stage of infection, and in Step 3, we must distinguish new infections from all other stages of infection. In Step 4, we use logical thinking to help us write down the population distribution in a situation where there has not been an outbreak previously.  For the later steps of the Next Generation Method, especially computing matrix inverses and eigenvalues, technology can be extremely helpful. These are doable using linear algebra, yet they are not the focus of this course. For this textbook, students are asked to complete by hand Step 5 of the Next Generation Method, and then we use Python for the grand finale in Step 6.   provides one possible set of Python commands for computing the value of in the SEIR model shown in .    The code block below produces the eigenvalues for the SEIR model. In other words, this code does the computation in Step 6 of the Next Generation Method as described in . This code can also be used as a template for producing eigenvalues when the Next Generation Method produces a matrix.  Use the code to answer the questions below.     Four expressions are listed as Symbol in lines 4 through 7 of the Python code. Compare these expressions with the entries in matrices and that we solved for in Step 5 of . Show where each Symbol occurs in matrices and , and state why these are all the terms we need to define as Symbol so that Python will recognize them.    Use lines 10 and 14 of the Python code to describe the syntax we use for entering matrices into Python.    From line 18, state how we tell Python to compute the inverse of matrix , also written as . From line 20, state how we tell Python to compute the matrix , which multiples matrix with matrix . From line 25, state the command used to calculate the eigenvalues of matrix , and give the name we assign to that set of eigenvalues.    The lines 11, 15, 19, 21, and 26 all include the print command. Write out exactly what Python prints for each of these lines when we evaluate the code, and explain what each of these printed results means, in the context of the Next Generation Method.    When we compute eigenvalues for a matrix, it is possible that an eigenvalue may occur more than once. The number of times an eigenvalue occurs is called the multiplicity of the eigenvalue. Python tells us the eigenvalues of a matrix, along with the multiplicity of each eigenvalue. Write out the eigenvalues of and the multiplicity of each eigenvalue. Explain how you know that each eigenvalue is a real number (and not a complex number, meaning that no part of the eigenvalue includes ). Then state which eigenvalue is the largest, and confirm that this eigenvalue must represent a positive real number.        In Step 5 of , we produced matrices for and . These matrices used letters, including Greek letters, to represent some parts of the model. We now designate each of those letters to be a Symbol so that Python knows how to work with it. As an example, we write gamma = Symbol('gamma') to give the name gamma to the Greek letter . Python then knows to treat the entire text string gamma as the single parameter value whenever appears in a mathematical expression, such as in matrix .    To enter a matrix, we type Matrix([]) . Inside the square brackets, we enter each row of the matrix, using its own set of square brackets, with commas separating the matrix entries. This system extends to matrices larger than .    These commands appear on the right-hand side of the equals sign in each of the given lines. Notice that in each case we name the output. In particular, we give the name R0eval to the output of the eigenvals command so that we can print this output, using the command in line 26.    The print commands in this code block all include text, in quotation marks, followed by the name of a mathematical expression we have either entered into Python or asked Python to compute. As a result, Python prints this exact text first, telling us what we are seeing in the mathematical expression appearing just after the text.  For instance, the code in line 19 tells Python to print the text V inverse = and then to print the actual matrix that has been computed based on the matrix we entered.    For matrix resulting from the Next Generation Method shown in , the eigenvalues are 0 , having multiplicity , and N*beta\/gamma , which equals , having multiplicity 1.  It is not unusual for the eigenvalue equaling to look different in Python than in mathematical writing. Rearranging and rewriting the Python version of often makes the result easier to work with, both mathematically and for understanding its meaning.  In the case of this activity's output: the eigenvalue N*beta\/gamma is a positive real number, and is larger than 0 , because all three values , , and are positive real numbers in the SEIR model that led to this result.       below provides a somewhat larger model on which to practice the Next Generation Method. It also introduces a Python code block for producing eigenvalues when the Next Generation Method involves a matrix.    The book Mathematical Epidemiology Mathematical Epidemiology was edited by Fred Brauer, Pauline van den Driessche, and Jianhong Wu, and published by Springer in 2008. The model we describe comes from Chapter 12, which was written by Fred Brauer, and is labeled SLIAR. Our version is labeled SEIAR to stay consistent with notation we have used in other chapters. introduces a model of influenza having five compartments. This model has a Susceptibles (S) compartment that is similar to what we have seen before. There is then an Exposed-and-incubating (E) compartment for people incubating influenza who are not yet able to spread influenza to others. After that, people may be Infectious (I), meaning they have symptoms and can spread influenza, or they may be Asymptomatic (A), meaning they do not have symptoms but can still spread influenza to others. In this model, Asymptomatic (A) people are less able to spread influenza than Infectious (I) people. Many people then move into a Recovered (R) compartment, but those who die depart the model rather than moving into the R compartment. The compartmental diagram for this model appears in . In this activity, we explore the SEIAR model and investigate Python code that can help us determine for this model using the Next Generation Method.   The compartmental diagram for one possible SEIAR model for influenza, where S stands for Susceptible , E stands for Exposed-and-incubating , I stands for Infectious , A stands for Asymptomatic and R stands for Recovered . In this model, Asymptomatic individuals have no symptoms but can spread influenza, though they are not as contagious as individuals in the Infectious compartment.   (Write this)       The parameter may take on values . Use the questions below to think through the role of in the SEIAR model.    What does it mean that the arrow from E to I includes the term , and the arrow from E to A includes the term ? What would happen if we added the terms on these two arrows and simplified the result?    How would the result in part (a) compare with the formula for moving from the E compartment to the I compartment in a simpler model with an Exposed-and-incubating compartment, such as the model in ?      Asymptomatic people in the SEIAR model are able to spread influenza but may not be able to spread influenza as easily as people in the Infectious compartment. Given this information, what possible values for make sense?    This model separates Recovered people from those who die from influenza. To emphasize, the R compartment here stands for Recovered, which is different than what we have seen in some models where the R stood for Removed, which could mean recovery, death, or other departure from the population. As further information, the possible values for the parameter are . Explain how distinguishes people who have died from people who have recovered, and compare this approach with how we have handled deaths in models where the R compartment stood for Removed.    The code block below produces the eigenvalues for the SEIAR model. This code can also be used as a template for producing eigenvalues when the Next Generation Method produces a matrix. Compare this code with the code in . Name at least two ways the code blocks are similar, indicating ways the Next Generation Method computation is similar, and name at least two ways the code blocks are different, indicating things that change for the Next Generation Method computation in these two different examples.    One way to write the value of for this model is the following: Write the value of given by the Python code block below, and show the algebra steps needed to demonstrate that Python's result matches the formula shown here. Then explain, mathematically, what the fractions and indicate about movement through the SEIAR model.           The parameter splits up the term , sending a fraction from the Exposed-and-incubating compartment to the Infectious compartment, and the other fraction to the Asymptomatic compartment.  Notice that since , then . This means that and .  Adding the two terms: .    In a simpler model, the expression would represent the full number of people transitioning from the Exposed-and-incubating compartment to the Infectious compartment within a single unit of time. In the SEIAR model, is split into two pieces, and , so that the total number of people departing the E compartment is the same, but those people go to two possible compartments, the Infectious compartment and the Asymptomatic compartment.      It makes sense to have . Notice that letting would means there is no spread of influenza from Asymptomatic people, and letting would means Asymptomatic people spread influenza just as much as people in the Infectious compartment. For values of strictly between and , Asymptomatic people spread influenza to some extent, but strictly less than people in the Infectious compartment  For this model, we wrote that Asymptomatic people spread influenza less than Infectious people, so we should not allow . However, the idea of could be useful in some other model with different assumptions.    In a single unit of time, people depart compartment I. A fraction of these people move into compartment R, meaning they have recovered. A fraction of these people do not move into a named compartment. These people die, and in this model, people who have died are no longer represented as being in a compartment. This means that in this model, the total population of people in compartments does not stay the same across time (unless we let , sending everyone from the compartment into the compartment).    The answers here are open-ended.    Python writes the eigenvalue that is in the form First, we write this in more standard fraction notation. In the same step, we move the minus sign ( ) from before , choosing instead to distribute this minus sign to the terms inside the parentheses: Next, we group terms within the parentheses, splitting the terms up so they form two separate fractions, and rearrange the order of some terms to better match the answer we eventually want to reach: Finally, we divide from the top and bottom of the first fraction, and we divide from the top and bottom of the second fraction. In doing so, we note that these are parameters that should always have strictly positive values, which means we can divide by them and not be dividing by :   For mathematical explanation, we compare this form of with in some of the simpler models we have studied. In those, the value of in the denominator indicates that the more rapidly people depart the I compartment, the less able a disease is to spread, making lower. Here, since we split into compartments I and A, we need to separately evaluate the rapidity with which people depart each of these compartments. A fraction of people in the I compartment depart at rate . This is the first fraction in parentheses for in this exercise. The remaining fraction of people, , depart compartment A at rate . However, these people also have less impact on new infections because of the parameter . This lesser impact is measured by the value of in the second fraction within .        Consider the SEIR model with births and deaths, shown in , which includes a constant term representing births per time unit, as well as a death rate from each compartment. This model comes from the book Mathematical Epidemiology . Mathematical Epidemiology was edited by Fred Brauer, Pauline van den Driessche, and Jianhong Wu, and published by Springer in 2008. The model we describe comes from Chapter 6, which was written by James Watmough and Pauline van den Driessche.  Complete all steps of the Next Generation Method to show how to determine the value of for this model. As a hint: you should get as your result. Demonstrate fully how you complete each step of the Next Generation Method in order to achieve this result.  The compartmental diagram for one possible SEIR model with births and deaths, where S stands for Susceptible , E stands for Exposed-and-incubating , I stands for Infectious , and R stands for Recovered . Births enter the Susceptible compartment at a constant quantity per time step, and deaths from each compartment occur at a rate of that population, per time step.   (Write this)     Consider the SEIR model shown in . In this exercise, analyze the ways each parameter within the formula affects the size of . (Note: the formula for for this model is given above in Exercise 1.) In particular, consider the following.   How do and affect ? That is, as increases, what happens to ? As decreases, what happens to ? Similarly, how do increases or decreases in affect ?    How does affect , given that appears in both the numerator and denominator of ?    Consider the fraction . How large or small can this fraction become? How does this fraction affect as becomes larger or smaller, and how does this fraction affect as becomes larger or smaller?    Consider the fraction . How does this fraction affect as becomes larger or smaller, and how does this fraction affect as becomes larger or smaller?    If we set , we can simplify the value of . What result do we get when we simplify in this way, and how can we interpret this result in relation to the SEIR model in this activity, as well as in relation to an SEIR model without birth and death terms, such as the model in ?    Revisit the SIRS model from and introduce birth and death terms in a similar way as is shown in the model in . Then use the steps of the Next Generation Method to compute for the resulting SIRS model with births and deaths. Show all your steps.    "
},
{
  "id": "intro-next-generation-method-1",
  "level": "2",
  "url": "ch-the-next-generation-method.html#intro-next-generation-method-1",
  "type": "Goals",
  "number": "",
  "title": "",
  "body": "   Learn to complete all the steps in the Next Generation Method for relating the epidemiological quantity to parameters and other quantities used in a compartmental model    Build understanding of compartmental models as a way to map disease spread, or other kinds of spread, as a generation-to-generation phenomenon    Increase awareness of how eigenvalues show us specific information about the long-term behavior of a system of differential equations    "
},
{
  "id": "expl-activity-next-generation-method",
  "level": "2",
  "url": "ch-the-next-generation-method.html#expl-activity-next-generation-method",
  "type": "Exploration",
  "number": "14.1",
  "title": "Linear Algebra Review.",
  "body": " Linear Algebra Review   To do the work of this chapter, it will help to have certain linear algebra concepts freshly in mind. This Exploration prepares us for what comes next.    First review matrices. Use textbooks, online information, or other means to refresh your about matrices in general. Then respond to the following.    Create a matrix. Create another matrix, this time . These matrices are called square matrices. Why can we use the name square ? And what could a matrix look like if it is not a square matrix? To demonstrate, create at least two differently sized matrices that are not square, and explain how you know that these matrices are not square.    Create two different matrices and demonstrate how to multiply them.    Describe what an inverse matrix is. Then write the formula for computing the inverse of a matrix of the form:   For each of the two matrices you created in part (2) above, show how to compute the inverse of the matrix, using the matrix inverse formula you wrote. If it happens that either of your matrices has no inverse, explain how you know this. If neither of your matrices has an inverse, then create a new matrix that does have an inverse, and compute its inverse.      Next review eigenvalues.    How do we describe an eigenvalue mathematically? Your response should include at least one mathematical formula, along with a description of what the formula means.    Research eigenvalues to find ways that eigenvalues are used in applications of mathematics. Write descriptions of at least two examples of applications of eigenvalues.     "
},
{
  "id": "activity-equilibrium-values",
  "level": "2",
  "url": "ch-the-next-generation-method.html#activity-equilibrium-values",
  "type": "Activity",
  "number": "14.2",
  "title": "",
  "body": "  This activity identifies equilibrium values for two systems of differential equations that we have worked with as compartmental models.    Consider the SI model below:   For a system of differential equations, being at equilibrium means that the dependent variables in the system are not changing as the independent variables change. For the SI model, this means that the populations and are not changing as time changes. Using knowledge from calculus: what can we say about each of the derivatives and when the system is at equilibrium?    Next: determine the possible values of and for which the SI model is at equilibrium.    Next consider the SEIR model below:   Can you determine possible values of , , , and for which the SEIR model is at equilibrium? In doing this, be sure the overall population is nonzero, that is, .        For the system to be at equilibrium, each of the derivatives must equal .    If , the SI model is at equilibrium. This corresponds to a situation where the entire population is in the compartment.  Alternatively, if , the SI model is at equilibrium. This corresponds to a situation where the entire population is in the compartment.    The SEIR model is at equilibrium when and . The rest of the population can be divided in any way between the and compartments.     "
},
{
  "id": "sec-mathematical-background-for-the-next-generation-method-8",
  "level": "2",
  "url": "ch-the-next-generation-method.html#sec-mathematical-background-for-the-next-generation-method-8",
  "type": "Paragraph (with a defined term)",
  "number": "",
  "title": "",
  "body": "disease-free equilibrium "
},
{
  "id": "activity-partial-derivatives",
  "level": "2",
  "url": "ch-the-next-generation-method.html#activity-partial-derivatives",
  "type": "Activity",
  "number": "14.3",
  "title": "",
  "body": "  This course requires mainly the calculus concepts from a Calculus I course. These concepts include working with derivatives, understanding that a derivative is a rate of change, knowing that the slope on a graph relates directly to the derivative of a function, and recognizing that positive slopes (or, equivalently, positive derivatives) correspond to increasing functions and, similarly, negative slopes (or, equivalently, negative derivatives) correspond to decreasing functions.  The Next Generation Method also requires us to compute partial derivatives . To see how this works, progress through the steps below.    Start by computing derivatives as you would during Calculus I.    For the function , compute its derivative . This can also be written .    Then, for the related function , compute its derivative. The values , , and are all constants. This derivative can also be written .      Next, we introduce partial derivatives . Whereas in part (1) we computed derivatives with respect to , we now allow ourselves to compute derivatives with respect to other variables in a formula.    Consider this differential equation from the SEIR model: . Compute the derivative of the right-hand side, with respect to . That is, compute . When computing the derivative with respect to : think of , , , and as constants. Think of as the only variable.  You may notice that we have switched from the notation to the notation . We use rather than when there are multiple choices for our variable of interest: we are focusing on , but we could have chosen any other variable in our system of equations. The idea of partial derivatives is that there are multiple variables involved, and as each of them changes, the entire system is affected, but we focus on one variable at a time, therefore looking at part of the change of the system rather than the total change of the system.  This emphasis on one variable at a time benefits our understanding by showing how change in each variable in our case, change in each compartment affects the outcome of the entire system.    Then compute these two derivatives: and . The first of these thinks of only as a variable. The second thinks of only as a variable.            The derivative is .    The derivative is .        The derivative is .    The derivative with respect to is and the derivative with respect to is .       "
},
{
  "id": "activity-learning-next-generation-seir",
  "level": "2",
  "url": "ch-the-next-generation-method.html#activity-learning-next-generation-seir",
  "type": "Activity",
  "number": "14.4",
  "title": "",
  "body": "  Begin with the SEIR model, shown below, and follow the steps described. While in many activities it is good to try all the steps before checking the answer, in this activity you may wish to compare your results after each step with the Answer link at the bottom of the activity. There will then be additional chances to practice the Next Generation Method, so that you will have the chance to try the Next Generation Method without checking answers at each step.     Decide which compartments of the SEIR model involve individuals experiencing some stage of infection. If a person has contracted an illness, they are in some stage of infection throughout the time they are incubating, whether contagious or not, and whether showing symptoms or not. They stop being in a stage of infection when they are completely done with the illness.    For the equation(s) selected in Step 1, write the equation(s) in matrix form. To do so, place the derivatives on the left-hand side into a vector. On the right-hand side, write the equations in a vector.    Separate the right-hand side into two vectors, and , so that all of the following are true:    the right-hand side can be written as ;    vector includes all new infection terms, that is, the terms within the model that indicate when individuals who were not at any stage of infection newly enter a compartment in which they are at some stage of infection; and    vector is the vector of all other movement between compartments .      Compute the disease-free equilibrium for your compartmental model.    Compute matrices and (notice these do not have hats : they are different from and ) by computing partial derivatives of each of the terms in and , with respect to each of the populations of compartments experiencing infection, following the pattern shown below in the case of the SEIR model, and then evaluating your results at the disease-free equilibrium:      Compute the Next Generation Matrix, which is the matrix   and determine the largest positive eigenvalue of .  To do this: first compute . Then compute . Then determine the eigenvalues of .  The largest possible eigenvalue of is the value of .        For the SEIR model, the E and I compartments are stages of infection. The S and R compartments are not stages of infection.        That is:   and     We did this for the SEIR model in . The disease-free equilibrium is , where is the total number of people in the entire population being studied.        Compute matrix Then compute matrix The eigenvalues of are and . Of these, the largest eigenvalue is , and therefore .     "
},
{
  "id": "activity-next-generation-practice-sirs",
  "level": "2",
  "url": "ch-the-next-generation-method.html#activity-next-generation-practice-sirs",
  "type": "Activity",
  "number": "14.5",
  "title": "",
  "body": "  Now that we have shown all the steps for computing a formula for in the SEIR model, try again for the SIRS model, shown in .   The compartmental diagram for one possible SIRS model, where S stands for Susceptible , I stands for Infectious , and R stands for Recovered . In this model, individuals lose immunity some time after recovering. They then return to the S compartment.   (Write this)       Only one compartment of the SIR model involves individuals experiencing some stage of infection, namely, the I compartment. This means that when we write the equations in matrix form, we use a matrix. Then and Computing partial derivatives with respect to , and evaluating at the disease-free equilibrium , results in and Computing results in , and the one eigenvalue of tells us that .   "
},
{
  "id": "activity-learning-next-generation-python-seir",
  "level": "2",
  "url": "ch-the-next-generation-method.html#activity-learning-next-generation-python-seir",
  "type": "Activity",
  "number": "14.6",
  "title": "",
  "body": "  The code block below produces the eigenvalues for the SEIR model. In other words, this code does the computation in Step 6 of the Next Generation Method as described in . This code can also be used as a template for producing eigenvalues when the Next Generation Method produces a matrix.  Use the code to answer the questions below.     Four expressions are listed as Symbol in lines 4 through 7 of the Python code. Compare these expressions with the entries in matrices and that we solved for in Step 5 of . Show where each Symbol occurs in matrices and , and state why these are all the terms we need to define as Symbol so that Python will recognize them.    Use lines 10 and 14 of the Python code to describe the syntax we use for entering matrices into Python.    From line 18, state how we tell Python to compute the inverse of matrix , also written as . From line 20, state how we tell Python to compute the matrix , which multiples matrix with matrix . From line 25, state the command used to calculate the eigenvalues of matrix , and give the name we assign to that set of eigenvalues.    The lines 11, 15, 19, 21, and 26 all include the print command. Write out exactly what Python prints for each of these lines when we evaluate the code, and explain what each of these printed results means, in the context of the Next Generation Method.    When we compute eigenvalues for a matrix, it is possible that an eigenvalue may occur more than once. The number of times an eigenvalue occurs is called the multiplicity of the eigenvalue. Python tells us the eigenvalues of a matrix, along with the multiplicity of each eigenvalue. Write out the eigenvalues of and the multiplicity of each eigenvalue. Explain how you know that each eigenvalue is a real number (and not a complex number, meaning that no part of the eigenvalue includes ). Then state which eigenvalue is the largest, and confirm that this eigenvalue must represent a positive real number.        In Step 5 of , we produced matrices for and . These matrices used letters, including Greek letters, to represent some parts of the model. We now designate each of those letters to be a Symbol so that Python knows how to work with it. As an example, we write gamma = Symbol('gamma') to give the name gamma to the Greek letter . Python then knows to treat the entire text string gamma as the single parameter value whenever appears in a mathematical expression, such as in matrix .    To enter a matrix, we type Matrix([]) . Inside the square brackets, we enter each row of the matrix, using its own set of square brackets, with commas separating the matrix entries. This system extends to matrices larger than .    These commands appear on the right-hand side of the equals sign in each of the given lines. Notice that in each case we name the output. In particular, we give the name R0eval to the output of the eigenvals command so that we can print this output, using the command in line 26.    The print commands in this code block all include text, in quotation marks, followed by the name of a mathematical expression we have either entered into Python or asked Python to compute. As a result, Python prints this exact text first, telling us what we are seeing in the mathematical expression appearing just after the text.  For instance, the code in line 19 tells Python to print the text V inverse = and then to print the actual matrix that has been computed based on the matrix we entered.    For matrix resulting from the Next Generation Method shown in , the eigenvalues are 0 , having multiplicity , and N*beta\/gamma , which equals , having multiplicity 1.  It is not unusual for the eigenvalue equaling to look different in Python than in mathematical writing. Rearranging and rewriting the Python version of often makes the result easier to work with, both mathematically and for understanding its meaning.  In the case of this activity's output: the eigenvalue N*beta\/gamma is a positive real number, and is larger than 0 , because all three values , , and are positive real numbers in the SEIR model that led to this result.     "
},
{
  "id": "activity-next-generation-practice-seiar",
  "level": "2",
  "url": "ch-the-next-generation-method.html#activity-next-generation-practice-seiar",
  "type": "Activity",
  "number": "14.7",
  "title": "",
  "body": "  The book Mathematical Epidemiology Mathematical Epidemiology was edited by Fred Brauer, Pauline van den Driessche, and Jianhong Wu, and published by Springer in 2008. The model we describe comes from Chapter 12, which was written by Fred Brauer, and is labeled SLIAR. Our version is labeled SEIAR to stay consistent with notation we have used in other chapters. introduces a model of influenza having five compartments. This model has a Susceptibles (S) compartment that is similar to what we have seen before. There is then an Exposed-and-incubating (E) compartment for people incubating influenza who are not yet able to spread influenza to others. After that, people may be Infectious (I), meaning they have symptoms and can spread influenza, or they may be Asymptomatic (A), meaning they do not have symptoms but can still spread influenza to others. In this model, Asymptomatic (A) people are less able to spread influenza than Infectious (I) people. Many people then move into a Recovered (R) compartment, but those who die depart the model rather than moving into the R compartment. The compartmental diagram for this model appears in . In this activity, we explore the SEIAR model and investigate Python code that can help us determine for this model using the Next Generation Method.   The compartmental diagram for one possible SEIAR model for influenza, where S stands for Susceptible , E stands for Exposed-and-incubating , I stands for Infectious , A stands for Asymptomatic and R stands for Recovered . In this model, Asymptomatic individuals have no symptoms but can spread influenza, though they are not as contagious as individuals in the Infectious compartment.   (Write this)       The parameter may take on values . Use the questions below to think through the role of in the SEIAR model.    What does it mean that the arrow from E to I includes the term , and the arrow from E to A includes the term ? What would happen if we added the terms on these two arrows and simplified the result?    How would the result in part (a) compare with the formula for moving from the E compartment to the I compartment in a simpler model with an Exposed-and-incubating compartment, such as the model in ?      Asymptomatic people in the SEIAR model are able to spread influenza but may not be able to spread influenza as easily as people in the Infectious compartment. Given this information, what possible values for make sense?    This model separates Recovered people from those who die from influenza. To emphasize, the R compartment here stands for Recovered, which is different than what we have seen in some models where the R stood for Removed, which could mean recovery, death, or other departure from the population. As further information, the possible values for the parameter are . Explain how distinguishes people who have died from people who have recovered, and compare this approach with how we have handled deaths in models where the R compartment stood for Removed.    The code block below produces the eigenvalues for the SEIAR model. This code can also be used as a template for producing eigenvalues when the Next Generation Method produces a matrix. Compare this code with the code in . Name at least two ways the code blocks are similar, indicating ways the Next Generation Method computation is similar, and name at least two ways the code blocks are different, indicating things that change for the Next Generation Method computation in these two different examples.    One way to write the value of for this model is the following: Write the value of given by the Python code block below, and show the algebra steps needed to demonstrate that Python's result matches the formula shown here. Then explain, mathematically, what the fractions and indicate about movement through the SEIAR model.           The parameter splits up the term , sending a fraction from the Exposed-and-incubating compartment to the Infectious compartment, and the other fraction to the Asymptomatic compartment.  Notice that since , then . This means that and .  Adding the two terms: .    In a simpler model, the expression would represent the full number of people transitioning from the Exposed-and-incubating compartment to the Infectious compartment within a single unit of time. In the SEIAR model, is split into two pieces, and , so that the total number of people departing the E compartment is the same, but those people go to two possible compartments, the Infectious compartment and the Asymptomatic compartment.      It makes sense to have . Notice that letting would means there is no spread of influenza from Asymptomatic people, and letting would means Asymptomatic people spread influenza just as much as people in the Infectious compartment. For values of strictly between and , Asymptomatic people spread influenza to some extent, but strictly less than people in the Infectious compartment  For this model, we wrote that Asymptomatic people spread influenza less than Infectious people, so we should not allow . However, the idea of could be useful in some other model with different assumptions.    In a single unit of time, people depart compartment I. A fraction of these people move into compartment R, meaning they have recovered. A fraction of these people do not move into a named compartment. These people die, and in this model, people who have died are no longer represented as being in a compartment. This means that in this model, the total population of people in compartments does not stay the same across time (unless we let , sending everyone from the compartment into the compartment).    The answers here are open-ended.    Python writes the eigenvalue that is in the form First, we write this in more standard fraction notation. In the same step, we move the minus sign ( ) from before , choosing instead to distribute this minus sign to the terms inside the parentheses: Next, we group terms within the parentheses, splitting the terms up so they form two separate fractions, and rearrange the order of some terms to better match the answer we eventually want to reach: Finally, we divide from the top and bottom of the first fraction, and we divide from the top and bottom of the second fraction. In doing so, we note that these are parameters that should always have strictly positive values, which means we can divide by them and not be dividing by :   For mathematical explanation, we compare this form of with in some of the simpler models we have studied. In those, the value of in the denominator indicates that the more rapidly people depart the I compartment, the less able a disease is to spread, making lower. Here, since we split into compartments I and A, we need to separately evaluate the rapidity with which people depart each of these compartments. A fraction of people in the I compartment depart at rate . This is the first fraction in parentheses for in this exercise. The remaining fraction of people, , depart compartment A at rate . However, these people also have less impact on new infections because of the parameter . This lesser impact is measured by the value of in the second fraction within .     "
},
{
  "id": "exercises-ch-next-generation-method-1",
  "level": "2",
  "url": "ch-the-next-generation-method.html#exercises-ch-next-generation-method-1",
  "type": "Exercise",
  "number": "14.4.1",
  "title": "",
  "body": "Consider the SEIR model with births and deaths, shown in , which includes a constant term representing births per time unit, as well as a death rate from each compartment. This model comes from the book Mathematical Epidemiology . Mathematical Epidemiology was edited by Fred Brauer, Pauline van den Driessche, and Jianhong Wu, and published by Springer in 2008. The model we describe comes from Chapter 6, which was written by James Watmough and Pauline van den Driessche.  Complete all steps of the Next Generation Method to show how to determine the value of for this model. As a hint: you should get as your result. Demonstrate fully how you complete each step of the Next Generation Method in order to achieve this result.  The compartmental diagram for one possible SEIR model with births and deaths, where S stands for Susceptible , E stands for Exposed-and-incubating , I stands for Infectious , and R stands for Recovered . Births enter the Susceptible compartment at a constant quantity per time step, and deaths from each compartment occur at a rate of that population, per time step.   (Write this)    "
},
{
  "id": "exercises-ch-next-generation-method-2",
  "level": "2",
  "url": "ch-the-next-generation-method.html#exercises-ch-next-generation-method-2",
  "type": "Exercise",
  "number": "14.4.2",
  "title": "",
  "body": "Consider the SEIR model shown in . In this exercise, analyze the ways each parameter within the formula affects the size of . (Note: the formula for for this model is given above in Exercise 1.) In particular, consider the following.   How do and affect ? That is, as increases, what happens to ? As decreases, what happens to ? Similarly, how do increases or decreases in affect ?    How does affect , given that appears in both the numerator and denominator of ?    Consider the fraction . How large or small can this fraction become? How does this fraction affect as becomes larger or smaller, and how does this fraction affect as becomes larger or smaller?    Consider the fraction . How does this fraction affect as becomes larger or smaller, and how does this fraction affect as becomes larger or smaller?    If we set , we can simplify the value of . What result do we get when we simplify in this way, and how can we interpret this result in relation to the SEIR model in this activity, as well as in relation to an SEIR model without birth and death terms, such as the model in ?   "
},
{
  "id": "exercises-ch-next-generation-method-3",
  "level": "2",
  "url": "ch-the-next-generation-method.html#exercises-ch-next-generation-method-3",
  "type": "Exercise",
  "number": "14.4.3",
  "title": "",
  "body": "Revisit the SIRS model from and introduce birth and death terms in a similar way as is shown in the model in . Then use the steps of the Next Generation Method to compute for the resulting SIRS model with births and deaths. Show all your steps. "
},
{
  "id": "ch-tips-on-reading-a-scientific-paper",
  "level": "1",
  "url": "ch-tips-on-reading-a-scientific-paper.html",
  "type": "Chapter",
  "number": "15",
  "title": "* Tips on Reading a Scientific Paper",
  "body": " * Tips on Reading a Scientific Paper   ***This chapter is under construction.***       "
},
{
  "id": "ch-tips-on-reading-a-scientific-paper-2",
  "level": "2",
  "url": "ch-tips-on-reading-a-scientific-paper.html#ch-tips-on-reading-a-scientific-paper-2",
  "type": "Paragraph (with a defined term)",
  "number": "",
  "title": "",
  "body": "***This chapter is under construction.*** "
},
{
  "id": "ch-introducing-an-incubation-period-in-the-zombie-app",
  "level": "1",
  "url": "ch-introducing-an-incubation-period-in-the-zombie-app.html",
  "type": "Chapter",
  "number": "16",
  "title": "* Introducing an Incubation Period in the Zombie App",
  "body": " * Introducing an Incubation Period in the Zombie App      Use the zombie app in new ways to generate data for simulated outbreaks    Develop hypotheses for how an incubation period will affect the timeline and outcomes of an outbreak    Compare your hypotheses about the incubation period with data from your simulations     In the Zombie Game App we originally used in , when a human is infected, they become a zombie the very next day.  Suppose, instead, that humans experience an incubation period after being attacked by a zombie. During this incubation period, these individuals are neither a zombie (so not Infectious) nor Susceptible.   Take a few moments to think through how an incubation period would change the outcomes of the simulation. Then begin .    Activity: Introduce an Incubation Period  In this example, we assume that after a zombie infects a human, there is a one-day incubation period , meaning a one-day delay, before the human becomes a zombie. While the Zombie Game App can help generate data for such an outbreak, it does not have a direct way to incorporate the incubation period. We must therefore restart the app repeatedly and keep track of our own data, as described below.  Start in the app by beginning a game in which Human Start Count is set equal to 49 and Zombie Start Count is set equal to 1. Click start and write down the resulting number of new infections on Day 1: these are all the humans infected by our starting zombie. For instance, suppose there are two new infections from the interactions on Day 0, as circled in . Then on Day 1, there should be 47 humans, 2 incubating individuals, and 1 zombie. The app says there are three zombies, but in our interpretation, 2 are incubating individuals, and 1 is a zombie.   Determining the number of New Infections on Day 1   Table of data from one day of a simulation in the human-zombie game. There are two new infections on Day 1.    We therefore click restart on the app, so that we can enter a Human Start Count of 47 and a Zombie Start Count of 1. We do not include the 2 incubating individuals, since they do not affect the number of new zombies generated from Day 1 interactions. With these settings, we run the app for one round, generating new Infectious individuals once again. An example of this is shown in .   Using the results of Day 1 to determine the number of New Infections on Day 2   Table of data from one day of a simulation in the human-zombie game, using the outcome of Day 1 to determine new infections on Day 2. There is one new infection on Day 2.    The next step is where we begin to re-introduce the individuals who were infected on Day 0 but still incubating the zombie disease on Day 1. From we see that we should have 46 humans and 1 incubating individual on Day 2. We also have 3 zombies: the initial zombie, plus the 2 incubating individuals from Day 1. We therefore restart the model, entering a Human Start Count of 46 and a Zombie Start Count of 3. A possible outcome appears in .   Using the results of Days 1 and 2, including re-introducing incubating individuals as zombies, to determine the number of New Infections on Day 3   Table of data from one day of a simulation in the human-zombie game, re-introducing incubating individuals as zombies, to determine new infections on Day 3. There are four new infections on Day 3.    From this step, we continue until the game has ended. It helps to generate a new table of data, keeping track of the numbers of each of the three types of individuals. This table can be on paper, in a spreadsheet, or in whatever other form you prefer. shows a sample of how the table might look.   A sample full data set for simulating infections in a case where there is a one day incubation period as humans transition to zombies   Table of data from one sample simulation where humans have a one-day incubation period before becoming zombies. For days 0 to 10, the numbers of new infections are 1, 2, 1, 4, 5, 13, 8, 9, 5, 2, 0.    Ask yourself: what do you observe? Compare this simulation with simulations having no incubation period. Consider how many days the outbreak lasts. Make note of your observations, share your ideas with others, and consider the observations of other people trying this experiment. Try the experiment with a longer incubation period, such as 2, 3, or 4 days, and observe the ways these changes affect outcomes of the model.  INCLUDE: a question about why the total population always equals 50, and about why this column is included in the sample data set   "
},
{
  "id": "intro-incubation-period-in-zombie-app-1",
  "level": "2",
  "url": "ch-introducing-an-incubation-period-in-the-zombie-app.html#intro-incubation-period-in-zombie-app-1",
  "type": "Goals",
  "number": "",
  "title": "",
  "body": "   Use the zombie app in new ways to generate data for simulated outbreaks    Develop hypotheses for how an incubation period will affect the timeline and outcomes of an outbreak    Compare your hypotheses about the incubation period with data from your simulations    "
},
{
  "id": "fig-zombie-SEI-Day-1",
  "level": "2",
  "url": "ch-introducing-an-incubation-period-in-the-zombie-app.html#fig-zombie-SEI-Day-1",
  "type": "Figure",
  "number": "16.1",
  "title": "",
  "body": " Determining the number of New Infections on Day 1   Table of data from one day of a simulation in the human-zombie game. There are two new infections on Day 1.   "
},
{
  "id": "fig-zombie-SEI-Day-2",
  "level": "2",
  "url": "ch-introducing-an-incubation-period-in-the-zombie-app.html#fig-zombie-SEI-Day-2",
  "type": "Figure",
  "number": "16.2",
  "title": "",
  "body": " Using the results of Day 1 to determine the number of New Infections on Day 2   Table of data from one day of a simulation in the human-zombie game, using the outcome of Day 1 to determine new infections on Day 2. There is one new infection on Day 2.   "
},
{
  "id": "fig-zombie-SEI-Day-3",
  "level": "2",
  "url": "ch-introducing-an-incubation-period-in-the-zombie-app.html#fig-zombie-SEI-Day-3",
  "type": "Figure",
  "number": "16.3",
  "title": "",
  "body": " Using the results of Days 1 and 2, including re-introducing incubating individuals as zombies, to determine the number of New Infections on Day 3   Table of data from one day of a simulation in the human-zombie game, re-introducing incubating individuals as zombies, to determine new infections on Day 3. There are four new infections on Day 3.   "
},
{
  "id": "fig-zombie-SEI-Data",
  "level": "2",
  "url": "ch-introducing-an-incubation-period-in-the-zombie-app.html#fig-zombie-SEI-Data",
  "type": "Figure",
  "number": "16.4",
  "title": "",
  "body": " A sample full data set for simulating infections in a case where there is a one day incubation period as humans transition to zombies   Table of data from one sample simulation where humans have a one-day incubation period before becoming zombies. For days 0 to 10, the numbers of new infections are 1, 2, 1, 4, 5, 13, 8, 9, 5, 2, 0.   "
},
{
  "id": "ch-case-studies-vaccination-and-isolation",
  "level": "1",
  "url": "ch-case-studies-vaccination-and-isolation.html",
  "type": "Chapter",
  "number": "17",
  "title": "* Case Studies: Vaccination and Isolation",
  "body": " * Case Studies: Vaccination and Isolation    ***This chapter remains under construction. The examples are here and may be helpful, and in the future, more detailed instructions will further help students and instructors work from this chapter.***   This supplemental chapter includes three case studies of outbreaks. The first of these gives a new example of modeling using vaccination. The second example provides extra practice modeling isolation. Finally, the third example returns to vaccination, modeling a vaccine campaign that occurs during an outbreak.    A Varicella Example with Vaccination  Varicella is also known as chickenpox. describes a 2016 outbreak and the biological info about varicella that we need to help build a model. In addition, this activity asks students to use Google Colab or some other form of Python, in order to read in a data set provided externally. Instructions for how to do this are provided.    In 2016, a varicella outbreak occurred in a kindergarten in Suzhou, China. The population consisted of 738 children, of whom 664 had no prior history of varicella. Those who had a previous history of varicella were not considered susceptible. Among the susceptible children, 364 had received a single dose of the varicella vaccine before the outbreak. One dose of the vaccine is approximately effective (CDC).    Construct an SEIR model, complete with differential equations (including vaccination) and parameter values. You must do research to find sufficient values for , , etc.    Graph your model using Python:     Using Google Colab , import the actual data from the outbreak and compare the accuracy of your model. The answer below gives instructions on how to import your data.  Here's how to import data into Google Colab:   Make sure the “pandas” package is imported at the beginning of the code:     Mount Google Drive to access data files:     Load data from the file located in Google Drive: After \/content\/drive\/MyDrive, continue adding backslashes with the necessary folder names to complete the file path. For example, if your file ‘SmallpoxData.csv’ was located in a folder ‘Modeling’, your file path would be content\/drive\/MyDrive\/Modeling\/SmallpoxData.csv    Extract the column from your data representing time, as a list: Replace ‘Day’ with whatever your column is labeled.    Extract the column representing the infected population, as a list: Replace 'infected' with whatever your column is labeled.    All together, the code looks like this (also importing additional necessary packages):      Describe the similarites and differences between your model and the data of the outbreak. What are some possible changes that you could implement into your model do better fit it to the data?    How would the model change if the students who had received one shot of vaccination had instead received two? Research the effectiveness of two shots of the varicella vaccine and implement that into the model. How different would the outbreak have gone?    How might strict isolation policies have decreased the spread of the disease. Talk specifically about the movement between compartments within the model.       An Example with Strict Isolation   This case study takes a look at the impact of strict isolation measures on disease spread. When modeling this outbreak it is important to recognize that the isolation of infected individuals is not in place at day 0 of the outbreak.  On June 25, 2009, 1376 cadets arrived for a 6-week training at the military facility where an H1N1 outbreak would shortly break out. Throughout the outbreak, there were a total of 167 cases (134 confirmed and 33 suspected). A few days after a July 4th superspreader event, cases of influenza skyrocketed. After suspecting that the virus was H1N1, preventative measures started to be implemented. Starting July 7th (day 11 of the outbreak), cadets who met case definitions were isolated together in a separate dorm for at least 7 days from symptom onset, and then until they were symptom-free for 24 hours. Additional information: H1N1 typically has an -value of 1.5, and someone with H1N1 is infected for approximately 8 days (Cleveland Clinic).  Here is a link to the outbreak investigation.    List two possible ways of creating a compartmental model that incorporates strict isolation partway through the outbreak. Construct these models, create a compartmental diagram, and include their differential equations.    If an SIR model is used, the model must be adjusted to incorporate the effects of isolation measures. Which parameter(s) need to change and why? Provide and justify your choice for the new value of the parameter.    Should the transmission rate ( ) change when isolation is implemented? What are the arguments for and against changing on day 11? Simulate the model with and without changing on day 11. Analyze the differences in the results and discuss the reasoning behind keeping constant or adjusting it.     Compare your model to the outbreak data using Google Colab (instructions on how to import data would be included). How well does this model represent the actual outbreak dynamics? Which parameter could we adjust to improve the model's fit? How would this adjustment reflect the specific characteristics of this outbreak?    What might happen if isolation was implemented earlier or later in the outbreak? How would this affect the infection dynamics? Simulate the model with isolation starting on different days (e.g., days 7 and 14) and analyze the outcomes.    Identify and discuss the possible limitations of this model.       An Example with a Vaccine Campaign   This case study includes a vaccine campaign implemented part-way through the outbreak.  Between February and April 2024, a migrant shelter in Chicago experienced a sizeable measles outbreak. At the time of the index case, there were 1,801 shelter residents. Of the 1,801 residents, 784 (44%) had previous vaccination documentation. As it is unclear from the investigation, we will take this to mean that those residents with previous vaccine documentation had received one shot of the MMR vaccine. A mass vaccination campaign was initiated and completed within three days of the index cases’ confirmation and approximately 18 days of the index patient’s rash onset. The campaign vaccinated 882 residents (49%) which resulted in 1,666 (93%) of 1,801 shelter residents having vaccine documentation. Again, we will take this to mean having one dose of the MMR vaccine. The outbreak lasted ~50 days.  Here is a link to the outbreak investigation.    Using your own research of measles, list the parameter values for an SIR model as well as the starting values for each compartment. Additionally, set up the differential equations at the beginning of the outbreak.    As mentioned, there was a successful vaccination campaign that took place during the outbreak. This means that the value of increases throughout the outbreak. We know that and the start of the outbreak and and the end of the outbreak. Given that the vaccination campaign started on day 18 of the outbreak and the MMR vaccine takes approximately 2 weeks to become fully effective, find an equation that demonstrates increasing linearly between the start of the vaccination campaign and the end.    Attempt to graph this model, including your new equation, using Python.     Use Google Colab to compare your model to the data from the outbreak. Do this by importing your data: .    Add Residual Sum of Squares (RSS) and Corrected Akaike Information Criterion (AICc) to evaluate the accuracy of the model.   Code for RSS:    where n = # of observations and K = # of parameters used in the model.  Code for :        "
},
{
  "id": "intro-case-studies-vaccination-isolation-1",
  "level": "2",
  "url": "ch-case-studies-vaccination-and-isolation.html#intro-case-studies-vaccination-isolation-1",
  "type": "Paragraph (with a defined term)",
  "number": "",
  "title": "",
  "body": "***This chapter remains under construction. The examples are here and may be helpful, and in the future, more detailed instructions will further help students and instructors work from this chapter.*** "
},
{
  "id": "activity-varicella-example-with-vaccination",
  "level": "2",
  "url": "ch-case-studies-vaccination-and-isolation.html#activity-varicella-example-with-vaccination",
  "type": "Activity",
  "number": "17.1",
  "title": "",
  "body": "  In 2016, a varicella outbreak occurred in a kindergarten in Suzhou, China. The population consisted of 738 children, of whom 664 had no prior history of varicella. Those who had a previous history of varicella were not considered susceptible. Among the susceptible children, 364 had received a single dose of the varicella vaccine before the outbreak. One dose of the vaccine is approximately effective (CDC).    Construct an SEIR model, complete with differential equations (including vaccination) and parameter values. You must do research to find sufficient values for , , etc.    Graph your model using Python:     Using Google Colab , import the actual data from the outbreak and compare the accuracy of your model. The answer below gives instructions on how to import your data.  Here's how to import data into Google Colab:   Make sure the “pandas” package is imported at the beginning of the code:     Mount Google Drive to access data files:     Load data from the file located in Google Drive: After \/content\/drive\/MyDrive, continue adding backslashes with the necessary folder names to complete the file path. For example, if your file ‘SmallpoxData.csv’ was located in a folder ‘Modeling’, your file path would be content\/drive\/MyDrive\/Modeling\/SmallpoxData.csv    Extract the column from your data representing time, as a list: Replace ‘Day’ with whatever your column is labeled.    Extract the column representing the infected population, as a list: Replace 'infected' with whatever your column is labeled.    All together, the code looks like this (also importing additional necessary packages):      Describe the similarites and differences between your model and the data of the outbreak. What are some possible changes that you could implement into your model do better fit it to the data?    How would the model change if the students who had received one shot of vaccination had instead received two? Research the effectiveness of two shots of the varicella vaccine and implement that into the model. How different would the outbreak have gone?    How might strict isolation policies have decreased the spread of the disease. Talk specifically about the movement between compartments within the model.   "
},
{
  "id": "sec-example-strict-isolation",
  "level": "2",
  "url": "ch-case-studies-vaccination-and-isolation.html#sec-example-strict-isolation",
  "type": "Exploration",
  "number": "17.2",
  "title": "An Example with Strict Isolation.",
  "body": " An Example with Strict Isolation   This case study takes a look at the impact of strict isolation measures on disease spread. When modeling this outbreak it is important to recognize that the isolation of infected individuals is not in place at day 0 of the outbreak.  On June 25, 2009, 1376 cadets arrived for a 6-week training at the military facility where an H1N1 outbreak would shortly break out. Throughout the outbreak, there were a total of 167 cases (134 confirmed and 33 suspected). A few days after a July 4th superspreader event, cases of influenza skyrocketed. After suspecting that the virus was H1N1, preventative measures started to be implemented. Starting July 7th (day 11 of the outbreak), cadets who met case definitions were isolated together in a separate dorm for at least 7 days from symptom onset, and then until they were symptom-free for 24 hours. Additional information: H1N1 typically has an -value of 1.5, and someone with H1N1 is infected for approximately 8 days (Cleveland Clinic).  Here is a link to the outbreak investigation.    List two possible ways of creating a compartmental model that incorporates strict isolation partway through the outbreak. Construct these models, create a compartmental diagram, and include their differential equations.    If an SIR model is used, the model must be adjusted to incorporate the effects of isolation measures. Which parameter(s) need to change and why? Provide and justify your choice for the new value of the parameter.    Should the transmission rate ( ) change when isolation is implemented? What are the arguments for and against changing on day 11? Simulate the model with and without changing on day 11. Analyze the differences in the results and discuss the reasoning behind keeping constant or adjusting it.     Compare your model to the outbreak data using Google Colab (instructions on how to import data would be included). How well does this model represent the actual outbreak dynamics? Which parameter could we adjust to improve the model's fit? How would this adjustment reflect the specific characteristics of this outbreak?    What might happen if isolation was implemented earlier or later in the outbreak? How would this affect the infection dynamics? Simulate the model with isolation starting on different days (e.g., days 7 and 14) and analyze the outcomes.    Identify and discuss the possible limitations of this model.   "
},
{
  "id": "expl-example-vaccine-campaign",
  "level": "2",
  "url": "ch-case-studies-vaccination-and-isolation.html#expl-example-vaccine-campaign",
  "type": "Exploration",
  "number": "17.3",
  "title": "An Example with a Vaccine Campaign.",
  "body": " An Example with a Vaccine Campaign   This case study includes a vaccine campaign implemented part-way through the outbreak.  Between February and April 2024, a migrant shelter in Chicago experienced a sizeable measles outbreak. At the time of the index case, there were 1,801 shelter residents. Of the 1,801 residents, 784 (44%) had previous vaccination documentation. As it is unclear from the investigation, we will take this to mean that those residents with previous vaccine documentation had received one shot of the MMR vaccine. A mass vaccination campaign was initiated and completed within three days of the index cases’ confirmation and approximately 18 days of the index patient’s rash onset. The campaign vaccinated 882 residents (49%) which resulted in 1,666 (93%) of 1,801 shelter residents having vaccine documentation. Again, we will take this to mean having one dose of the MMR vaccine. The outbreak lasted ~50 days.  Here is a link to the outbreak investigation.    Using your own research of measles, list the parameter values for an SIR model as well as the starting values for each compartment. Additionally, set up the differential equations at the beginning of the outbreak.    As mentioned, there was a successful vaccination campaign that took place during the outbreak. This means that the value of increases throughout the outbreak. We know that and the start of the outbreak and and the end of the outbreak. Given that the vaccination campaign started on day 18 of the outbreak and the MMR vaccine takes approximately 2 weeks to become fully effective, find an equation that demonstrates increasing linearly between the start of the vaccination campaign and the end.    Attempt to graph this model, including your new equation, using Python.     Use Google Colab to compare your model to the data from the outbreak. Do this by importing your data: .    Add Residual Sum of Squares (RSS) and Corrected Akaike Information Criterion (AICc) to evaluate the accuracy of the model.   Code for RSS:    where n = # of observations and K = # of parameters used in the model.  Code for :      "
},
{
  "id": "ch-greek-letters",
  "level": "1",
  "url": "ch-greek-letters.html",
  "type": "Chapter",
  "number": "18",
  "title": "Greek Letters",
  "body": " Greek Letters    Many of our models use Greek letters. Here is a quick place to check what these letters are called.  Typically, we use lowercase letters, but this section contains uppercase letters as well.   A simple table    Letter  Lowercase  Uppercase    Alpha      Beta      Gamma      Delta      Epsilon  or     Zeta      Eta      Theta      Iota      Kappa      Lambda      Mu      Nu      Xi      Omicron      Pi      Rho      Sigma      Tau      Upsilon      Phi      Chi      Psi      Omega        "
},
{
  "id": "sec-greek-letters-4",
  "level": "2",
  "url": "ch-greek-letters.html#sec-greek-letters-4",
  "type": "Table",
  "number": "18.1",
  "title": "A simple table",
  "body": " A simple table    Letter  Lowercase  Uppercase    Alpha      Beta      Gamma      Delta      Epsilon  or     Zeta      Eta      Theta      Iota      Kappa      Lambda      Mu      Nu      Xi      Omicron      Pi      Rho      Sigma      Tau      Upsilon      Phi      Chi      Psi      Omega      "
},
{
  "id": "glossary-of-terms",
  "level": "1",
  "url": "glossary-of-terms.html",
  "type": "Glossary",
  "number": "",
  "title": "Glossary of Mathematical Epidemiology Terms",
  "body": " Glossary of Mathematical Epidemiology Terms   This glossary includes both definitions and, in many cases, examples along with fuller descriptions. The terms are listed in alphabetical order. At the end of each definition, a chapter number in parentheses indicates where the term first appeared in the text. The definitions and descriptions of the terms relate to their usage in the types of models described in this text: readers should know that some of the terms may have more broadly defined meanings in other mathematical contexts.    Basic Reproduction Number  The basic reproduction number is the average number of new infections caused by one infectious person in an otherwise entirely susceptible population. The symbol , pronounced R zero or R nought , represents the concept of the basic reproduction number, both in writing and in mathematical formulas. (Defined in , with a very brief mention at the end of )    Compartmental Diagram  A compartmental diagram is an image, typically consisting of labeled boxes and arrows, that visually represents the flow of individuals through a compartmental model . Examples include and . ( )    Compartmental Model  A compartmental model is a style of mathematical model in which the subjects of the model are grouped into categories called compartments . Such a model follows the overall outcomes for each compartment, but does not typically track the outcomes of smaller groups such as individuals. The compartmental models in this text use differential equations to demonstrate the interactions and rates governing how many individuals move from one group to another at specific points in time. As one example of a compartmental model, an SIR model consists of three compartments: S, I, and R. Most often in this text, compartment S represents Susceptible individuals, compartment I represents Infectious individuals, and compartment R represents Removed individuals. ( )    Compartments  In most models within this text, individuals are placed into categories called compartments. The individuals can typically move out of some compartments and into others, and the differential equations in compartmental models are sets of rules for the ways in which individuals are able to make such moves between compartments. ( )    Continuous  We tend to think of real-world time as continuous, meaning time does not keep stopping and starting. The compartmental models we use in most of this book show continuous time. While this sense of time matches the real world, we need to think about how to reconcile it with data sets, which typically involve discrete time steps, such as days or weeks. ( )    Discrete  We can think of time as discrete when we describe it as separate steps, such as Day 0, Day 1, or Day 2. Many data sets we work with report data in discrete time steps, such as by day or by week. We need to think through how to reconcile discrete data sets with the continuous models we most often use in this text. ( )    Effective Reproduction Number  The effective reproduction number is the average number of new infections caused by one infectious person in a population that is not entirely susceptible. The most common reason for a population to not be entirely susceptible is when some of the people have some form of immunity. Reasons for immunity may include vaccination and\/or some of the people in the population previously having the disease being studied. The symbol represents the effective reproduction number. ( )    Effectiveness  A measure of how many people within a population of vaccinated individuals get a disease, compared with how many people within a comparable population of unvaccinated individuals get the same disease, in real-world conditions . For instance, if after a vaccine has been released to the public fewer vaccinated people get the virus than do those who are unvaccinated, then the vaccine is said to have an effectiveness of . ( )    Efficacy  A measure of how many people within a population of vaccinated individuals get a disease, compared with how many people within a comparable population of unvaccinated individuals get the same disease, in a clinical trial . For instance, if in trials fewer people in the vaccinated group get a virus than do those in the unvaccinated group, then the vaccine is said to have an efficacy of . ( )    Graphical Solution  A graphical solution to a differential equation, or system of differential equations, is a curve or curves showing the behavior of the differential equation(s), based on specific parameter values and initial conditions. When parameter values change, or when initial conditions change, the graphical solution typically changes as well. A graphical solution is often called a solution , and readers should use context to know whether the word solution refers to a graphical solution, a numerical solution, or a formula. ( )    Incidence  Incidence is a measure of new cases within a specified time unit, such as new cases per day or new cases per week. For example, disease incidence can be represented as data on new infections per day, across the span of an outbreak. ( )    Initial Conditions  Initial conditions are the starting values of the dependent variables in differential equations. Within this text, our dependent variables are typically populations such as or , and the start of solutions is usually the time . This means the initial conditions are the values and . Initial conditions are used when computing a numerical solution: the numerical solution begins with the initial conditions and then steps through time, computing the later values of each dependent variable using both the earlier values and the information in the differential equations about how each dependent variable changes. ( )    Isolation  According to the U.S. Department of Health and Human Services , isolation separates sick people with a contagious disease from people who are not sick . ( )     Numerical Solution  A numerical solution to a differential equation, or system of differential equations, is a set of lists of numbers that result from approximating the outcome of the differential equation(s), given specific parameter values and initial conditions. When parameter values change, or when initial conditions change, the numerical solution typically changes as well. The lists of numbers for an SIR model, for instance, typically show the values of , , and at many values of time within the range of time values of interest. We may print some or all of the values in the lists, or we may use graphing to present the information in the lists. A numerical solution is often called a solution , and readers should use context to know whether the word solution refers to a graphical solution, a numerical solution, or a formula. ( )    Parameters  Parameters in a model are numbers, determined using biological information, that represent some aspect of how a disease progresses. In this text, most parameters are shown as Greek letters, such as or . A few parameters in this text represent percentages, such as the percentage of a population that is vaccinated against a disease, and these parameters are typically represented by lowercase letters such as or . Parameters are different than variables: the variables in our models are typically the independent variable for time, and dependent variables such as , , , and others, for populations. (First mentioned in ; further defined in )    Prevalence  Prevalence is the total number of active disease cases at a given time, which means that prevalence includes both new cases and already-existing cases. In an SIR model for a disease in which people are contagious exactly when they show disease symptoms, the compartment corresponds to disease prevalence. ( )    Quarantine  According to the U.S. Department of Health and Human Services , quarantine separates and restricts the movement of people who were exposed to a contagious disease to see if they become sick. These people may have been exposed to a disease and do not know it, or they may have the disease but do not show symptoms. ( )    Rate  A rate is, in general, a ratio between two different things. In this text, rates are parameters having units . In a model, the rate is typically multiplied by a population such as or to show the flow of that population out of one compartment and into another compartment. ( )    Sign Analysis  The word sign in sign analysis refers to whether terms in differential equations are positive ( ), negative ( ), or zero ( ). In sign analysis, we use these signs to build understanding of the differential equation. Often, our goal is to learn whether the solution to the differential equation is rising, falling, or level at some time . This understanding may help us identify which solution curve goes with which differential equation, may show when a disease starts with an outbreak or can never experience an outbreak, and may indicate many other outcomes of models. Sign analysis is powerful because it depends only on the signs of terms, without forcing us to rely on detailed data sets that may not always be available. ( )    SI Model  An SI model is a compartmental model having two compartments, labeled S and I. Most often in this text, S stands for Susceptible and I stands for Infectious , though the compartments can have other interpretations. The letters S and I are each pronounced when we say SI model : Ess  Eye model. ( )    SEIR Model  An SEIR model is a compartmental model having four compartments, labeled S, E, I, and R. Most often in this text, S stands for Susceptible , E stands for Exposed-and-incubating , I stands for Infectious , and R stands for Removed , though the compartments can have other interpretations. The letters S, E, I, and R are each pronounced when we say SEIR model : Ess  Eee  Eye  Arr model. ( )    SIR Model  An SIR model is a compartmental model having three compartments, labeled S, I, and R. Most often in this text, S stands for Susceptible , I stands for Infectious , and R stands for Removed , though the compartments can have other interpretations. The letters S, I, and R are each pronounced when we say SIR model : Ess  Eye  Arr model. ( )    Total Population  The total population of a compartmental model is the sum of the populations in each compartment. We typically use the variable to refer to total population, and we write to mean total population at time . (First mentioned in , then defined in )   "
}
]

var ptx_lunr_idx = lunr(function () {
  this.ref('id')
  this.field('title')
  this.field('body')
  this.metadataWhitelist = ['position']

  ptx_lunr_docs.forEach(function (doc) {
    this.add(doc)
  }, this)
})
